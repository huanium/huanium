(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    261765,       6765]
NotebookOptionsPosition[    247931,       6293]
NotebookOutlinePosition[    248307,       6309]
CellTagsIndexPosition[    248264,       6306]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"P", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "I"}], "*", "\[Eta]"}], "+", 
   RowBox[{"\[Xi]", "^", "2"}]}]}]], "Input",
 CellChangeTimes->{{3.7816388365679836`*^9, 3.7816388438523097`*^9}, {
   3.781639057548826*^9, 3.7816390651884875`*^9}, {3.781641489072551*^9, 
   3.781641497707405*^9}, {3.781641531617428*^9, 3.781641544273031*^9}, {
   3.7816415772177844`*^9, 3.7816416369741216`*^9}, {3.781641701979065*^9, 
   3.7816417087354336`*^9}, 3.7816454867864027`*^9, {3.7816460529553328`*^9, 
   3.781646059823662*^9}, {3.781649213963643*^9, 3.7816492177286367`*^9}, {
   3.781650127463016*^9, 3.781650138046748*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Int", "[", 
   RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"E", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "I"}], "*", 
       RowBox[{"P", "[", 
        RowBox[{"\[Eta]", ",", "\[Xi]"}], "]"}]}], ")"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Eta]", ",", 
      RowBox[{"-", "a"}], ",", "a"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Xi]", ",", 
      RowBox[{"-", "b"}], ",", "b"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7816504291756034`*^9, 3.781650434176573*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Int", "[", 
  RowBox[{"a", ",", "b"}], "]"}]], "Input",
 CellChangeTimes->{{3.781650558307914*^9, 3.781650559911585*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2"}], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"-", "1"}], ")"}], 
   RowBox[{"3", "/", "4"}]], " ", 
  SqrtBox["\[Pi]"], " ", 
  RowBox[{"Erf", "[", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     RowBox[{"1", "/", "4"}]], " ", "b"}], "]"}], " ", 
  RowBox[{"Sinh", "[", "a", "]"}]}]], "Output",
 CellChangeTimes->{3.781650560945215*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"FF", "[", "a_", "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"E", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "I"}], "*", "I", "*", "x"}], ")"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "a"}], ",", "a"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.781653144428713*^9, 3.7816531624314375`*^9}, {
  3.781653591713668*^9, 3.7816536120538764`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{"FF", "[", "a", "]"}], ",", 
    RowBox[{"a", "\[Rule]", " ", "100"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.781653615305106*^9, 3.781653631540628*^9}}],

Cell[BoxData["2.6881171418161356`*^43"], "Output",
 CellChangeTimes->{{3.781653623164379*^9, 3.781653633129399*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"E", "^", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "I"}], "*", 
      RowBox[{"x", "^", "2"}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7816531710679903`*^9, 3.7816531882752547`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], " ", 
  SqrtBox[
   FractionBox["\[Pi]", "2"]]}]], "Output",
 CellChangeTimes->{3.7816531896445255`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"Sinh", "[", "100", "]"}], "-", 
   RowBox[{"Sinh", "[", 
    RowBox[{"-", "100"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7816505738912153`*^9, 3.7816506124512634`*^9}}],

Cell[BoxData["2.6881171418161356`*^43"], "Output",
 CellChangeTimes->{{3.78165057708429*^9, 3.781650612842642*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Erf", "[", 
   RowBox[{"-", "100"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7816506216047025`*^9, 3.781650634374309*^9}}],

Cell[BoxData[
 RowBox[{"-", "1.`"}]], "Output",
 CellChangeTimes->{{3.7816506248853807`*^9, 3.781650634743969*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"t", "^", "T"}], ")"}], "*", 
    RowBox[{"E", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "I"}], "*", 
       RowBox[{"t", "^", 
        RowBox[{"(", "4", ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "A"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.781647335839615*^9, 3.7816475680889883`*^9}, {
   3.7816476243388777`*^9, 3.781647644204542*^9}, {3.781647705024701*^9, 
   3.7816477309227123`*^9}, {3.7816540790367117`*^9, 
   3.7816540885015526`*^9}, {3.781654304521821*^9, 3.781654363427745*^9}, 
   3.781654449075094*^9, {3.781654492113961*^9, 3.781654543345346*^9}, {
   3.781654601267249*^9, 3.7816546316652966`*^9}, {3.7816550869551153`*^9, 
   3.781655143183547*^9}, {3.7816551867143383`*^9, 3.7816551911381593`*^9}, {
   3.7816552956363773`*^9, 3.781655337114847*^9}, {3.7816554271544714`*^9, 
   3.7816554280915217`*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["A", 
     RowBox[{"1", "+", "T"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"HypergeometricPFQ", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           FractionBox["1", "8"], "+", 
           FractionBox["T", "8"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           FractionBox["1", "2"], ",", 
           RowBox[{
            FractionBox["9", "8"], "+", 
            FractionBox["T", "8"]}]}], "}"}], ",", 
         RowBox[{"-", 
          FractionBox[
           SuperscriptBox["A", "8"], "4"]}]}], "]"}], 
       RowBox[{"1", "+", "T"}]], "-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        SqrtBox[
         SuperscriptBox["A", "8"]], " ", 
        RowBox[{"HypergeometricPFQ", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            FractionBox["5", "8"], "+", 
            FractionBox["T", "8"]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            FractionBox["3", "2"], ",", 
            RowBox[{
             FractionBox["13", "8"], "+", 
             FractionBox["T", "8"]}]}], "}"}], ",", 
          RowBox[{"-", 
           FractionBox[
            SuperscriptBox["A", "8"], "4"]}]}], "]"}]}], 
       RowBox[{"5", "+", "T"}]]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Re", "[", "T", "]"}], ">", 
     RowBox[{"-", "1"}]}], "&&", 
    RowBox[{
     RowBox[{"Re", "[", "A", "]"}], "\[GreaterEqual]", "0"}]}]}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.781647347045345*^9, 3.7816475704630923`*^9}, {
   3.781647644500087*^9, 3.7816476575471563`*^9}, 3.781647736389928*^9, 
   3.781654109224873*^9, {3.7816543161675243`*^9, 3.7816543683443403`*^9}, 
   3.781654462015023*^9, {3.781654502398049*^9, 3.7816545491947317`*^9}, 
   3.7816546093411493`*^9, 3.78165463997552*^9, {3.7816550943628054`*^9, 
   3.7816551331192956`*^9}, 3.7816551836741066`*^9, 3.7816552533480797`*^9, {
   3.7816553009269776`*^9, 3.7816553196734514`*^9}, 3.7816553937573795`*^9, 
   3.7816554314307256`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"E", "^", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "I"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x", "^", "2"}], "+", 
        RowBox[{"y", "^", "2"}]}], ")"}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7816486072640686`*^9, 3.781648651221013*^9}, {
  3.7816488112659087`*^9, 3.781648816952653*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{{3.7816486398321695`*^9, 3.781648654099394*^9}, 
   3.781648821262897*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2", "*", 
     RowBox[{"Pi", "^", 
      RowBox[{"(", 
       RowBox[{"2", "/", "2"}], ")"}]}]}], ")"}], "/", 
   RowBox[{"Gamma", "[", 
    RowBox[{"2", "/", "2"}], "]"}]}], "*", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"E", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "I"}], "*", "r"}], ")"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7816486604400196`*^9, 3.781648700716442*^9}, {
  3.7816488952448893`*^9, 3.781648899641472*^9}, {3.7816489884904795`*^9, 
  3.781649004498825*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Integrate", "::", "idiv"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Integral of \[NoBreak]\\!\\(\[ExponentialE]\\^\\(\\(\\(-\
\[ImaginaryI]\\)\\)\\\\ r\\)\\)\[NoBreak] does not converge on \
\[NoBreak]\\!\\({0, \[Infinity]}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Integrate/idiv\\\", ButtonNote -> \
\\\"Integrate::idiv\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.7816489002708645`*^9, {3.7816490001715846`*^9, 3.781649005847842*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", "\[Pi]", " ", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "r"}]], 
    RowBox[{"\[DifferentialD]", "r"}]}]}]}]], "Output",
 CellChangeTimes->{
  3.7816487017004633`*^9, {3.7816488958853283`*^9, 3.7816489002708645`*^9}, {
   3.7816490001715846`*^9, 3.781649005847842*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "\[ImaginaryI]"}], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
     "T"}]], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{"1", "+", "T"}], "]"}]}], "//", "TeXForm"}]], "Input",
 CellChangeTimes->{{3.78165442049666*^9, 3.781654424028595*^9}}],

Cell["-i e^{-\\frac{1}{2} i \\pi  T} \\Gamma (T+1)", "Output",
 CellChangeTimes->{3.7816544245882807`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "\[ImaginaryI]"}], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
     "T"}]], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{"1", "+", "T"}], "]"}]}], "//", "TeXForm"}]], "Input",
 CellChangeTimes->{{3.7816544690219765`*^9, 3.7816544722909403`*^9}}],

Cell["-i e^{-\\frac{1}{2} i \\pi  T} \\Gamma (T+1)", "Output",
 CellChangeTimes->{3.781654473030596*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CapitalLambda]", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"d2", "*", "d3"}], ")"}], "*", 
     RowBox[{"t", "^", 
      RowBox[{"(", 
       RowBox[{"1", "/", "d1"}], ")"}]}], "*", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "*", 
     RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"d1", "*", "d3"}], ")"}], "*", 
     RowBox[{"t", "^", 
      RowBox[{"(", 
       RowBox[{"1", "/", "d2"}], ")"}]}], "*", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "*", 
     RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"d1", "*", "d2"}], ")"}], 
     RowBox[{"t", "^", 
      RowBox[{"(", 
       RowBox[{"1", "/", "d3"}], ")"}]}], "*", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7823454330107327`*^9, 3.782345535859226*^9}, {
  3.782345722293614*^9, 3.7823457233900027`*^9}, {3.7823459036687713`*^9, 
  3.782345912949169*^9}, {3.782346044420817*^9, 3.7823460488193645`*^9}, {
  3.7823461204712906`*^9, 3.782346136027795*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"d2", " ", "d3", " ", 
    SuperscriptBox["t", 
     FractionBox["1", "d1"]], " ", 
    RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
   RowBox[{"d1", " ", "d3", " ", 
    SuperscriptBox["t", 
     FractionBox["1", "d2"]], " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
    RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
   RowBox[{"d1", " ", "d2", " ", 
    SuperscriptBox["t", 
     FractionBox["1", "d3"]], " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.7823457239792805`*^9, 3.7823459133692045`*^9, 
  3.7823460499875593`*^9, 3.782346136519573*^9, 3.782838838583894*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"S", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"t", "^", 
      RowBox[{"(", 
       RowBox[{"1", "/", "d1"}], ")"}]}], "*", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
    RowBox[{
     RowBox[{"t", "^", 
      RowBox[{"(", 
       RowBox[{"1", "/", "d2"}], ")"}]}], "*", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7823461994462175`*^9, 3.782346226290112*^9}, {
  3.7823462818194323`*^9, 3.782346301019597*^9}, {3.7823463553960543`*^9, 
  3.7823463595072813`*^9}, {3.782346409267709*^9, 3.782346425689432*^9}, {
  3.7823470156791153`*^9, 3.7823470587091894`*^9}, {3.782347710306773*^9, 
  3.7823477231691165`*^9}, {3.7823478683464766`*^9, 3.78234787161889*^9}, {
  3.782348935595058*^9, 3.782348937873515*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["t", 
     FractionBox["1", "d1"]], " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
   RowBox[{
    SuperscriptBox["t", 
     FractionBox["1", "d2"]], " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.782346227283169*^9, {3.7823462880888934`*^9, 3.782346314539251*^9}, 
   3.782346360109358*^9, {3.7823464109494963`*^9, 3.7823464260484877`*^9}, {
   3.7823470213769293`*^9, 3.7823470594073505`*^9}, 3.78234772364867*^9, 
   3.782347872669054*^9, {3.782348938614361*^9, 3.7823489528643265`*^9}, 
   3.782838840925062*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GenS", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"t", "^", 
      RowBox[{"(", 
       RowBox[{"1", "/", "d1"}], ")"}]}], "*", 
     RowBox[{
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", 
      RowBox[{"(", 
       RowBox[{"2", "/", "d1"}], ")"}]}]}], ",", 
    RowBox[{
     RowBox[{"t", "^", 
      RowBox[{"(", 
       RowBox[{"1", "/", "d2"}], ")"}]}], "*", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]", "]"}], "^", 
      RowBox[{"(", 
       RowBox[{"2", "/", "d2"}], ")"}]}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7828386408565083`*^9, 3.7828387127742505`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["t", 
     FractionBox["1", "d1"]], " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], 
     RowBox[{"2", "/", "d1"}]]}], ",", 
   RowBox[{
    SuperscriptBox["t", 
     FractionBox["1", "d2"]], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], 
     RowBox[{"2", "/", "d2"}]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.7828387163573456`*^9, 3.78283884254423*^9, 
  3.7828389259366627`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CdS", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"t", ",", "\[Theta]"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.782346230258091*^9, 3.7823462359431615`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"t", ",", "\[Theta]"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7823462367494116`*^9, {3.782346289069964*^9, 3.782346318053424*^9}, 
   3.7823463609791117`*^9, 3.782346426869301*^9, 3.782347022940749*^9, 
   3.782347061869506*^9, 3.7823477245403605`*^9, 3.782347874119297*^9, 
   3.782348953894552*^9, 3.7828387466022186`*^9, 3.782838848605813*^9, 
   3.7828389288165636`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cd", "=", 
  RowBox[{"{", 
   RowBox[{"t", ",", "\[Theta]", ",", "\[Phi]"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.782345726889406*^9, 3.782345741129097*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"t", ",", "\[Theta]", ",", "\[Phi]"}], "}"}]], "Output",
 CellChangeTimes->{3.7823457426522245`*^9, 3.782345914317922*^9, 
  3.7823460510617714`*^9, 3.7823461375660987`*^9, 3.7828388904845796`*^9, 
  3.782838930124794*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"JacobianMatrix", "[", 
    RowBox[{
     RowBox[{"f_List", "?", "VectorQ"}], ",", "x_List"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Outer", "[", 
     RowBox[{"D", ",", "f", ",", "x"}], "]"}], "/;", 
    RowBox[{"Equal", "@@", 
     RowBox[{"(", 
      RowBox[{"Dimensions", "/@", 
       RowBox[{"{", 
        RowBox[{"f", ",", "x"}], "}"}]}], ")"}]}]}]}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"JacobianDeterminant", "[", 
   RowBox[{
    RowBox[{"f_List", "?", "VectorQ"}], ",", "x_List"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Det", "[", 
    RowBox[{"JacobianMatrix", "[", 
     RowBox[{"f", ",", "x"}], "]"}], "]"}], "/;", 
   RowBox[{"Equal", "@@", 
    RowBox[{"(", 
     RowBox[{"Dimensions", "/@", 
      RowBox[{"{", 
       RowBox[{"f", ",", "x"}], "}"}]}], ")"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.7823457799294543`*^9, 3.7823457799294543`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"JS", " ", "=", " ", 
  RowBox[{"JacobianMatrix", "[", 
   RowBox[{"S", ",", "CdS"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7823462411494465`*^9, 3.782346249499456*^9}, {
   3.7828387578619084`*^9, 3.7828387586769333`*^9}, 3.7828458077578697`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["t", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         FractionBox["1", "d1"]}]], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "d1"], ",", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["t", 
        FractionBox["1", "d1"]]}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["t", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         FractionBox["1", "d2"]}]], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "d2"], ",", 
     RowBox[{
      SuperscriptBox["t", 
       FractionBox["1", "d2"]], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7823462500191708`*^9, {3.7823462920370054`*^9, 3.782346363049139*^9}, {
   3.7823464140258007`*^9, 3.782346429274805*^9}, 3.7823470249189706`*^9, 
   3.78234706389884*^9, 3.7823477268990016`*^9, 3.7823478766095047`*^9, {
   3.782348942094138*^9, 3.782348956297993*^9}, {3.7828387539377193`*^9, 
   3.782838759622453*^9}, 3.7828388087009954`*^9, 3.7828388534658537`*^9, {
   3.7828389141640205`*^9, 3.7828389339134493`*^9}, 3.7828458087908015`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"JS", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.7828458116757116`*^9, 3.7828458157206798`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{
        SuperscriptBox["t", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          FractionBox["1", "d1"]}]], " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "d1"], 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["t", 
         FractionBox["1", "d1"]]}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]},
     {
      FractionBox[
       RowBox[{
        SuperscriptBox["t", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          FractionBox["1", "d2"]}]], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "d2"], 
      RowBox[{
       SuperscriptBox["t", 
        FractionBox["1", "d2"]], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7828458169461117`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"JS", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.7828390462168093`*^9, 3.78283904831771*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{
        SuperscriptBox["t", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          FractionBox["1", "d1"]}]], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], 
         RowBox[{"2", "/", "d1"}]]}], "d1"], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", 
         SuperscriptBox["t", 
          FractionBox["1", "d1"]], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           FractionBox["2", "d1"]}]], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "d1"]}]},
     {
      FractionBox[
       RowBox[{
        SuperscriptBox["t", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          FractionBox["1", "d2"]}]], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], 
         RowBox[{"2", "/", "d2"}]]}], "d2"], 
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["t", 
         FractionBox["1", "d2"]], " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          FractionBox["2", "d2"]}]]}], "d2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.782839048646285*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Det", "[", "JS", "]"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.7828389439884043`*^9, 3.7828389681399355`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", 
   SuperscriptBox["t", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     FractionBox["1", "d1"], "+", 
     FractionBox["1", "d2"]}]], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "\[Theta]", "]"}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     FractionBox["2", "d1"]}]], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "\[Theta]", "]"}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     FractionBox["2", "d2"]}]]}], 
  RowBox[{"d1", " ", "d2"}]]], "Output",
 CellChangeTimes->{{3.7828389466981945`*^9, 3.7828389685996895`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"JacobianDeterminant", "[", 
  RowBox[{"JS", ",", "CdS"}], "]"}]], "Input",
 CellChangeTimes->{{3.7823462660094137`*^9, 3.782346272634282*^9}, {
  3.7823470712690887`*^9, 3.78234707249898*^9}, {3.7823491661737924`*^9, 
  3.78234916764437*^9}, {3.782349278732697*^9, 3.782349280017273*^9}, {
  3.78283877191499*^9, 3.782838783377983*^9}, {3.7828388674033456`*^9, 
  3.7828388689410152`*^9}}],

Cell[BoxData[
 RowBox[{"JacobianDeterminant", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{
         SuperscriptBox["t", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           FractionBox["1", "d1"]}]], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], 
          RowBox[{"2", "/", "d1"}]]}], "d1"], ",", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", 
          SuperscriptBox["t", 
           FractionBox["1", "d1"]], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            FractionBox["2", "d1"]}]], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "d1"]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{
         SuperscriptBox["t", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           FractionBox["1", "d2"]}]], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], 
          RowBox[{"2", "/", "d2"}]]}], "d2"], ",", 
       FractionBox[
        RowBox[{"2", " ", 
         SuperscriptBox["t", 
          FractionBox["1", "d2"]], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           FractionBox["2", "d2"]}]]}], "d2"]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "\[Theta]"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.782346273002846*^9, 3.7823463227439594`*^9}, 
   3.782346365320244*^9, {3.782346415881261*^9, 3.7823464309995413`*^9}, 
   3.78234703051534*^9, {3.782347069108745*^9, 3.782347072949212*^9}, 
   3.782347729338923*^9, 3.782347881159322*^9, 3.7823489441443343`*^9, 
   3.782349167964218*^9, 3.7823492807521954`*^9, {3.782838784174517*^9, 
   3.7828388118778825`*^9}, 3.7828388709997063`*^9, {3.7828389100661736`*^9, 
   3.7828389377186947`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"J", " ", "=", 
  RowBox[{
   RowBox[{"JacobianMatrix", "[", 
    RowBox[{"\[CapitalLambda]", ",", "Cd"}], "]"}], "//", 
   "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.782345786137493*^9, 3.7823458432093735`*^9}, {
  3.782845777510929*^9, 3.7828457807130537`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{"d2", " ", "d3", " ", 
        SuperscriptBox["t", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          FractionBox["1", "d1"]}]], " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "d1"], 
      RowBox[{"d2", " ", "d3", " ", 
       SuperscriptBox["t", 
        FractionBox["1", "d1"]], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}]}], 
      RowBox[{
       RowBox[{"-", "d2"}], " ", "d3", " ", 
       SuperscriptBox["t", 
        FractionBox["1", "d1"]], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}]},
     {
      FractionBox[
       RowBox[{"d1", " ", "d3", " ", 
        SuperscriptBox["t", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          FractionBox["1", "d2"]}]], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "d2"], 
      RowBox[{"d1", " ", "d3", " ", 
       SuperscriptBox["t", 
        FractionBox["1", "d2"]], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}], 
      RowBox[{"d1", " ", "d3", " ", 
       SuperscriptBox["t", 
        FractionBox["1", "d2"]], " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]},
     {
      FractionBox[
       RowBox[{"d1", " ", "d2", " ", 
        SuperscriptBox["t", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          FractionBox["1", "d3"]}]], " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "d3"], 
      RowBox[{
       RowBox[{"-", "d1"}], " ", "d2", " ", 
       SuperscriptBox["t", 
        FractionBox["1", "d3"]], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.782345824073713*^9, 3.7823458436581593`*^9}, 
   3.782345918038844*^9, 3.782346052659358*^9, 3.7823461388790426`*^9, 
   3.7828388262723427`*^9, 3.7828388934929404`*^9, 3.782845782075431*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"J", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.782345990653401*^9, 3.7823459951748047`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{"d2", " ", "d3", " ", 
        SuperscriptBox["t", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          FractionBox["1", "d1"]}]], " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "d1"], 
      RowBox[{"d2", " ", "d3", " ", 
       SuperscriptBox["t", 
        FractionBox["1", "d1"]], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}]}], 
      RowBox[{
       RowBox[{"-", "d2"}], " ", "d3", " ", 
       SuperscriptBox["t", 
        FractionBox["1", "d1"]], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}]},
     {
      FractionBox[
       RowBox[{"d1", " ", "d3", " ", 
        SuperscriptBox["t", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          FractionBox["1", "d2"]}]], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "d2"], 
      RowBox[{"d1", " ", "d3", " ", 
       SuperscriptBox["t", 
        FractionBox["1", "d2"]], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}], 
      RowBox[{"d1", " ", "d3", " ", 
       SuperscriptBox["t", 
        FractionBox["1", "d2"]], " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]},
     {
      FractionBox[
       RowBox[{"d1", " ", "d2", " ", 
        SuperscriptBox["t", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          FractionBox["1", "d3"]}]], " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "d3"], 
      RowBox[{
       RowBox[{"-", "d1"}], " ", "d2", " ", 
       SuperscriptBox["t", 
        FractionBox["1", "d3"]], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7823459954659047`*^9, 3.782346053869726*^9, 
  3.782346139969414*^9, 3.782838828665368*^9, 3.782838898120472*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"JacobianDeterminant", "[", 
   RowBox[{"\[CapitalLambda]", ",", "Cd"}], "]"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.782345825860964*^9, 3.782345892228448*^9}}],

Cell[BoxData[
 RowBox[{"d1", " ", "d2", " ", "d3", " ", 
  SuperscriptBox["t", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    FractionBox["1", "d1"], "+", 
    FractionBox["1", "d2"], "+", 
    FractionBox["1", "d3"]}]], " ", 
  RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"d1", " ", "d2", " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
    RowBox[{"d3", " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"d2", " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"]}], "+", 
       RowBox[{"d1", " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]}], ")"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.7823458302367306`*^9, 3.782345836868829*^9}, {
   3.7823458821094723`*^9, 3.7823459193695283`*^9}, 3.7823460571192408`*^9, 
   3.782346142821325*^9, 3.7828389003613534`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "2"}], ")"}], "*", 
     RowBox[{
      RowBox[{"Cos", "[", "t", "]"}], "^", "2"}]}], " ", "+", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "4"}], ")"}], "*", 
     RowBox[{
      RowBox[{"Sin", "[", "t", "]"}], "^", "2"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.782347595168738*^9, 3.7823476272291183`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"3", " ", "\[Pi]"}], "4"]], "Output",
 CellChangeTimes->{{3.7823476142577653`*^9, 3.7823476277406797`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"1", "/", "16"}], ")"}], "*", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"t", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", "/", "4"}]}], ")"}]}], "*", 
     RowBox[{"E", "^", 
      RowBox[{"(", 
       RowBox[{"I", "*", "t", "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "th", "]"}], "^", "4"}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", "th", "]"}], "^", "4"}]}], ")"}]}], ")"}]}]}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "Infinity"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"th", ",", "0", ",", 
      RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.782356357389352*^9, 3.7823563635561466`*^9}, {
  3.7823566585435696`*^9, 3.7823566609163666`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"2", "+", 
    RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
  SqrtBox[
   RowBox[{"2", " ", "\[Pi]"}]], " ", 
  RowBox[{
   InterpretationBox[
    StyleBox["EllipticK",
     ShowAutoStyles->False,
     AutoSpacing->False],
    EllipticK,
    Editable->False], "[", 
   FractionBox["1", "2"], "]"}]}]], "Output",
 CellChangeTimes->{3.782356374277505*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"t", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", "/", "6"}]}], ")"}]}], "*", 
    RowBox[{"E", "^", 
     RowBox[{"(", 
      RowBox[{"I", "*", "t", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "th", "]"}], "^", "6"}], "+", 
         RowBox[{
          RowBox[{"Sin", "[", "th", "]"}], "^", "6"}]}], ")"}]}], ")"}]}]}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "Infinity"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"th", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7823564129327755`*^9, 3.782356416405048*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", 
   SuperscriptBox["\[Pi]", "2"], " ", 
   RowBox[{
    InterpretationBox[
     StyleBox["Hypergeometric2F1",
      ShowAutoStyles->False,
      AutoSpacing->False],
     Hypergeometric2F1,
     Editable->False], "[", 
    RowBox[{
     FractionBox["1", "6"], ",", 
     FractionBox["2", "3"], ",", "1", ",", 
     FractionBox["9", "25"]}], "]"}], " ", 
   RowBox[{"Root", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"110592", "+", 
       RowBox[{"25", " ", 
        SuperscriptBox["#1", "6"]}]}], "&"}], ",", "1"}], "]"}]}], 
  RowBox[{
   InterpretationBox[
    StyleBox["Gamma",
     ShowAutoStyles->False,
     AutoSpacing->False],
    Gamma,
    Editable->False], "[", 
   RowBox[{"-", 
    FractionBox["1", "3"]}], "]"}]]], "Output",
 CellChangeTimes->{3.7823564222965765`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"t", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", "/", "8"}]}], ")"}]}], "*", 
    RowBox[{"E", "^", 
     RowBox[{"(", 
      RowBox[{"I", "*", "t", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "th", "]"}], "^", "8"}], "+", 
         RowBox[{
          RowBox[{"Sin", "[", "th", "]"}], "^", "8"}]}], ")"}]}], ")"}]}]}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "Infinity"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"th", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7823514811110315`*^9, 3.782351594784647*^9}, {
  3.78235175497628*^9, 3.7823518328003874`*^9}, {3.7823519096407766`*^9, 
  3.7823519477515974`*^9}, {3.7823520226947136`*^9, 3.782352026905014*^9}, {
  3.7823520606257277`*^9, 3.782352064465299*^9}}],

Cell[BoxData[
 RowBox[{"32", " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"-", "1"}], ")"}], 
   RowBox[{"1", "/", "8"}]], " ", 
  SuperscriptBox[
   RowBox[{
    InterpretationBox[
     StyleBox["Gamma",
      ShowAutoStyles->False,
      AutoSpacing->False],
     Gamma,
     Editable->False], "[", 
    FractionBox["9", "8"], "]"}], "2"]}]], "Output",
 CellChangeTimes->{{3.782351546814983*^9, 3.7823515889536743`*^9}, 
   3.78235164003166*^9, {3.782351768017736*^9, 3.782351813022561*^9}, 
   3.782351906866894*^9, {3.7823519402544346`*^9, 3.782351955123962*^9}, 
   3.7823520317047625`*^9, 3.782352444299225*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"t", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", "/", "10"}]}], ")"}]}], "*", 
    RowBox[{"E", "^", 
     RowBox[{"(", 
      RowBox[{"I", "*", "t", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "th", "]"}], "^", "10"}], "+", 
         RowBox[{
          RowBox[{"Sin", "[", "th", "]"}], "^", "10"}]}], ")"}]}], ")"}]}]}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "Infinity"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"th", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7823564316287885`*^9, 3.7823564361253805`*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.7823574610729275`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"EllipticK", "[", 
   RowBox[{"1", "/", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7823519991027107`*^9, 3.782352008976215*^9}}],

Cell[BoxData["1.8540746773013717`"], "Output",
 CellChangeTimes->{{3.7823520049150295`*^9, 3.7823520092547665`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Root", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"110592", "+", 
      RowBox[{"25", " ", 
       SuperscriptBox["#1", "6"]}]}], "&"}], ",", "1"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.782352046046588*^9, 3.782352049200184*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "3.508821285855439`"}], "-", 
  RowBox[{"2.0258189139269267`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.7823520443376827`*^9, 3.782352049504285*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"E", "^", 
    RowBox[{"(", 
     RowBox[{"I", "*", "t"}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.782354372431698*^9, 3.782354384976881*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Integrate", "::", "idiv"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Integral of \[NoBreak]\\!\\(\[ExponentialE]\\^\\(\
\[ImaginaryI]\\\\ t\\)\\)\[NoBreak] does not converge on \[NoBreak]\\!\\({0, \
\[Infinity]}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Integrate/idiv\\\", ButtonNote -> \
\\\"Integrate::idiv\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.782354385853445*^9}],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "t"}]], 
   RowBox[{"\[DifferentialD]", "t"}]}]}]], "Output",
 CellChangeTimes->{3.782354385857436*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Cos", "[", "t", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.782354486460108*^9, 3.782354496521706*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Integrate", "::", "idiv"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Integral of \
\[NoBreak]\\!\\(\\(\\(\\*InterpretationBox[StyleBox[\\(Cos\\), \
Rule[AutoSpacing, False], Rule[ShowAutoStyles, False]], Cos, Rule[Editable, \
False]]\\)\\)[t]\\)\[NoBreak] does not converge on \[NoBreak]\\!\\({0, \
\[Infinity]}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Integrate/idiv\\\", ButtonNote -> \
\\\"Integrate::idiv\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7823544968706017`*^9}],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
  RowBox[{
   RowBox[{
    InterpretationBox[
     StyleBox["Cos",
      ShowAutoStyles->False,
      AutoSpacing->False],
     Cos,
     Editable->False], "[", "t", "]"}], 
   RowBox[{"\[DifferentialD]", "t"}]}]}]], "Output",
 CellChangeTimes->{3.7823544968735943`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "t", "]"}], "^", 
    RowBox[{"(", 
     RowBox[{"1", "/", "6"}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7823574449705877`*^9, 3.782357479652442*^9}, {
  3.7823575345956106`*^9, 3.782357537340725*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
SMni9E/9wFDbw3lvnoT+//+h/wMPfHLT
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.5},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {0.5177939871486925, 0.9999999797071426}}, {{
     0, 6.283185307179586}, {0.5177939871486925, 0.9999999797071426}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7823574649388804`*^9, 3.782357480009883*^9}, {
  3.78235753514119*^9, 3.782357537678233*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"P1", "=", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"2", "t"}], "]"}], ",", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", "t"}], "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", 
      RowBox[{"Pi", "/", "4"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7823586353415403`*^9, 3.7823586366914215`*^9}, {
   3.782358668369623*^9, 3.7823586898028655`*^9}, 3.782358775947406*^9, {
   3.782358842899418*^9, 3.782358847418017*^9}, {3.782359171091757*^9, 
   3.7823591711481524`*^9}, {3.7823593064032907`*^9, 3.782359329859711*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
     "]]}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{0., 1.}, {0., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.782358680525241*^9, 3.782358693228835*^9}, 
   3.782358777207974*^9, 3.7823588477419744`*^9, 3.7823591715756693`*^9, {
   3.782359306988815*^9, 3.7823593305663204`*^9}, 3.782359370319715*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"P2", "=", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"2", "t"}], "]"}], ",", 
      RowBox[{"-", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"-", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", "t"}], "]"}]}], "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{"Pi", "/", "4"}], ",", 
      RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7823591776106677`*^9, 3.7823591902197328`*^9}, {
  3.7823592557637615`*^9, 3.7823592722672825`*^9}, {3.7823593368028364`*^9, 
  3.782359359106732*^9}, {3.782360041026249*^9, 3.7823600420114117`*^9}, {
  3.7823601060982275`*^9, 3.7823601073071156`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1:eJwd13c8Vu8bB3AtKWkoqcRX8UVS8jVS5EJR6gkpItKQdogoZCWSihQZLTtE
9sq4eMweWzxmRvZ6jk0iv7vf+ee83n+dc33u+7rOfXZcNtcxXcrGxsa/hI3t
7/2hYOPi4iIFwpds3xpuu4f++Un5fz13RPBphe0b1FxZxv7XHjq4ku/bR1z4
fqxqgdj1dcbJUZswvCwhwTdPbBrxla/CNhIFeK0HfxFPdbqmjQlGY8Y7oUMz
xMtdxrwp98/4vmT/xkniIrmSFd5ZcSgYnnh7lHhVZN+7Ld/i0UbZR2OYmJmr
cle/JQGzYpnRfcRsXwsCigoTcXzO5cVP4gPPRU4yQpNwCbyebCXear3217BN
MiZ7rW5nEvObhGy+opqCmUv6adXEAsufXdrNnopRibuVvhErKj/U5i5IxYXM
elIwBUvYLqkV26bhFvnemEzi8j1bBprE0/HQifMiicRKfHeDGMx0DNyk8G8U
cWquodtyxww8mO706QNxTFpJYY9gJvLo747zJU7/PleTh5nILqAk50l8TDPO
vO3cV+TIDay1Ila1fJ7R6p6Fx6ifPdeIO2aLksS3ZOOvidcPDYmFmI3x/pHZ
2H1wr4wK8fUAXx2rrBy07uLVlf6bxzLuLbtVc1FU4uYvYWLMjFrqV5yLd500
ytmJI2ruUmOliM8WmXPTfyg4kgt6z4XysHh1ZWwvMZ3Rkht7KQ9t6b+CCom1
Fq/bK7XkYdDE3oYk4jRZix765nzcl1n5Jph4VXZ5lN2pfOz+RyvYjtjJTaY6
rDAf68/sG7xKXBfIoAst5GO7mkO6DvEuWx2VSRk6ZgUYtooRaw4E3/kYSkeB
jdJaVQsU5M3bf0m3KUD+PfYp6cS3puyX68cUoGWc1PuPxLOXlnFa/ihA1XND
s3eI74gyFnaqFuJNgXdNy/9aOoXjx4oi/M57+dzAPAVfDE7MJMgWIc/bQOMK
4inO2dqtpkXYNWk89poY8yb3p9KLcP6sljIfcY7UYru+bTFWntks/es3Bbzo
xtkSXYx9Wg6vmcRcHC6c003FeClnz3tv4uAjCY/ZDpTgtJl43dwcBbpDyzo/
jZegstoymTriplH+eSnBUkzTc1kSRyxvL/vs6slSPPnbvMeI2G6VpAEzshSL
vHbXpP6i4KLJ+EM2vW+Yaa76wZO4WyfFea3LN9xrsbzJmHiYdx9P3edv6DDx
3H8F8VuPAudnbAw87FMsT5uloIrfn1UVyUCT3YFrcqfJei/J3JbSV4ajoUUp
T4lX1m92rVhbjn2zMYwzxLMd3nYJsuWozRkOA1MUnCvuecF8VI66Qzc1OYlV
9AqOft1Wga5ye9hkJihY+tDr/BOVSpSpNn48PU7BA3pC2RvTSgwLN7DJIO6V
enPB/mklalvEhx0kLr1sQiuursQzR38LyY+R/XEjqMzyfBUWiG/L5qUo8OYx
fVm+vxrXL/1dVc+i4DnfZVvno9V4T8Dyymviz6GL4v+erUYfmug6LmLROEdf
FZtqTJ5h3JobpmDtj1ucZcnVuLl5QDVnkIISWpiLqkQNNvnGX7QiTjR9GsKj
UIOKG/kXxYhfvx3sb9GowcXFiZxXAxQs3JgyV71WgzeeJx2+2E/BvVMPKu1C
alDsmbNFVw8FO0RKY5I21iLP1KlAH2LpD4oWxTtq8ej7NlUgjg2XlKiSrMUX
5Xu3BHZTYCK1fxhP1KIZd1WZeheZR7teyO9wrUUnvgP6nh0UWB41U5yhanHP
wZvrkpop2GnZG/SI/h3T5rSUdIhnlGcO/lP1HTVLuSbGmsj63viclNzyHUNP
8bIkif94DpgWTn5H5UlP8cgG0r/NDHt3kTpcLauSa19H5q1lT02gRx1ye8Qb
llWQ/AOK5PSP1mNis9sxI2Itw0PCq0/XYznLNGu4nPTHoPmjVON6dFhzXHoN
8eov27JmreuRZlhzS41B5pN616H/wutxnZTRkpBiCm7UCUrbLdZj5XA+Yz6X
5Pvg9MYPiUys81vMtyKeV8lpcMhhYo/+wq7BHArW1w7Jn/3GRO0uVVp9Nsl7
wnx2uoOJ8z4Hm8O/UsDIf2wztK4B93VzCOxKI/0jkGGVcLsB5ZRXny2OpWBk
in1T745GNOSRvLWb+FqcnffqPY2o7XZ11PszBf6HRFN2yTfi571bNM/GkDxU
Enj0NRvx5rI6vfZPpL9VfBes7RrxQbNgcF0oBQUTCSezaxrxzisJkTMBFIg4
VZ37+LAJ71mJsJL8yfsGzq2wdG/CU6snD2wgZjJKM5RfNmGmxqbz5X4U5O4Z
Vq8Na8IjnPE1iq8p6FsscCxmNKHCV1cbdi8K3AOsuWZ4m7GtMjdP0ZWCEDWP
AN/4ZgzKFeJ4/ogCGfaz4qMZzSj2JP57swsF+/9MqxyjN+Mbd/UZG2cKBjs+
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
zpJy/9ZntElaJDJEke3/1yj+D8BRGQY=
     "]]}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{0., 0.999999999709885}, {-1., 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7823591917969985`*^9, {3.78235925665161*^9, 3.7823592731282563`*^9}, {
   3.7823593374068317`*^9, 3.7823593722923236`*^9}, 3.78236008496636*^9, 
   3.782360183405575*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"P3", "=", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"2", "t"}], "]"}], ",", 
      RowBox[{"-", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"-", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", "t"}], "]"}]}], "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{"Pi", "/", "2"}], ",", 
      RowBox[{"3", 
       RowBox[{"Pi", "/", "4"}]}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.782358699602615*^9, 3.7823587101238403`*^9}, 
   3.7823587876433725`*^9, {3.7823588285726476`*^9, 3.7823588582266617`*^9}, {
   3.78235934549229*^9, 3.782359367250603*^9}, {3.782359448650786*^9, 
   3.7823594576183186`*^9}, {3.782359494411187*^9, 3.7823595206998405`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1:eJw12Hk0Ve3bB3BjeAqZUgkVUREPSeVJIaJSKTQhQlKR0iBDMkTJUIaSMZVk
LHMyfWWeM89zZsfZIWWIfnfvWu/556zP2mudfa69131f3+veZGpz6hITAwOD
GCMDw99vNkP+nRIxr/cx/N/nO6q5xe4FBRxArkl7358/FNR74pWCAk4g3e2S
+1+3Dm7rpSedgfyl6JFlYhfmSvXAAGOwsb3g/Gv77tzgsBwzeFsozf4mvum8
X2Uy6TJCXf0jF4kTW7x99kddQ6h+GMcC8cvuQ9ZPA2xwr/eM4hzxptLHYzaF
NxEtVCb+k7iGfqg1OOcW1q4Ya5oh1h2RuYf0O9ALzTs0RWya5F88nGSHC43q
DnTi2YMF6Zzv7VGY4GwzQWz5caWqQpQjXghfkxgl3r5amdsl4AHupRmQAimI
ew1ENZS4QKfCuLmL+BlD65x5oSu2Gq4JbCNus7zV/DjHHbtaQ3W/EnNaWp1a
n/UQFkmWpyuJby1+ck5I98DzrtH1JcRhrGPN1UmPkLiBYewzsVeQ6Lxh/GOU
CwZPpxELjRzJpcV4QVOlLy+JWHbNZr6VUd4IH30cEkV89bNasFrAU5hLyJMH
ToElW/P9Zc1niBE95+RI/Lj2SVFSyTPot8np3yJ+cHaP4t5Cf/zWnDtqSvy+
9kqtdk4gJjRajykTr8yRmX+2NwjmZk9sdxLnTsk3N30Kwlwa/ew24qjwIyEG
6c+h9qryKj8xR9V3oUtJwfA5V/NmZJlCQf9YaIzUS5yrZWvuJH64uSRnJO4l
fKqmy78ShyTc6rSMCUEFQ8dsJjHrrwlDi1dhOP9+3MyNWNlSMlvb/xUSO5ee
cRIPMRiV8XJGIfqprtfvJQrjqnKjziej8MDm2p4J4qy1L7ROd0TBla8/u4z4
3yweU0baa4hY9ercJ87V7RjS5I7GQ3mmLx2/KeQwckl81I3G+VCLLSXE32T/
41jzMhoy5k9UPhL/NxyRNrDxHQ7qcYe5Ed/i1LprJx+De8vs/VuIhT+ceO2r
HwtePp/kC4sUaK6mzvSQWPRH1rioE69Y1Tt+vCcWP9ZVsW0nXhMgZ811OQ4C
43N7fyxQOLeKefbRvXg4b14n60Gs2R74xywsERsP7zQMmafwU8v0s8GNZOip
DOPJLwp6goyOKs+SsbiK88sV4mt7vBbEk5Oh6XfUTYvYyfas3CSVjFNvuTRY
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

     "]]}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-1., 1.2246467991473532`*^-16}, {-1., 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7823587105205765`*^9, 3.7823587879743032`*^9, {3.782358828904651*^9, 
   3.782358860230604*^9}, {3.7823593490178456`*^9, 3.782359374381776*^9}, {
   3.782359449761145*^9, 3.782359457939872*^9}, {3.782359494716602*^9, 
   3.782359521019858*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"P4", "=", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"2", "t"}], "]"}], ",", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", "t"}], "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{"3", 
       RowBox[{"Pi", "/", "4"}]}], ",", "Pi"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7823593808014174`*^9, 3.782359401818437*^9}, {
  3.782359473690588*^9, 3.7823595240578384`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
Ng2Xerk+p5RQREImy/+Pn/A/W2cVTA==
     "]]}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-0.999999999709885, 0.}, {0., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7823593850445004`*^9, 3.7823594021012745`*^9}, {
  3.782359479384135*^9, 3.782359524377345*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"2", "t"}], "]"}], ",", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", "t"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"Pi", "/", "4"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"2", "t"}], "]"}], ",", 
       RowBox[{"-", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"-", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", "t"}], "]"}]}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"Pi", "/", "4"}], ",", 
       RowBox[{"3", 
        RowBox[{"Pi", "/", "4"}]}]}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"2", "t"}], "]"}], ",", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", "t"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"3", 
        RowBox[{"Pi", "/", "4"}]}], ",", "Pi"}], "}"}]}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7823595508851786`*^9, 3.7823596294525895`*^9}, {
  3.7823602111076155`*^9, 3.782360220115032*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
      "]]}}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
      "]]}}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1:eJwd13c8V+8XAHAtDalvopSIFFJIRkqcKJX6RCkrUpFKgyL6IiuRVKTslh0i
W2Qcm+y9Z5L9eTJCIr/n+7v/3Nf79Xrufd1z7jn33EfA0EzDeDELCwvvIhaW
/84P+JsXFhYITopYv9bbfA/8chNz/3OjEv+TCmtfUFtexvqftc7hcp6v72G+
7njVPHWfT9qpn1ahYLh7N88cteWHLzwV1hHAt9Fy6Dd1Ra9z6hh/FKS9EVSY
pu5wHvMkrh/hbfG+9ZPUNgeKl3lmxAJ/WMKtn9QPwvvfcH+NA6tDXqoj1LGZ
Snd12uIhM6Yxqp/6Wlq+f2FBAozPOj3/Ri3wVOhUaUgiLIJXk+3Uq++t+T1i
lQRJHqu6Gql5DIM3XFFOhvRFA4xq6h1Lnl7exZoCkQm7FL9SM+DBaY78FJhP
b6ABE7y3cEmlyDoVuOV+RKdTvxbjHmwR/QyKJy8IJVCv5bkbWNr4GQI45XdE
Uj/O1nNZap8GBz47fHhHbZdaXNDHnw5cOrtivamf1s3W5GA6sPIpyrpT31CL
Nes8/wVWZAfUWlA/uvssrd01A46Tb33XqJdMFyaKcmfC74lXD/Sofeub4/wi
MuH7AXFpJWpxP28Ni4wssOzdqClFXb6Ig3uXcjYI777xezt1XVrkYp+ibLjr
oFrOSs1Sc5eMlSA8XWicnfpLcCILtJ4J5kDRqsqYH9QvS9uyYy7ngHXe78AC
ali4bqvYlgOBE+JNidThMnf68jbkwp70St8g6o2Z5ZE2Z3Lh+1b1IBtqWRfp
6tCCXGg4t2foKvXmgNI8wflc6FKx+6xB/fxfDaVJ6TzI8NdrF6GuGQi6/T4k
D/jWS6lXzRM0nLP99NkqH3jFbJM/U4v8sl2qE50P5rGSb99Tp15ewmbekQ/K
54dnblPvFi6d36ZcADf43rQspb4klbyiY1kh1G00PD84RzBY9+R0vEwhcL0O
MKigXmCbqd1kXAi9kwZjr6h7cib3peQVwpy2+iEe6njJhS4d6yKoPLdB6vcf
gnLowtYWVQT96navGqkXrXBim2opgstZYm89qUeOxD9i2V8MU6ai9bOzBJ8M
L+n5MF4Mh1SWSNdTV/zknZPkL4FULadFsdRatjJPr54qgVN/zPr0qQNWSug2
RpRAoceumpTfBO2Nxh+waH2FdDPld+7ULRrJjmucvoL4naUtBtQrufdw1X/8
CnYTz/yWUYe65Ts+ZSmFw15FcowZggW8fsyqiFIw2hWwOnuKoNui9M3J/WUw
FlKY/IQ6uX6Dc8WacuifiS49R/2129MmXqYcTrOFweAvms+ivueND8tBc/iG
Ghs1p1b+sS+bK+CRrBiL9ATBFFuPC4+VKkGm2uDR1Dh9nrz4Ml/jSggN07VK
ow6Q9L1o+6QSTt+JCz1AbWdoxCiqrgTNY38E5cYIbjcJLDO/UAUFopszNxLa
71zGL8r3VcO6xX+qGpgE7/IYWjseq4Z7fOZXXlFHhCyI7tCuhpcM4bXs1Ktj
7b2VrKohabr05uwIwVUdN9nKkqphY+ugctYQwRhGqJPy7hpo8Y67ZEEda/wk
mEu+Bg6u510QoXZ8PTTQploDCwsTWS8HCf42+WWmfK0GbjxLPHxpgODlM/9W
2gTXgMhTxzu9fQR5hUqiE9fXwoZfZwK8qEXeHbxTJFALx952KgN1YJjE7iqJ
WnheLs4d8J2gjuS+ETxZC6YcVWVHe+n6nc/lBJxrwYFnv457N/1eHTM9OE1q
QezAjbWJrQTXmf8IfJhXB6mz6ooa1JOHpg9sraoDtRL2ibEWgl4mHxOT2uog
5MxGpgT1rPugccFkHShNuotGNBEUay21dRWqBzYZpWzbeoKq5n01AW71sN4t
Tq+sgmC6f6GszrEGSGx1Oa5PLa2nsH3V2QaoYBpnjJTTfh4ye5hi0AD2q09I
raYmsZszZiwbgKFXc1OllKDU0V6FvWENsFZSf1FwEcGr9fxSNgsNUDWSWzqX
TfDDv2fXv0tohAafhVwLaqZSVpNdViP06czvHMoiuLh2WE77ayOc6VVmNGTS
+0+YzUx1N8K814HWsC8EM3MfWQ2vbYI931fw7UwlqMGXZhF/qwlkD63SLooh
OPyLlfOHQDPoc0nc3EV9JdbGc5VYM5x2ufrT8yNBbwXh5J1yzRAjzq2mHU1Q
XimeS0etGW4uqdfq+kAwUcl73tKmGaxb+YPqQwgmTMSfyqxpBtOXu4XO+RPc
5FB1/v2DFrC0EGIm+hFcGjC7zNy1Bc6umty/jvpLaUnaoRct8EWV80K5D8FI
sZGjtaEtoMIWV3PwFcHuhXz7otIWUPjibMXqQfCOvyX79MZW6KrMzjnoTNBH
xc3fO64VXmcLrnj2kNYDq7boz7RWEHkcV9fqRHDP3yml43mt4Ot6dNrKkeBA
97t/mPWtYPQ9+06UHa1/u+9P/5ltBTWXIxLT9wkqVJkMJh1uA1MjQ6bMLYLv
hCReute3wQSbZajxTYJlHMsaD3a2QYqmfbH3Dfq+Jvlsh/vbgLPbWX/sOp1P
HBbTCn/agDFQ8CXUmGBR4lOeNIF2MOb59+SoAUFhBpNzqWk7ZDZMNa8/QzCa
92b6uqUdMCPv/DhOisZTslIlWqgTBKZZX+BeghK/OnmvSHRCEiODvUqSzvuH
fuI8cp3Q5FR0fUSC4EP5RBYn1U4oTG1/y7+b4Au36vBdtzrBUjVrudl2gvqX
BNv+xnfCG0fLmVBOOi848OlHuS7YodN61GyCicX3JCuO8HeD+elCGbNxJrrp
HWdn294NbMyeGNMxJo55mzCqhbvB/j1K3SJMDOk3KNWW6AaRUeuwy8NM9Euf
bDyv2A1OiTpcsr1MXN57HCX1uyGqyeu0Sy0TlZP6Vwr7dYPZqfvrsuOYWFTa
Iau+qgccVrDETlxgYvoLDlaLmR5gzohxla9koswvjqifX7/BydYQ53Xxoygv
t1cw9FkvJFTzpaYeHcVJDd3PfJrfYZ8gHydLxwg+krjqPMvaB1cvbWuyMBzB
MNuy0WfZfSD1QrFC7tsw7i0O6OK98QPOaEof/mQ0jKs1Nb/0L+4H0YA8g/na
IUzvtl8tG9wPao80j21QGcJMA3+jS+IDoPppfGxp2CDm8+Y8d8wZgCMNHjVR
fwfwaIjib13VQWAw99tvMRjATzG5H7TzB8EruGC5flQ/Ln0+Xh+iNARiW1wu
O8z+wMzv8W5bE4dAe3g+9ZHqDzxwZ8cdS55hWPItj8fRuQ/fOG8L1XYbBvHt
EjGKhd/xkz2yLRkcBt4jTj2MsV50MkrVfcQYgcr4ZfdCeXoxTWKP65/IEVil
nXfOS/0bRnA1fgifHQHB5MVNKrd7MCh9YM9JtVHoOKV61tOnGzXeWQrX+42C
nkrD+v0PuvBIzyv7lLZRiC+ZeycV1IErHprUpfAz4b2zeM2r9jbUyLE5WqDP
hOoVd9o0h1uwYcHxhHQAE2LtnmSqczaj2ocTqicrmKB7Ysjw06FGPHc6Rlxj
jgn1XNzyN6Ee53R6vRpFCYhNcxbs06vFoCrpwLUaBC6wuujfUq3G+29OuS77
lwAzMiX3unU5Xn4Ytv6zP4Hpkl0Fqu9LcMFiKm17EoHwd4Mjrh4lePFqY7IH
NVvyl/B8uxJUvL3h2gz1GvmSEnn9ElRO/MIsTSbQajnSLrSpBLvz4txvpRIY
HFJwHHhZjBLFQlPB6QSqo5+V8rgWoVrwVHADEmjJ3Lfn7M0CZDfe4HipjMAf
t3p9H70CTJA5z0ikvt3qJdd0sgBZroY1Lykn8HDf9b+6uwuQ11VNMoI6R1mv
VG80H+tWrO7tryDg/2tT4GmzfMy9mXn8YjWBDFHpKhaLPOzR1xHgayCwMLhd
d79RHppYhpJr1M/KVgbePZuHI99X2CdQR3yOVuqRysNdgjvaDjcS6MrdLpE1
mYvbrJJ8jZsIrEhtSb9mlYubH0Suf9tCYBW3k8oT6xy0GuwSae8goFTFl7Xi
Rg62MQbit3QS4Ly3burx+RwMH/f/o0/9QvVbjIt8Dm6Zm2xupxbX1TaZm0Wc
jApPaukiILhfN7d4MeI8OTdY3ENAr4X/JStHFiaZiela9dHrSzdkTo1nYvYF
kX1x1LslXe//qMvELZqtTf3UakUfwwp8MpGT2/iyzg8CPbJsfbabMnGgQ8BH
tp+Adc6gcSN/Bkqe9HXoHyDgpj8SoSiRjmB7yIhnhOa3uZZhx56OU//IFZym
/qyx7WHGcBoK7+bpcKHevEnvrWxkGpo3hssS6svy5RHCAmm4ek2rW/Yo9RtL
918cn3Gn7fZodULz5/Ys48hUMi6/qNErP05gMjTinlV9Mm6+6q98ndpu0fbq
D4nJ2FrRpOtNPaAUeWelWTLOqR2JH6auv2x5vaQ/CU26O+d8JwjoxvKkybQk
orSRKVf3JM3fRPJCTUY8GsxYHqU/HLQfMt8dfBOPm63PnLhALfAnfy7iQTyq
5zqstafOK8+btlGIx6yoho5s6kZRVibYx6FT6W13hRkCO4Tusmc9ikV2SRdB
id8E+P4xfe+uEouNWtEHGdThr7uytVljcXKd0EYT6vT6+aifj2PQT3TbPyHU
g+VSDN6nH/H0n70c62YJGGtM+Bt6ReFtyR9avdRVlaJWOzWikEvaw2WOWusN
4yfhiEJH3heWXH8IGJbtRlvvSGS5HhJwlDrwmNk3D78PaMDNOh5OnZfisDHs
bThmyIz36swR+HZeZ5+xQThyuKuJmFKbPHy5RGhrOH4MXC7uTG2jtTI8IigM
N/m8sIuhTpdbLxwWGopSZxeLzVFX8IqxeEUFY4aTa4XnPI1vZVv2mGEw8ouc
Ewml/lSXI6KxJRiXp2+QSaWWd/dZwuEZhJ/P2l5po77FyTvFM/gOj50r3rzt
LwGuKoZ5s947DJFXWiZF7Z5kft678i2W3UoIPkx9yOSK9arkNzh/yvKnEXXK
VjmFn/aBaMDw7KP7LPBIuHslciwA24vxYhw1t6cI+6UrAZiQ2f80i3o9qRmt
UPXHv6/5Zpupo5ea7gvj9MU3pbvEVy/QeokaSdF57IMecTxy3NQV2nfKVs96
Yyz70klBavXqE0UWXa/wwIdspwPU38sijypEe6G0cuekEbX5vpgS5hYvvD/g
7XGbuq/v4PR7zxfI2Xyk1Yr6Y4D318VDHqg1+uKxG7XvaQ0No6rnuFFRbPAF
9e8tSar5yc/QVDx/zp96b8CPACcHdxyWb99P982wNdxuvuvKEzxof9Eojtru
waE+hRNueD+6XTGV2tCwVmuG0xVrFhey5VN3dRkPn5t9hCJqe+ZLqJ2XftqU
0OWMzbk+QZXUZxT6dK5HO6Gzjvp8M/XKav97+Z6OmOcdmtpB7bOO0+HgkD32
7hoX+PZffjRl7ceSH2CMiDz8oD47qz8W7mCDQj72a4aoDz9m9Oqe+Bdf22R6
jlKfePzVgJ3LCn17JvN+Uqt5+pvmdFlgX41w5AS1yl57Xovou+inoQlT1FMr
7UdODJniXxM7txnqAnlYHudwAz/yBjnPUifv/BrEwXUVLcyz9sxRL7CHV1pG
X8bbtxo856lrdqYxEhzO49iagaC//61vZtpYRZ9Bf/1fRgvUbacWRVhFK6Gi
Ng2Xerk+p5RQREImy/+Pn/A/W2cVTA==
      "]]}}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{-1, 1},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7823595555272837`*^9, {3.78235960337272*^9, 3.78235962988218*^9}, 
   3.782360220608022*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{"2", "t"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "Pi"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7823588796442537`*^9, 3.7823588909233117`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
oqsTRQT5N/20+PJWDEMvIz6tKSFIsuC77/gXDEcLjixyLyNIzrjnqpI2DE7v
ZqKWCoLUVW+/qdlB12PgkDD1PV1vfmTZzV8YCofXmXc2EGRfX3HQzF4MqwRS
CfJNBFnPkLkV0odhsXS+fuAnghx/7X7O4Q8GhjbhY9dBkJ+/6z65wsZwZV0X
utZFkCx+bdJrDgbh5rxZZT8JUqvL4lsnhYG9c/9LzT6CbL2bqqEwguHY7jWi
ff0EeV79s5b6Xww/D0paRA8Q5MjPqHMao3R+Tr36I2LT45l3vYsxjsHyXNj6
NZiuh5TOGJs288resGMjBHlo7qaddVwMRdEzlrSME6SBbmjNET6G1UntPpJ8
gpQ5bta3UIAh80l2haGQIKfp+Jm10n7w2vlg6j+C9DmxpW6hCINymU5Wh5gU
2dMVNFRIO5IpPjF7uhQZVHfYxmwCA/GhzWKbhBTJViodraUd/OVl4kWGFOn8
7Ng3k0n6fruCB15JSZExtsaTubTP9O826J8pRcqwF7rM+YeBQ628Nn+WFMky
YUv60z7GE/tiO1uKlFYJH6ql3T31Zck1Bbr/sjY5+SkMe4gXvqVKUuS+pe/8
bGl/mn2lclhFitSvIlWv0baau2u25lwpMvv5emEu7ZpFWof2zZci808mLWil
baw1lRWlJkXOKzxymX6/h+K1rRM1C+nxyYYtFNFeY5hhKVokRf7//wv/BwP5
BwY=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, Pi}, {-0.9999998831351824, 0.9999999999999918}}, {{
     0, 3.141592653589793}, {-0.9999998831351824, 0.9999999999999918}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.782358891271474*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sqrt", "[", 
  RowBox[{"Cos", "[", "Pi", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7823591485598907`*^9, 3.7823591567300973`*^9}}],

Cell[BoxData["\[ImaginaryI]"], "Output",
 CellChangeTimes->{{3.7823591534143577`*^9, 3.7823591571729994`*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"JacobianMatrix", "[", 
    RowBox[{
     RowBox[{"f_List", "?", "VectorQ"}], ",", "x_List"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Outer", "[", 
     RowBox[{"D", ",", "f", ",", "x"}], "]"}], "/;", 
    RowBox[{"Equal", "@@", 
     RowBox[{"(", 
      RowBox[{"Dimensions", "/@", 
       RowBox[{"{", 
        RowBox[{"f", ",", "x"}], "}"}]}], ")"}]}]}]}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"JacobianDeterminant", "[", 
   RowBox[{
    RowBox[{"f_List", "?", "VectorQ"}], ",", "x_List"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Det", "[", 
    RowBox[{"JacobianMatrix", "[", 
     RowBox[{"f", ",", "x"}], "]"}], "]"}], "/;", 
   RowBox[{"Equal", "@@", 
    RowBox[{"(", 
     RowBox[{"Dimensions", "/@", 
      RowBox[{"{", 
       RowBox[{"f", ",", "x"}], "}"}]}], ")"}]}]}]}]}], "Input",
 CellChangeTimes->{3.783705869578102*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"S", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"t", "^", 
      RowBox[{"(", 
       RowBox[{"1", "/", "2"}], ")"}]}], "*", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", "\[Theta]"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"t", "^", 
      RowBox[{"(", 
       RowBox[{"1", "/", "4"}], ")"}]}], "*", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", "\[Theta]"}], "]"}], "]"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.782361597816106*^9, 3.7823616129934206`*^9}, {
  3.7823617215850153`*^9, 3.782361722504777*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SqrtBox["t"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ",", 
   RowBox[{
    SuperscriptBox["t", 
     RowBox[{"1", "/", "4"}]], " ", 
    SqrtBox[
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Theta]"}], "]"}]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7823616141670704`*^9, 3.7823617229200373`*^9, 3.782361902194719*^9, 
   3.7828458622041273`*^9, {3.7837058469996247`*^9, 3.7837058713219*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CdS", "=", " ", 
  RowBox[{"{", 
   RowBox[{"t", ",", "\[Theta]"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7837058827164717`*^9, 3.783705901791848*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"t", ",", "\[Theta]"}], "}"}]], "Output",
 CellChangeTimes->{3.783705902573921*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"JacobianDeterminant", "[", 
   RowBox[{"S", ",", "CdS"}], "]"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.7823616384638577`*^9, 3.7823616397601323`*^9}, {
  3.7823619063446255`*^9, 3.7823619084232597`*^9}, {3.7823619469284244`*^9, 
  3.7823619472874255`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["1", 
   RowBox[{"2", " ", 
    SuperscriptBox["t", 
     RowBox[{"1", "/", "4"}]], " ", 
    SqrtBox[
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Theta]"}], "]"}]]}]]}]], "Output",
 CellChangeTimes->{
  3.782361640061557*^9, {3.782361700657762*^9, 3.782361723814168*^9}, {
   3.7823619029072247`*^9, 3.7823619086605387`*^9}, 3.782361947664138*^9, 
   3.782845863163721*^9, {3.7837058483261495`*^9, 3.7837058723588414`*^9}, 
   3.783705903774864*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", 
     RowBox[{"2", " ", 
      SuperscriptBox["t", 
       RowBox[{"1", "/", "4"}]], " ", 
      SqrtBox[
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}]]}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"Pi", "/", "4"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.783706157076541*^9, 3.7837061684059715`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"EllipticK", "[", 
    FractionBox["1", "2"], "]"}], 
   RowBox[{"2", " ", 
    SqrtBox["2"], " ", 
    SuperscriptBox["t", 
     RowBox[{"1", "/", "4"}]]}]]}]], "Output",
 CellChangeTimes->{3.7837061693089004`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Transpose", "[", 
   RowBox[{"JacobianMatrix", "[", 
    RowBox[{"S", ",", "CdS"}], "]"}], "]"}], ".", 
  RowBox[{"JacobianMatrix", "[", 
   RowBox[{"S", ",", "CdS"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7837059123513775`*^9, 3.78370592429327*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], 
       RowBox[{"16", " ", 
        SuperscriptBox["t", 
         RowBox[{"3", "/", "2"}]]}]], "+", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"], 
       RowBox[{"4", " ", "t"}]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}], 
        RowBox[{"4", " ", 
         SqrtBox["t"]}]]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}], 
        RowBox[{"4", " ", 
         SqrtBox["t"]}]]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"4", " ", "t", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"]}], "+", 
      RowBox[{
       SqrtBox["t"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
       RowBox[{"Tan", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.783705910082975*^9, 3.7837059250655756`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Det", "[", 
   RowBox[{
    RowBox[{"JacobianMatrix", "[", 
     RowBox[{"S", ",", "CdS"}], "]"}], ".", 
    RowBox[{"Transpose", "[", 
     RowBox[{"JacobianMatrix", "[", 
      RowBox[{"S", ",", "CdS"}], "]"}], "]"}]}], "]"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.78370592742334*^9, 3.783705936322344*^9}, {
  3.7837062242014494`*^9, 3.7837062309399185`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"Sec", "[", 
   RowBox[{"2", " ", "\[Theta]"}], "]"}], 
  RowBox[{"4", " ", 
   SqrtBox["t"]}]]], "Output",
 CellChangeTimes->{{3.783705933132518*^9, 3.7837059366975064`*^9}, 
   3.7837062315913525`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"Sec", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}], 
    RowBox[{"4", " ", 
     SqrtBox["t"]}]], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"Pi", "/", "4"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.783706120336104*^9, 3.7837061383765297`*^9}, {
  3.783706175095051*^9, 3.783706175142888*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Integrate", "::", "idiv"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Integral of \[NoBreak]\\!\\(Sec[\\(\\(2\\\\ \
\[Theta]\\)\\)]\\)\[NoBreak] does not converge on \[NoBreak]\\!\\({0, \
\[Pi]\\/4}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Integrate/idiv\\\", ButtonNote -> \
\\\"Integrate::idiv\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.783706131015993*^9, 3.7837061391821437`*^9}, 
   3.7837061757314157`*^9}],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", 
   FractionBox["\[Pi]", "4"]], 
  RowBox[{
   FractionBox[
    RowBox[{"Sec", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}], 
    RowBox[{"4", " ", 
     SqrtBox["t"]}]], 
   RowBox[{"\[DifferentialD]", "\[Theta]"}]}]}]], "Output",
 CellChangeTimes->{{3.7837061310239754`*^9, 3.7837061391881256`*^9}, 
   3.7837061757414083`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Sec", "[", 
    RowBox[{"2", "\[Theta]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", "Pi"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.783706179541074*^9, 3.7837061884247313`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
6peeW6ZAHNLWJF5dMATrzHVt//QokP8BcZNNPA==
     "]], LineBox[CompressedData["
1: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
///f/A9UuTgo
     "]], LineBox[CompressedData["
1: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
/2Y5XU+7oS+Dtpb+fYs5RTao8v23KPR/rVynJQ==
     "]], 
    LineBox[{{2.3557460246448794`, -7.708644164048257}, {2.3557518398081885`, 
     7.7150300174626665`}}], 
    LineBox[{{0.7848541708243577, 7.7150300174626665`}, {
     0.7848601663476934, -7.708644164048257}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, Pi}, {-7.708644164048257, 7.7150300174626665`}}, {{
     0, 3.141592653589793}, {-7.708644164048257, 7.7150300174626665`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.783706188935854*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"JacobianMatrix", "[", 
   RowBox[{"S", ",", "CdS"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.782361670488098*^9, 3.7823616819205203`*^9}, {
  3.782361853584325*^9, 3.782361856085805*^9}, {3.782845857222761*^9, 
  3.7828458575425825`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], 
       RowBox[{"2", " ", 
        SqrtBox["t"]}]], 
      RowBox[{"2", " ", 
       SqrtBox["t"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}]}]},
     {
      FractionBox[
       SqrtBox[
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}]], 
       RowBox[{"4", " ", 
        SuperscriptBox["t", 
         RowBox[{"3", "/", "4"}]]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["t", 
          RowBox[{"1", "/", "4"}]], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
        SqrtBox[
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}]]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.782361672799157*^9, 3.7823616822888083`*^9}, {
   3.7823618491504745`*^9, 3.782361856379971*^9}, {3.782845858470457*^9, 
   3.7828458640930567`*^9}, 3.783705905093999*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"-", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", "\[Theta]"}], "]"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", 
      RowBox[{"Pi", "/", "4"}], ",", 
      RowBox[{"3", 
       RowBox[{"Pi", "/", "4"}]}]}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7823617023027287`*^9, 3.782361746560362*^9}, {
  3.7823620237044554`*^9, 3.7823620277934155`*^9}, {3.7828480823666515`*^9, 
  3.7828480856282434`*^9}, {3.7828481555585756`*^9, 3.7828481579690065`*^9}}],

Cell[BoxData[
 RowBox[{"2.6220575542921196`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.782361734914928*^9, 3.7823617475927296`*^9}, 
   3.78236201963729*^9, 3.7828480879918776`*^9, 3.782848158696316*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"P", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"t", "^", 
      RowBox[{"(", 
       RowBox[{"1", "/", "2"}], ")"}]}], "*", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"1", "-", 
       RowBox[{"y", "^", "4"}]}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"t", "^", 
      RowBox[{"(", 
       RowBox[{"1", "/", "4"}], ")"}]}], "*", "y"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7828467477892375`*^9, 3.7828467630056686`*^9}, {
  3.7828468563232446`*^9, 3.7828468564873915`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SqrtBox["t"], " ", 
    SqrtBox[
     RowBox[{"1", "-", 
      SuperscriptBox["y", "4"]}]]}], ",", 
   RowBox[{
    SuperscriptBox["t", 
     RowBox[{"1", "/", "4"}]], " ", "y"}]}], "}"}]], "Output",
 CellChangeTimes->{3.782846764438506*^9, 3.78284685760526*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ps", "=", 
  RowBox[{"{", 
   RowBox[{"t", ",", "y"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7828467717720985`*^9, 3.782846776168476*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"t", ",", "y"}], "}"}]], "Output",
 CellChangeTimes->{3.7828467765468473`*^9, 3.782846858616702*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"JacobianMatrix", "[", 
  RowBox[{"P", ",", "Ps"}], "]"}]], "Input",
 CellChangeTimes->{{3.7828467776675787`*^9, 3.782846788529961*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      SqrtBox[
       RowBox[{"1", "-", 
        SuperscriptBox["y", "4"]}]], 
      RowBox[{"2", " ", 
       SqrtBox["t"]}]], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", " ", 
        SqrtBox["t"], " ", 
        SuperscriptBox["y", "3"]}], 
       SqrtBox[
        RowBox[{"1", "-", 
         SuperscriptBox["y", "4"]}]]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["y", 
      RowBox[{"4", " ", 
       SuperscriptBox["t", 
        RowBox[{"3", "/", "4"}]]}]], ",", 
     SuperscriptBox["t", 
      RowBox[{"1", "/", "4"}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7828467889427643`*^9, 3.7828468621003895`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"JacobianDeterminant", "[", 
   RowBox[{"P", ",", "Ps"}], "]"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.7828467921281505`*^9, 3.7828468093055077`*^9}}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"2", " ", 
   SuperscriptBox["t", 
    RowBox[{"1", "/", "4"}]], " ", 
   SqrtBox[
    RowBox[{"1", "-", 
     SuperscriptBox["y", "4"]}]]}]]], "Output",
 CellChangeTimes->{{3.782846797467488*^9, 3.7828468096562634`*^9}, 
   3.7828468725112915`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"c", "*", 
     RowBox[{"(", 
      RowBox[{"2", "/", "a"}], ")"}], "*", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", "*", "Pi", "*", 
       RowBox[{"x", "/", "a"}]}], "]"}], "*", 
     RowBox[{"x", "^", "2"}], "*", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", "*", "Pi", "*", "m", "*", 
       RowBox[{"x", "/", "a"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{
       RowBox[{"-", "a"}], "/", "2"}], ",", 
      RowBox[{"a", "/", "2"}]}], "}"}]}], "]"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.7829534898879795`*^9, 3.7829535287615633`*^9}, {
  3.7829537172031074`*^9, 3.78295377197126*^9}, {3.7829538632820325`*^9, 
  3.782953863498008*^9}, {3.7829539105145454`*^9, 3.782953936266402*^9}, {
  3.782953980333595*^9, 3.782953999698128*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["a", "2"], " ", "c", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "4"}], " ", "m", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["m", "2"]}], ")"}], " ", "\[Pi]", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"m", " ", "\[Pi]"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "-", 
        RowBox[{"6", " ", 
         SuperscriptBox["m", "2"]}], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["m", "2"]}], ")"}], "2"], " ", 
         SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"m", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
  RowBox[{"2", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["m", "2"]}], ")"}], "3"], " ", 
   SuperscriptBox["\[Pi]", "3"]}]]], "Output",
 CellChangeTimes->{{3.7829535095160904`*^9, 3.782953529157293*^9}, {
   3.782953739234578*^9, 3.7829537749456973`*^9}, {3.7829538663010397`*^9, 
   3.782953875091159*^9}, 3.782953913223812*^9, {3.7829539905605636`*^9, 
   3.7829540011805553`*^9}, 3.7829542793898087`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"c", "*", 
    RowBox[{"(", 
     RowBox[{"2", "/", "a"}], ")"}], "*", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"2", "Pi", "*", 
       RowBox[{"x", "/", "a"}]}], "]"}], "^", "2"}], "*", 
    RowBox[{"x", "^", "2"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "a"}], "/", "2"}], ",", 
     RowBox[{"a", "/", "2"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7829542458352385`*^9, 3.7829542729155226`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["a", "2"], " ", "c", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "3"}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Pi]", "2"]}]}], ")"}]}], 
  RowBox[{"24", " ", 
   SuperscriptBox["\[Pi]", "2"]}]]], "Output",
 CellChangeTimes->{{3.782954268502534*^9, 3.782954273275086*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["a", "2"], " ", "c", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "4"}], " ", "m", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["m", "2"]}], ")"}], " ", "\[Pi]", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"m", " ", "\[Pi]"}], "]"}]}], ")"}]}], 
  RowBox[{"2", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["m", "2"]}], ")"}], "3"], " ", 
   SuperscriptBox["\[Pi]", "3"]}]]], "Input",
 CellChangeTimes->{3.7829543786749105`*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox["a", "2"], " ", "c", " ", "m", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"m", " ", "\[Pi]"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["m", "2"]}], ")"}], "2"], " ", 
    SuperscriptBox["\[Pi]", "2"]}]]}]], "Output",
 CellChangeTimes->{3.782954380369833*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "n"}], ")"}], "^", "2"}]}], "/", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "n"}], ")"}], "^", "2"}], " ", "-", " ", "1"}], ")"}], 
     "^", "3"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "2", ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7829547146600857`*^9, 3.782954737803317*^9}, {
  3.7829548169743752`*^9, 3.7829548249474144`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"256", "-", 
   RowBox[{"27", " ", 
    SuperscriptBox["\[Pi]", "2"]}]}], "1728"]], "Output",
 CellChangeTimes->{
  3.782954740718919*^9, {3.7829548174437113`*^9, 3.78295482624553*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"m", "*", "w"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"Pi", "*", "h"}], ")"}]}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"1", "/", "2"}], ")"}]}], "*", "c", "*", "x", "*", 
     RowBox[{"E", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"m", "*", "w", "*", 
           RowBox[{"x", "^", "2"}]}], ")"}]}], "/", "h"}], ")"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.7829552511558385`*^9, 3.7829553346338024`*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{"0", ",", 
   RowBox[{
    RowBox[{"Re", "[", 
     FractionBox[
      RowBox[{"m", " ", "w"}], "h"], "]"}], "\[GreaterEqual]", "0"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.782955313555726*^9, 3.782955336330718*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", "/", "a"}], ")"}], "*", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"Pi", "*", 
       RowBox[{"x", "/", "a"}]}], "]"}], "^", "2"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "a"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7829576132649984`*^9, 3.782957647029107*^9}, {
  3.782957716857024*^9, 3.7829577412123327`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.782957642648575*^9, 3.7829576478318453`*^9}, {
  3.7829577200403223`*^9, 3.7829577417120214`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"Pi", "*", 
      RowBox[{"x", "/", "a"}]}], "]"}], "^", "2"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "a"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7829584236132793`*^9, 3.782958434911663*^9}, {
  3.7829584690735893`*^9, 3.7829584812760468`*^9}}],

Cell[BoxData[
 FractionBox["a", "2"]], "Output",
 CellChangeTimes->{
  3.782958436746106*^9, {3.7829584703103476`*^9, 3.7829584817546816`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"V", "/", "L"}], ")"}], "*", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", "*", "Pi", "*", 
       RowBox[{"x", "/", "L"}]}], "]"}], "*", 
     RowBox[{"Cos", "[", 
      RowBox[{"4", "*", "Pi", "*", 
       RowBox[{"x", "/", "L"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "L"}], "}"}]}], "]"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.782960893728682*^9, 3.782960955063816*^9}, {
   3.782960991082412*^9, 3.782961003090542*^9}, {3.7829614264298253`*^9, 
   3.782961448470178*^9}, {3.782961954669547*^9, 3.7829619616630945`*^9}, {
   3.782962073605584*^9, 3.782962074286969*^9}, 3.7829623268057237`*^9, {
   3.78296236714109*^9, 3.7829624193885837`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.782960923154764*^9, 3.7829609554530735`*^9}, {
   3.782960992775339*^9, 3.7829610034222136`*^9}, {3.782961428238304*^9, 
   3.782961449130248*^9}, {3.7829619559461465`*^9, 3.782961962021618*^9}, 
   3.7829620748355017`*^9, 3.7829623275722847`*^9, {3.7829623742476068`*^9, 
   3.782962419779044*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{"2", "*", "Pi", "*", 
     RowBox[{"x", "/", "L"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "L"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7829618388774104`*^9, 3.782961849221512*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.782961849578945*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{"2", "Pi", "*", 
     RowBox[{"x", "/", "L"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "L"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7829622584393144`*^9, 3.7829622673418646`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.7829622676902647`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"H", " ", "=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"h", "/", 
     RowBox[{"Sqrt", "[", "2", "]"}]}], ")"}], 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"E1", ",", "LD"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"LD", ",", "E2"}], "}"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.7829628467253175`*^9, 3.782962864724386*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"E1", " ", "h"}], 
      SqrtBox["2"]], ",", 
     FractionBox[
      RowBox[{"h", " ", "LD"}], 
      SqrtBox["2"]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"h", " ", "LD"}], 
      SqrtBox["2"]], ",", 
     FractionBox[
      RowBox[{"E2", " ", "h"}], 
      SqrtBox["2"]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.782962865774322*^9, 3.782962891527399*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Eigenvalues", "[", "H", "]"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.7829628682537794`*^9, 3.782962880767336*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"h", " ", 
     RowBox[{"(", 
      RowBox[{"E1", "+", "E2", "-", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["E1", "2"], "-", 
         RowBox[{"2", " ", "E1", " ", "E2"}], "+", 
         SuperscriptBox["E2", "2"], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["LD", "2"]}]}]]}], ")"}]}], 
    RowBox[{"2", " ", 
     SqrtBox["2"]}]], ",", 
   FractionBox[
    RowBox[{"h", " ", 
     RowBox[{"(", 
      RowBox[{"E1", "+", "E2", "+", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["E1", "2"], "-", 
         RowBox[{"2", " ", "E1", " ", "E2"}], "+", 
         SuperscriptBox["E2", "2"], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["LD", "2"]}]}]]}], ")"}]}], 
    RowBox[{"2", " ", 
     SqrtBox["2"]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.7829628699273195`*^9, 3.7829628925073023`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Eigenvectors", "[", "H", "]"}], "//", "InputForm"}]], "Input",
 CellChangeTimes->{{3.7829628940791516`*^9, 3.7829628978612566`*^9}, {
  3.7829632184531097`*^9, 3.782963220142704*^9}}],

Cell["\<\
{{-(-E1 + E2 + Sqrt[E1^2 - 2*E1*E2 + E2^2 + 4*LD^2])/(2*LD), 1}, 
 {-(-E1 + E2 - Sqrt[E1^2 - 2*E1*E2 + E2^2 + 4*LD^2])/(2*LD), 1}}\
\>", "Output",
 CellChangeTimes->{3.7829628982147565`*^9, 3.782963220424396*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"1", "/", 
   RowBox[{"Norm", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "E1"}], "+", "E2", "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"E1", "^", "2"}], "-", 
            RowBox[{"2", "*", "E1", "*", "E2"}], "+", 
            RowBox[{"E2", "^", "2"}], "+", 
            RowBox[{"4", "*", 
             RowBox[{"LD", "^", "2"}]}]}], "]"}]}], ")"}]}], "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", "LD"}], ")"}]}], ",", "1"}], "}"}], "]"}]}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.782963202018772*^9, 3.7829632260297422`*^9}, {
  3.782963260653489*^9, 3.7829632609098883`*^9}}],

Cell[BoxData[
 FractionBox["2", 
  SqrtBox[
   RowBox[{"4", "+", 
    SuperscriptBox[
     RowBox[{"Abs", "[", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "E1"}], "+", "E2", "+", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["E1", "2"], "-", 
          RowBox[{"2", " ", "E1", " ", "E2"}], "+", 
          SuperscriptBox["E2", "2"], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["LD", "2"]}]}]]}], "LD"], "]"}], "2"]}]]]], "Output",
 CellChangeTimes->{{3.7829632053181686`*^9, 3.7829632269118533`*^9}, 
   3.7829632613078256`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"Norm", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "E1"}], "+", "E2", "+", 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             RowBox[{"E1", "^", "2"}], "-", 
             RowBox[{"2", "*", "E1", "*", "E2"}], "+", 
             RowBox[{"E2", "^", "2"}], "+", 
             RowBox[{"4", "*", 
              RowBox[{"LD", "^", "2"}]}]}], "]"}]}], ")"}]}], "/", 
        RowBox[{"(", 
         RowBox[{"2", "*", "LD"}], ")"}]}], ",", "1"}], "}"}], "]"}]}], "*", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "E1"}], "+", "E2", "+", 
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{"E1", "^", "2"}], "-", 
           RowBox[{"2", "*", "E1", "*", "E2"}], "+", 
           RowBox[{"E2", "^", "2"}], "+", 
           RowBox[{"4", "*", 
            RowBox[{"LD", "^", "2"}]}]}], "]"}]}], ")"}]}], "/", 
      RowBox[{"(", 
       RowBox[{"2", "*", "LD"}], ")"}]}], ",", "1"}], "}"}]}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.782963338717143*^9, 3.7829633481425347`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"E1", "-", "E2", "-", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["E1", "2"], "-", 
       RowBox[{"2", " ", "E1", " ", "E2"}], "+", 
       SuperscriptBox["E2", "2"], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["LD", "2"]}]}]]}], 
    RowBox[{"LD", " ", 
     SqrtBox[
      RowBox[{"4", "+", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         FractionBox[
          RowBox[{
           RowBox[{"-", "E1"}], "+", "E2", "+", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["E1", "2"], "-", 
             RowBox[{"2", " ", "E1", " ", "E2"}], "+", 
             SuperscriptBox["E2", "2"], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["LD", "2"]}]}]]}], "LD"], "]"}], "2"]}]]}]], ",", 
   FractionBox["2", 
    SqrtBox[
     RowBox[{"4", "+", 
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        FractionBox[
         RowBox[{
          RowBox[{"-", "E1"}], "+", "E2", "+", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["E1", "2"], "-", 
            RowBox[{"2", " ", "E1", " ", "E2"}], "+", 
            SuperscriptBox["E2", "2"], "+", 
            RowBox[{"4", " ", 
             SuperscriptBox["LD", "2"]}]}]]}], "LD"], "]"}], "2"]}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.782963344266427*^9, 3.782963348493208*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "/", 
  RowBox[{"Norm", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "E1"}], " ", "+", " ", "E2", " ", "-", " ", 
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{"E1", "^", "2"}], " ", "-", " ", 
           RowBox[{"2", "*", "E1", "*", "E2"}], " ", "+", " ", 
           RowBox[{"E2", "^", "2"}], " ", "+", " ", 
           RowBox[{"4", "*", 
            RowBox[{"LD", "^", "2"}]}]}], "]"}]}], ")"}]}], "/", 
      RowBox[{"(", 
       RowBox[{"2", "*", "LD"}], ")"}]}], ",", " ", "1"}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.78296339308111*^9, 3.78296339913354*^9}}],

Cell[BoxData[
 FractionBox["1", 
  SqrtBox[
   RowBox[{"1", "+", 
    RowBox[{
     FractionBox["1", "4"], " ", 
     SuperscriptBox[
      RowBox[{"Abs", "[", 
       FractionBox[
        RowBox[{"E1", "-", "E2", "+", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["E1", "2"], "-", 
           RowBox[{"2", " ", "E1", " ", "E2"}], "+", 
           SuperscriptBox["E2", "2"], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["LD", "2"]}]}]]}], "LD"], "]"}], 
      "2"]}]}]]]], "Output",
 CellChangeTimes->{3.7829633993961153`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigenvalues", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.782963962802137*^9, 3.782963971013998*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.7829639713685956`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigenvectors", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7829640771642838`*^9, 3.782964087117865*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7829640874409633`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"E", "^", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "m"}], "*", "r"}], ")"}]}], "/", "r"}], ",", "r"}], 
    "]"}], "//", "Simplify"}], "//", "InputForm"}]], "Input",
 CellChangeTimes->{{3.783033915558902*^9, 3.783033939728329*^9}, {
  3.7830340174018965`*^9, 3.783034019958865*^9}, {3.7830343175380483`*^9, 
  3.7830343233358793`*^9}}],

Cell["-((1 + m*r)/(E^(m*r)*r^2))", "Output",
 CellChangeTimes->{{3.7830339253391747`*^9, 3.783033942098758*^9}, 
   3.783034020273409*^9, {3.783034317935542*^9, 3.7830343239783926`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"t", "^", "2"}]}], " ", "+", " ", 
     RowBox[{"y", "^", "2"}], " ", "+", " ", 
     RowBox[{"z", "^", "2"}], " ", "+", " ", 
     RowBox[{"z", "^", "2"}]}], "]"}], ",", "y"}], "]"}]], "Input",
 CellChangeTimes->{{3.7830341640859175`*^9, 3.783034211089409*^9}}],

Cell[BoxData[
 FractionBox["y", 
  SqrtBox[
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["t", "2"]}], "+", 
    SuperscriptBox["y", "2"], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["z", "2"]}]}]]]], "Output",
 CellChangeTimes->{{3.7830341797367983`*^9, 3.783034211440996*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", " ", "+", " ", 
         RowBox[{"m", "*", "r"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"E", "^", 
          RowBox[{"(", 
           RowBox[{"m", "*", "r"}], ")"}]}], "*", 
         RowBox[{"r", "^", "3"}]}], ")"}]}], ")"}], ",", "r"}], "]"}], "//", 
   "Simplify"}], "//", "TeXForm"}]], "Input",
 CellChangeTimes->{{3.7830343275950336`*^9, 3.783034349161109*^9}, 
   3.783034668914686*^9}],

Cell["-\\frac{e^{-m r} \\left(m^2 r^2+3 m r+3\\right)}{r^4}", "Output",
 CellChangeTimes->{{3.7830343299493*^9, 3.78303434955905*^9}, 
   3.7830346694728513`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sh", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"r", "*", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "*", 
     RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
    RowBox[{"r", "*", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "*", 
     RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
    RowBox[{"r", "*", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.783706377895322*^9, 3.7837064262960796`*^9}, 
   3.7837064669799185`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"r", " ", 
    RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
   RowBox[{"r", " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
    RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
   RowBox[{"r", " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.78370640576044*^9, 3.7837064267041225`*^9}, {
  3.7837064620384555`*^9, 3.7837064674824743`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cd", "=", 
  RowBox[{"{", 
   RowBox[{"r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.783706407322648*^9, 3.783706418215622*^9}, 
   3.7837064694287825`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}]], "Output",
 CellChangeTimes->{
  3.783706418705635*^9, {3.783706462755767*^9, 3.7837064697482886`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"JacobianMatrix", "[", 
  RowBox[{"Sh", ",", "Cd"}], "]"}]], "Input",
 CellChangeTimes->{{3.783706446608653*^9, 3.783706476817436*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
     RowBox[{"r", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "r"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
     RowBox[{"r", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
     RowBox[{"r", " ", 
      RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
     RowBox[{
      RowBox[{"-", "r"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7837064521201787`*^9, 3.783706478360059*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"JacobianMatrix", "[", 
   RowBox[{"Sh", ",", "Cd"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.783706480566784*^9, 3.7837064887782326`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
      RowBox[{"r", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}]}], 
      RowBox[{
       RowBox[{"-", "r"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}]},
     {
      RowBox[{
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}], 
      RowBox[{"r", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}], 
      RowBox[{"r", " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]},
     {
      RowBox[{"Cos", "[", "\[Theta]", "]"}], 
      RowBox[{
       RowBox[{"-", "r"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.783706489098342*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"JacobianDeterminant", "[", 
   RowBox[{"Sh", ",", "Cd"}], "]"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.7837064968553886`*^9, 3.78370650669468*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["r", "2"], " ", 
  RowBox[{"Sin", "[", "\[Theta]", "]"}]}]], "Output",
 CellChangeTimes->{{3.7837065029070897`*^9, 3.783706506986167*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"JacobianMatrix", "[", 
      RowBox[{"Sh", ",", "Cd"}], "]"}], "]"}], ".", 
    RowBox[{"JacobianMatrix", "[", 
     RowBox[{"Sh", ",", "Cd"}], "]"}]}], "//", "Simplify"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.7837065154799223`*^9, 3.783706549299306*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0"},
     {"0", 
      SuperscriptBox["r", "2"], "0"},
     {"0", "0", 
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.783706513726009*^9, 3.783706550029791*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Det", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"JacobianMatrix", "[", 
      RowBox[{"Sh", ",", "Cd"}], "]"}], "]"}], ".", 
    RowBox[{"JacobianMatrix", "[", 
     RowBox[{"Sh", ",", "Cd"}], "]"}]}], "]"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.7837065835692954`*^9, 3.783706592934038*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["r", "4"], " ", 
  SuperscriptBox[
   RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]], "Output",
 CellChangeTimes->{{3.783706590266592*^9, 3.7837065931995697`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ex1", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"t", "^", 
      RowBox[{"(", 
       RowBox[{"1", "/", "4"}], ")"}]}], "*", "x"}], ",", 
    RowBox[{
     RowBox[{"t", "^", 
      RowBox[{"(", 
       RowBox[{"1", "/", "6"}], ")"}]}], "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"x", "^", "4"}]}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"1", "/", "6"}], ")"}]}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.783706640812992*^9, 3.7837066421917343`*^9}, {
   3.7837082344565306`*^9, 3.7837082826102796`*^9}, {3.783709591224393*^9, 
   3.7837096241521444`*^9}, 3.7837097815531664`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["t", 
     RowBox[{"1", "/", "4"}]], " ", "x"}], ",", 
   RowBox[{
    SuperscriptBox["t", 
     RowBox[{"1", "/", "6"}]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["x", "4"]}], ")"}], 
     RowBox[{"1", "/", "6"}]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7837066358103137`*^9, 3.7837066453379884`*^9}, 
   3.783708285115017*^9, 3.7837096247795672`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CdX1", "=", 
  RowBox[{"{", 
   RowBox[{"t", ",", "x"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7837066369332333`*^9, 3.783706654967043*^9}, 
   3.7837082900718703`*^9, {3.7837096294155884`*^9, 3.783709629519315*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"t", ",", "x"}], "}"}]], "Output",
 CellChangeTimes->{
  3.783706657016932*^9, {3.7837082866708155`*^9, 3.7837082905258493`*^9}, 
   3.7837096299595785`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"t", "^", 
       RowBox[{"(", 
        RowBox[{"1", "/", "4"}], ")"}]}], "*", "x"}], ")"}], "^", "4"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"t", "^", 
       RowBox[{"(", 
        RowBox[{"1", "/", "6"}], ")"}]}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"x", "^", "4"}]}], ")"}], "^", 
        RowBox[{"(", 
         RowBox[{"1", "/", "6"}], ")"}]}], ")"}]}], ")"}], "^", "6"}]}], "//",
   "Simplify"}]], "Input",
 CellChangeTimes->{{3.783708300033723*^9, 3.7837083425327845`*^9}, {
  3.7837096592964263`*^9, 3.7837096770486*^9}}],

Cell[BoxData["t"], "Output",
 CellChangeTimes->{3.7837096776213827`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"x", "^", "4"}]}], ")"}], "^", 
        RowBox[{"(", 
         RowBox[{"1", "/", "6"}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7837084411656475`*^9, 3.783708518823527*^9}, {
  3.7837085567517056`*^9, 3.7837086352972546`*^9}, {3.7837086711391945`*^9, 
  3.783708837521389*^9}, {3.7837096877685127`*^9, 3.7837097105539923`*^9}, {
  3.783709745392701*^9, 3.7837097467999277`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
5fNLB6JQt3j5OdIbBN9pJXZEIk2bn3qk5YsS7hs6RKJinVgz0tEsWxyrhyKQ
ZcNmX9I9EWd8bTwj0DZtuzjSW5XNY6XORaAn4iL5pF9+bqrxDw5HIxl7BkjH
H1zTq64WjvKj3kyR7q+WmlizEobKjIRW/8NW2eS99fH1MJTIuM1P+m1i6V4B
9jBcL64WJ518ZU6qJTMU17PMJ0jv8tTRPrUtFCXEHb5K+rK0o9Gf4h/ok8ID
fdK2rVkvwp/9QAFoszHp8R08/hsbQtBZnerXpPl/XYwreBeCggtGPpLWvP46
z1I8BHX8+ORKOifgd99vp2Ck8+Z+IOmJ0xyTX+WCUeWu+HDSyvlvWJ0bg5Cp
tdNP0jsU5C/ecAlEDm3bs0jbfAp5XDwWgBxaa/NIUyuY3cSUA1CN28Fi0uob
DJM9w/3RhoajFaSzLpc0LzH7I4FLQzWkBb8Kzxka+KFtERcaSX9u+rSzJtcX
CRrdaSWtp6OiH2D9HYlP5P0mXegba8PS6oMs7rNRSB/8vSH0saQP0o/gHiTt
uce0pMXtG1psGh4mvXS7buQUwxs5rrwbJW0YdoQ94qI3MuMfHCddPfxVjCPa
C53bs41BWkp06rIVqxcqrtoxQTrgkebTnrueqIfC+PPfeCWufbNlnwdyO7dl
hnT3zC+H88Nfke3T8DnSi3Kmns8j3dDNy7nz/70f0zl5rQZXNOtgvPjf/HJt
fiLQ6ojM67KXSR8W/R1A7/yAsuLZ/pG+GsaYXV9hiW7F0v+zjeFhwaqiUyj/
37//XJQR5e6+2Rz0teb+84jEr/HEFVswenvtPz/ko+cMzn+C1RlXVkjT2Phd
d8w4Q4alyRLp+HdZVsnmX+CzJet/7cl8GX1Y+K8byNnI/9deH+nZvVMy7jBY
zf5ff15MnN2Rb+kBlfqa06QVZZ5z+tZ5QtOZnP/Gh+t1LIeFqDfY3dWn/df/
QIUNt1u9QZX793/j3V/Qy3bZ7hvcUeQfIZ24lotF5LcPuBcO9ZH+diCemfvz
d+D9bvDf/L69pMzELOsLDSxfO/6bL7P+ZcaAL1Ssf9ZC+qLH68UuNz+w8mBu
IC2Rvm2+/JQ//Hh4ovq/9dmROJs25g8W53eWkR7mG/rz5XwgaCslZ/8332fe
Ea//BIL5FcM00imGO+nGgUFwnj86nnRNka5l7L5gSKW8iiQt3yI8LfA6GJaj
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
fZv/Aew4TkQ=
     "]]}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.75},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.783708586815172*^9, 3.7837086032766314`*^9}, 
   3.783708635762516*^9, {3.783708671765461*^9, 3.7837087121407394`*^9}, {
   3.7837087473589487`*^9, 3.7837088378012466`*^9}, {3.78370970064225*^9, 
   3.783709711151582*^9}, 3.7837097474162803`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"x", "^", "4"}]}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{"1", "/", "6"}], ")"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.783709773994636*^9, 3.78370981356032*^9}, 
   3.7837098539594*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
f/9vg/7//23+B8TMBo8=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, -1.05},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.783709789203145*^9, 3.7837098145526457`*^9}, 
   3.783709854543803*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"JacobianMatrix", "[", 
   RowBox[{"Ex1", ",", "CdX1"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.783706670052909*^9, 3.783706685922984*^9}, {
  3.7837082924473147`*^9, 3.783708293624128*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["x", 
       RowBox[{"4", " ", 
        SuperscriptBox["t", 
         RowBox[{"3", "/", "4"}]]}]], 
      SuperscriptBox["t", 
       RowBox[{"1", "/", "4"}]]},
     {
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox["x", "4"]}], ")"}], 
        RowBox[{"1", "/", "6"}]], 
       RowBox[{"6", " ", 
        SuperscriptBox["t", 
         RowBox[{"5", "/", "6"}]]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", 
         SuperscriptBox["t", 
          RowBox[{"1", "/", "6"}]], " ", 
         SuperscriptBox["x", "3"]}], 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SuperscriptBox["x", "4"]}], ")"}], 
          RowBox[{"5", "/", "6"}]]}]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7837066775367527`*^9, 3.783706686184284*^9}, 
   3.78370829413783*^9, 3.783709636034808*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Det", "[", 
   RowBox[{"JacobianMatrix", "[", 
    RowBox[{"Ex1", ",", "CdX1"}], "]"}], "]"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.78370671315574*^9, 3.7837067195070114`*^9}, {
  3.7837083782959476`*^9, 3.783708378983325*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["1", 
   RowBox[{"6", " ", 
    SuperscriptBox["t", 
     RowBox[{"7", "/", "12"}]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["x", "4"]}], ")"}], 
     RowBox[{"5", "/", "6"}]]}]]}]], "Output",
 CellChangeTimes->{3.783706719834996*^9, 3.7837083794888115`*^9, 
  3.783709638056713*^9, 3.783709868533311*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   FractionBox["1", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["x", "4"]}], ")"}], 
     RowBox[{"5", "/", "6"}]]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7837098705725827`*^9, 3.7837099007556334`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"3", " ", 
   RowBox[{"Gamma", "[", 
    FractionBox["1", "4"], "]"}], " ", 
   RowBox[{"Gamma", "[", 
    FractionBox["7", "6"], "]"}]}], 
  RowBox[{"Gamma", "[", 
   FractionBox["5", "12"], "]"}]]], "Output",
 CellChangeTimes->{{3.783709892460388*^9, 3.783709901252839*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"t", "^", 
       RowBox[{"(", 
        RowBox[{"1", "/", "n"}], ")"}]}], "*", "x"}], ")"}], "^", "n"}], " ", 
   "+", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"t", "^", 
       RowBox[{"(", 
        RowBox[{"1", "/", "m"}], ")"}]}], "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"x", "^", "n"}]}], ")"}], "^", 
       RowBox[{"(", 
        RowBox[{"1", "/", "m"}], ")"}]}]}], ")"}], "^", "m"}]}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.7837219752663684`*^9, 3.783721994564873*^9}, {
  3.7837221128323107`*^9, 3.78372212125669*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["t", 
      FractionBox["1", "n"]], " ", "x"}], ")"}], "n"], "+", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["t", 
      FractionBox["1", "m"]], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["x", "n"]}], ")"}], 
      FractionBox["1", "m"]]}], ")"}], "m"]}]], "Output",
 CellChangeTimes->{{3.783721990196158*^9, 3.7837219948444395`*^9}, {
  3.783722121685808*^9, 3.783722123495875*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ex2", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"t", "^", 
      RowBox[{"(", 
       RowBox[{"1", "/", "n"}], ")"}]}], "*", "x"}], ",", 
    RowBox[{
     RowBox[{"t", "^", 
      RowBox[{"(", 
       RowBox[{"1", "/", "m"}], ")"}]}], "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"x", "^", "n"}]}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"1", "/", "m"}], ")"}]}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.783721931992601*^9, 3.7837219390406265`*^9}, {
  3.783722145959837*^9, 3.783722153470914*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["t", 
     FractionBox["1", "n"]], " ", "x"}], ",", 
   RowBox[{
    SuperscriptBox["t", 
     FractionBox["1", "m"]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["x", "n"]}], ")"}], 
     FractionBox["1", "m"]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7837219359400024`*^9, 3.7837219394169626`*^9}, 
   3.783721996541812*^9, 3.783722153937603*^9, 3.7837275024849243`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"JacobianMatrix", "[", 
      RowBox[{"Ex2", ",", "CdX1"}], "]"}], "]"}], ".", 
    RowBox[{"JacobianMatrix", "[", 
     RowBox[{"Ex2", ",", "CdX1"}], "]"}]}], "//", "Simplify"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.7837219469647655`*^9, 3.783721947546995*^9}, {
  3.7837231678155985`*^9, 3.7837231902361517`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["t", 
           RowBox[{"2", "/", "n"}]], " ", 
          SuperscriptBox["x", "2"]}], 
         SuperscriptBox["n", "2"]], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["t", 
           RowBox[{"2", "/", "m"}]], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             SuperscriptBox["x", "n"]}], ")"}], 
           RowBox[{"2", "/", "m"}]]}], 
         SuperscriptBox["m", "2"]]}], 
       SuperscriptBox["t", "2"]], 
      RowBox[{
       FractionBox[
        RowBox[{
         SuperscriptBox["t", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           FractionBox["2", "n"]}]], " ", "x"}], "n"], "-", 
       FractionBox[
        RowBox[{"n", " ", 
         SuperscriptBox["t", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           FractionBox["2", "m"]}]], " ", 
         SuperscriptBox["x", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}]], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SuperscriptBox["x", "n"]}], ")"}], 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           FractionBox["2", "m"]}]]}], 
        SuperscriptBox["m", "2"]]}]},
     {
      RowBox[{
       FractionBox[
        RowBox[{
         SuperscriptBox["t", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           FractionBox["2", "n"]}]], " ", "x"}], "n"], "-", 
       FractionBox[
        RowBox[{"n", " ", 
         SuperscriptBox["t", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           FractionBox["2", "m"]}]], " ", 
         SuperscriptBox["x", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}]], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SuperscriptBox["x", "n"]}], ")"}], 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           FractionBox["2", "m"]}]]}], 
        SuperscriptBox["m", "2"]]}], 
      RowBox[{
       SuperscriptBox["t", 
        RowBox[{"2", "/", "n"}]], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["n", "2"], " ", 
         SuperscriptBox["t", 
          RowBox[{"2", "/", "m"}]], " ", 
         SuperscriptBox["x", 
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           RowBox[{"2", " ", "n"}]}]], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SuperscriptBox["x", "n"]}], ")"}], 
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           FractionBox["2", "m"]}]]}], 
        SuperscriptBox["m", "2"]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7837219481363797`*^9, 3.7837221603212414`*^9, {3.783723181504916*^9, 
   3.7837231906520405`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Sqrt", "[", 
    RowBox[{"Det", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"JacobianMatrix", "[", 
        RowBox[{"Ex2", ",", "CdX1"}], "]"}], "]"}], ".", 
      RowBox[{"JacobianMatrix", "[", 
       RowBox[{"Ex2", ",", "CdX1"}], "]"}]}], "]"}], "]"}], "//", 
   "Simplify"}], "//", "TeXForm"}]], "Input",
 CellChangeTimes->{{3.7837068231416235`*^9, 3.783706829090869*^9}, {
  3.7837096446880574`*^9, 3.7837096456395144`*^9}, {3.783722004592833*^9, 
  3.783722078087126*^9}, {3.7837274932897797`*^9, 3.783727496828647*^9}}],

Cell["\<\
\\sqrt{\\frac{t^{2 \\left(\\frac{1}{m}+\\frac{1}{n}-1\\right)}
   \\left(1-x^n\\right)^{\\frac{2}{m}-2}}{m^2}}\
\>", "Output",
 CellChangeTimes->{
  3.78372204678203*^9, 3.783722078426751*^9, 3.7837221621164837`*^9, {
   3.78372749723062*^9, 3.783727504935626*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"x", "^", 
        RowBox[{"(", 
         RowBox[{"2", "n"}], ")"}]}]}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"2", "m"}], ")"}]}]}], ")"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Element", "[", 
        RowBox[{"n", ",", "Integers"}], "]"}], ",", 
       RowBox[{"Element", "[", 
        RowBox[{"m", ",", "Integers"}], "]"}]}], "}"}]}]}], " ", "]"}], "//", 
  "TeXForm"}]], "Input",
 CellChangeTimes->{{3.7837220509422383`*^9, 3.7837220815600324`*^9}, {
  3.783722169515438*^9, 3.783722174727112*^9}, {3.783722215694704*^9, 
  3.7837223298375196`*^9}, {3.783727603178831*^9, 3.7837276056140575`*^9}}],

Cell["\<\
\\text{ConditionalExpression}\\left[\\, _2F_1\\left(1-\\frac{1}{2 \
m},\\frac{1}{2 n};1+\\frac{1}{2
   n};(-1)^{2 n}\\right)+\\frac{\\Gamma \\left(\\frac{1}{2 m}\\right) \\Gamma \
\\left(1+\\frac{1}{2
   n}\\right)}{\\Gamma \\left(\\frac{m+n}{2 m n}\\right)},n>0\\land \
m>0\\right]\
\>", "Output",
 CellChangeTimes->{{3.7837220652527795`*^9, 3.783722082123708*^9}, 
   3.7837222133683224`*^9, 3.7837222456173153`*^9, 3.7837223464751267`*^9, 
   3.7837276227586317`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Res", "[", "s3_", "]"}], ":=", 
  RowBox[{"1", "-", 
   RowBox[{"s3", "^", "k3"}]}]}]], "Input",
 CellChangeTimes->{{3.783723941314631*^9, 3.7837239610163083`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"s1", "^", "k1"}], " ", "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Res", "[", "s3", "]"}], " ", "-", " ", 
        RowBox[{"s1", "^", "k1"}]}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"1", "/", "k2"}], ")"}]}], ")"}], "^", "k2"}]}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.7837239662768526`*^9, 3.7837241536404295`*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["s1", "k1"], "+", 
  SuperscriptBox[
   RowBox[{"(", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["s1", "k1"], "-", 
       SuperscriptBox["s3", "k3"]}], ")"}], 
     FractionBox["1", "k2"]], ")"}], "k2"]}]], "Output",
 CellChangeTimes->{3.7837241542778435`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ex2", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"t", "^", 
      RowBox[{"(", 
       RowBox[{"1", "/", "k1"}], ")"}]}], "*", "s1"}], ",", 
    RowBox[{
     RowBox[{"t", "^", 
      RowBox[{"(", 
       RowBox[{"1", "/", "k2"}], ")"}]}], "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Res", "[", "s3", "]"}], "-", 
        RowBox[{"s1", "^", "k1"}]}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"1", "/", "k2"}], ")"}]}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.783724246777749*^9, 3.7837242839571905`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"s1", " ", 
    SuperscriptBox["t", 
     FractionBox["1", "k1"]]}], ",", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["s1", "k1"], "-", 
       SuperscriptBox["s3", "k3"]}], ")"}], 
     FractionBox["1", "k2"]], " ", 
    SuperscriptBox["t", 
     FractionBox["1", "k2"]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.7837242868843265`*^9, 3.7837283445575*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CdX2", "=", 
  RowBox[{"{", 
   RowBox[{"t", ",", "s1"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7837242915765247`*^9, 3.7837243049176197`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"t", ",", "s1"}], "}"}]], "Output",
 CellChangeTimes->{3.7837243177770977`*^9, 3.783728345489386*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Sqrt", "[", 
    RowBox[{"Det", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"JacobianMatrix", "[", 
        RowBox[{"Ex2", ",", "CdX2"}], "]"}], "]"}], ".", 
      RowBox[{"JacobianMatrix", "[", 
       RowBox[{"Ex2", ",", "CdX2"}], "]"}]}], "]"}], "]"}], "//", 
   "Simplify"}], "//", "TeXForm"}]], "Input",
 CellChangeTimes->{{3.7837243193685365`*^9, 3.78372436378437*^9}, {
  3.783728340146225*^9, 3.7837283416610613`*^9}}],

Cell["\<\
\\sqrt{\\frac{\\left(\\text{s3}^{\\text{k3}}-1\\right)^2 t^{2
   \\left(\\frac{1}{\\text{k1}}+\\frac{1}{\\text{k2}}-1\\right)}
   \\left(-\\text{s1}^{\\text{k1}}-\\text{s3}^{\\text{k3}}+1\\right)^{\\frac{\
2}{\\text{k2}}-2}}{\\text{k2}
   ^2}}\
\>", "Output",
 CellChangeTimes->{{3.78372432949681*^9, 3.7837243646146097`*^9}, {
  3.7837283419552794`*^9, 3.7837283462826047`*^9}}]
}, Open  ]],

Cell[TextData[{
 "This is the ds1ds2 integral, the original integral is actually scaled \
down... more details in the ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"T", 
     AdjustmentBox["E",
      BoxBaselineShift->0.5,
      BoxMargins->{{-0.3, 0}, {0, 0}}], "X"}],
    SingleLetterItalics->False], TraditionalForm]]],
 " file. But in any case, the leftover factor is given in the next integral"
}], "Text",
 CellChangeTimes->{{3.78372648361194*^9, 3.7837265485432186`*^9}, {
  3.7837266809369903`*^9, 3.783726702467249*^9}, {3.7837267468463097`*^9, 
  3.783726749518753*^9}, {3.7837267987990775`*^9, 3.78372681787224*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["s1", "k1"]}], ")"}], "^", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"1", "/", "k2"}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"s1", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Element", "[", 
         RowBox[{"k1", ",", "Integers"}], "]"}], "@@", 
        RowBox[{"Mod", "[", 
         RowBox[{"k1", ",", "2"}], "]"}]}], "\[Equal]", "0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Element", "[", 
         RowBox[{"k2", ",", "Integers"}], "]"}], "@@", 
        RowBox[{"Mod", "[", 
         RowBox[{"k2", ",", "2"}], "]"}]}], "\[Equal]", "0"}]}], "}"}]}]}], 
  " ", "]"}]], "Input",
 CellChangeTimes->{{3.783724380574687*^9, 3.78372444125902*^9}, {
  3.783724632940792*^9, 3.783724634346656*^9}, {3.783724665576647*^9, 
  3.7837246781720295`*^9}, {3.783724742236453*^9, 3.7837247529881625`*^9}, {
  3.7837249707963924`*^9, 3.783725014516489*^9}, {3.783725236466605*^9, 
  3.7837253476261625`*^9}, {3.783725549634175*^9, 3.783725567481536*^9}, {
  3.783726115354311*^9, 3.783726127665308*^9}, {3.7837266547382407`*^9, 
  3.783726675477299*^9}, {3.783726732388546*^9, 3.783726740074095*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"Gamma", "[", 
       RowBox[{"1", "+", 
        FractionBox["1", "k1"]}], "]"}], " ", 
      RowBox[{"Gamma", "[", 
       FractionBox["1", "k2"], "]"}]}], 
     RowBox[{"Gamma", "[", 
      RowBox[{
       FractionBox["1", "k1"], "+", 
       FractionBox["1", "k2"]}], "]"}]], "+", 
    RowBox[{"Hypergeometric2F1", "[", 
     RowBox[{
      FractionBox["1", "k1"], ",", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "k2"}], "k2"], ",", 
      RowBox[{"1", "+", 
       FractionBox["1", "k1"]}], ",", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "k1"]}], "]"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Re", "[", "k2", "]"}], ">", "0"}], "&&", 
    RowBox[{
     RowBox[{"Re", "[", "k1", "]"}], ">", "0"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.7837245800882244`*^9, 3.7837246617948227`*^9, 
  3.783724739996705*^9, 3.783724967856843*^9, 3.7837249980691795`*^9, 
  3.7837252277061453`*^9, 3.7837252853326716`*^9, 3.783725318235834*^9, 
  3.7837257162770896`*^9, 3.783726144615985*^9, 3.783726711042844*^9, 
  3.7837267745618887`*^9}]
}, Open  ]],

Cell["\<\
This integral contains the scaling factor brought down from the previous \
integral. There\[CloseCurlyQuote]s also another factor of Res[s3] because it \
was the leading constant of the previous integral.\
\>", "Text",
 CellChangeTimes->{{3.7837268210018573`*^9, 3.783726862991273*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Res", "[", "s3", "]"}], "^", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"(", "k1", ")"}]}], "+", 
      RowBox[{"1", "/", 
       RowBox[{"(", "k2", ")"}]}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"s3", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Element", "[", 
       RowBox[{"k1", ",", "Integers"}], "]"}], ",", 
      RowBox[{"Element", "[", 
       RowBox[{"k2", ",", "Integers"}], "]"}], ",", 
      RowBox[{"R", "<", "1"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.783726168441846*^9, 3.7837262459695225`*^9}, {
  3.7837262820164337`*^9, 3.7837262821381874`*^9}, {3.783726349409506*^9, 
  3.7837263510405493`*^9}, {3.7837286201612306`*^9, 3.783728621478461*^9}, {
  3.7837289963050227`*^9, 3.78372899749746*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"Gamma", "[", 
       RowBox[{"1", "+", 
        FractionBox["1", "k1"], "+", 
        FractionBox["1", "k2"]}], "]"}], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{"1", "+", 
        FractionBox["1", "k3"]}], "]"}]}], 
     RowBox[{"Gamma", "[", 
      RowBox[{"1", "+", 
       FractionBox["1", "k1"], "+", 
       FractionBox["1", "k2"], "+", 
       FractionBox["1", "k3"]}], "]"}]], "+", 
    RowBox[{"Hypergeometric2F1", "[", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"k1", "+", "k2"}], 
        RowBox[{"k1", " ", "k2"}]]}], ",", 
      FractionBox["1", "k3"], ",", 
      RowBox[{"1", "+", 
       FractionBox["1", "k3"]}], ",", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "k3"]}], "]"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"k1", " ", "k2", " ", 
      RowBox[{"(", 
       RowBox[{"k1", "+", "k2", "+", 
        RowBox[{"k1", " ", "k2"}]}], ")"}]}], ">", "0"}], "&&", 
    RowBox[{
     RowBox[{"Re", "[", "k3", "]"}], ">", "0"}]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.783726274425563*^9, 3.7837263309858427`*^9, 3.7837263951218834`*^9, {
   3.7837286185317554`*^9, 3.7837286477170553`*^9}, 3.7837290236597414`*^9}]
}, Open  ]],

Cell["\<\
Testing if everything makes sense for a sphere of radius 1. This is the s1s2 \
integral.\
\>", "Text",
 CellChangeTimes->{{3.783726867329605*^9, 3.7837269100072393`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["s1", "2"]}], ")"}], "^", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"1", "/", "2"}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"s1", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], " ", "]"}]], "Input",
 CellChangeTimes->{{3.7837264043375273`*^9, 3.7837264162902513`*^9}}],

Cell[BoxData["\[Pi]"], "Output",
 CellChangeTimes->{3.7837264172308197`*^9}]
}, Open  ]],

Cell["\<\
This is the s3 integral. We see that the two integrals multiply to give \
(4/3)Pi \
\>", "Text",
 CellChangeTimes->{{3.783726891925066*^9, 3.783726922271494*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"s3", "^", "2"}]}], ")"}], "^", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"1", "/", "2"}], "+", 
      RowBox[{"1", "/", "2"}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"s3", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7837264327133193`*^9, 3.783726468753789*^9}}],

Cell[BoxData[
 FractionBox["4", "3"]], "Output",
 CellChangeTimes->{{3.783726452813319*^9, 3.7837264694118567`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["s1", "k3"]}], ")"}], "^", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"1", "/", "k1"}], "+", 
      RowBox[{"1", "/", "k2"}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"s1", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Element", "[", 
         RowBox[{"k1", ",", "Integers"}], "]"}], "@@", 
        RowBox[{"Mod", "[", 
         RowBox[{"k1", ",", "2"}], "]"}]}], "\[Equal]", "0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Element", "[", 
         RowBox[{"k2", ",", "Integers"}], "]"}], "@@", 
        RowBox[{"Mod", "[", 
         RowBox[{"k2", ",", "2"}], "]"}]}], "\[Equal]", "0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Element", "[", 
         RowBox[{"k3", ",", "Integers"}], "]"}], "@@", 
        RowBox[{"Mod", "[", 
         RowBox[{"k3", ",", "2"}], "]"}]}], "\[Equal]", "0"}]}], "}"}]}]}], 
  " ", "]"}]], "Input",
 CellChangeTimes->{{3.7837423773260417`*^9, 3.783742450916398*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"Gamma", "[", 
       RowBox[{
        FractionBox["1", "k1"], "+", 
        FractionBox["1", "k2"]}], "]"}], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{"1", "+", 
        FractionBox["1", "k3"]}], "]"}]}], 
     RowBox[{"Gamma", "[", 
      RowBox[{
       FractionBox["1", "k1"], "+", 
       FractionBox["1", "k2"], "+", 
       FractionBox["1", "k3"]}], "]"}]], "+", 
    RowBox[{"Hypergeometric2F1", "[", 
     RowBox[{
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"k1", "+", "k2"}], 
        RowBox[{"k1", " ", "k2"}]]}], ",", 
      FractionBox["1", "k3"], ",", 
      RowBox[{"1", "+", 
       FractionBox["1", "k3"]}], ",", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "k3"]}], "]"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Re", "[", "k3", "]"}], ">", "0"}], "&&", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{
       FractionBox["1", "k1"], "+", 
       FractionBox["1", "k2"]}], "]"}], ">", "0"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.783742435875637*^9, 3.783742486704591*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"s4", "^", 
       RowBox[{"(", 
        RowBox[{"1", "/", "k4"}], ")"}]}]}], ")"}], "^", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"1", "/", 
       RowBox[{"(", "k1", ")"}]}], "+", 
      RowBox[{"1", "/", 
       RowBox[{"(", "k2", ")"}]}], "+", 
      RowBox[{"1", "/", 
       RowBox[{"(", "k3", ")"}]}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"s4", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Element", "[", 
       RowBox[{"k1", ",", "Integers"}], "]"}], ",", 
      RowBox[{"Element", "[", 
       RowBox[{"k2", ",", "Integers"}], "]"}], ",", 
      RowBox[{"Element", "[", 
       RowBox[{"k3", ",", "Integers"}], "]"}], ",", " ", 
      RowBox[{"Element", "[", 
       RowBox[{"k4", ",", "Integers"}], "]"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.783742515276739*^9, 3.783742566206812*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"Gamma", "[", 
       RowBox[{
        FractionBox["1", "k1"], "+", 
        FractionBox["1", "k2"], "+", 
        FractionBox["1", "k3"]}], "]"}], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{"1", "+", "k4"}], "]"}]}], 
     RowBox[{"Gamma", "[", 
      RowBox[{
       FractionBox["1", "k1"], "+", 
       FractionBox["1", "k2"], "+", 
       FractionBox["1", "k3"], "+", "k4"}], "]"}]], "+", 
    RowBox[{"Hypergeometric2F1", "[", 
     RowBox[{
      RowBox[{"1", "-", 
       FractionBox["1", "k1"], "-", 
       FractionBox["1", "k2"], "-", 
       FractionBox["1", "k3"]}], ",", "k4", ",", 
      RowBox[{"1", "+", "k4"}], ",", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       FractionBox["1", "k4"]]}], "]"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"k1", " ", "k2", " ", "k3", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"k2", " ", "k3"}], "+", 
        RowBox[{"k1", " ", 
         RowBox[{"(", 
          RowBox[{"k2", "+", "k3"}], ")"}]}]}], ")"}]}], ">", "0"}], "&&", 
    RowBox[{"k4", ">", "0"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.783742599945902*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["s1", "2"]}], ")"}], "^", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"1", "/", "2"}], "+", 
      RowBox[{"1", "/", "2"}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"s1", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7837426489056053`*^9, 3.7837426574767537`*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.783742658156028*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"s4", "^", "2"}]}], ")"}], "^", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"1", "/", 
       RowBox[{"(", "2", ")"}]}], "+", 
      RowBox[{"1", "/", 
       RowBox[{"(", "2", ")"}]}], "+", 
      RowBox[{"1", "/", 
       RowBox[{"(", "2", ")"}]}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"s4", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.783742663274886*^9, 3.783742668395526*^9}, {
  3.783742702205898*^9, 3.7837427159258547`*^9}}],

Cell[BoxData[
 FractionBox["\[Pi]", "2"]], "Output",
 CellChangeTimes->{
  3.783742673365979*^9, {3.7837427036558895`*^9, 3.783742716686161*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DDD", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"s2", "^", "k2"}], "-", 
       RowBox[{"s3", "^", "k3"}]}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{"1", "/", "k1"}], ")"}]}], ",", "s2", ",", "s3"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.783799407934949*^9, 3.783799430577119*^9}, 
   3.7837995255637836`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["s2", "k2"], "-", 
      SuperscriptBox["s3", "k3"]}], ")"}], 
    FractionBox["1", "k1"]], ",", "s2", ",", "s3"}], "}"}]], "Output",
 CellChangeTimes->{{3.783799426163122*^9, 3.7837994308887324`*^9}, 
   3.7837995264349203`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CDD", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"s2", ",", "s3"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7837994332418356`*^9, 3.783799437901721*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"s2", ",", "s3"}], "}"}]], "Output",
 CellChangeTimes->{3.7837994390030537`*^9, 3.783799529366607*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"JacobianMatrix", "[", 
   RowBox[{"DDD", ",", "CDD"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.7837994750739326`*^9, 3.7837994926517305`*^9}, 
   3.7837995321248655`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"JacobianMatrix", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["s2", "k2"], "-", 
         SuperscriptBox["s3", "k3"]}], ")"}], 
       FractionBox["1", "k1"]], ",", "s2", ",", "s3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"s2", ",", "s3"}], "}"}]}], "]"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7837994821420727`*^9, 3.783799493090063*^9}, 
   3.783799532474295*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7837241289971805`*^9, 3.7837241300483217`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7823616164554305`*^9, 3.7823616193359966`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7823457473077464`*^9, 3.782345754450677*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.782345539129285*^9, 3.782345543554615*^9}}],

Cell[BoxData["                                                                \
                                                                              \
               "], "Input",
 CellChangeTimes->{{3.7816464149209843`*^9, 3.7816464357741227`*^9}, 
   3.7816464921955185`*^9}]
},
WindowSize->{1128, 709},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.5 Inherited,
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (December 4, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 702, 14, 45, "Input"],
Cell[1263, 36, 591, 18, 45, "Input"],
Cell[CellGroupData[{
Cell[1879, 58, 145, 3, 45, "Input"],
Cell[2027, 63, 433, 15, 54, "Output"]
}, Open  ]],
Cell[2475, 81, 453, 13, 45, "Input"],
Cell[CellGroupData[{
Cell[2953, 98, 245, 6, 45, "Input"],
Cell[3201, 106, 116, 1, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3354, 112, 373, 11, 45, "Input"],
Cell[3730, 125, 191, 6, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3958, 136, 235, 6, 45, "Input"],
Cell[4196, 144, 115, 1, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4348, 150, 173, 4, 45, "Input"],
Cell[4524, 156, 115, 2, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4676, 163, 981, 22, 45, "Input"],
Cell[5660, 187, 2134, 59, 210, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7831, 251, 612, 18, 45, "Input"],
Cell[8446, 271, 178, 4, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8661, 280, 660, 20, 45, "Input"],
Cell[9324, 302, 608, 12, 38, "Message"],
Cell[9935, 316, 438, 11, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10410, 332, 395, 11, 58, "Input"],
Cell[10808, 345, 106, 1, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10951, 351, 400, 11, 58, "Input"],
Cell[11354, 364, 104, 1, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11495, 370, 1117, 30, 75, "Input"],
Cell[12615, 402, 724, 18, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13376, 425, 808, 19, 45, "Input"],
Cell[14187, 446, 645, 16, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14869, 467, 629, 20, 45, "Input"],
Cell[15501, 489, 501, 16, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16039, 510, 183, 4, 45, "Input"],
Cell[16225, 516, 417, 8, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16679, 529, 185, 4, 45, "Input"],
Cell[16867, 535, 261, 5, 44, "Output"]
}, Open  ]],
Cell[17143, 543, 929, 28, 162, "Input"],
Cell[CellGroupData[{
Cell[18097, 575, 273, 5, 45, "Input"],
Cell[18373, 582, 1323, 36, 81, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19733, 623, 130, 2, 45, "Input"],
Cell[19866, 627, 1332, 41, 130, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21235, 673, 127, 2, 45, "Input"],
Cell[21365, 677, 1881, 57, 130, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23283, 739, 158, 3, 45, "Input"],
Cell[23444, 744, 587, 19, 82, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24068, 768, 413, 7, 45, "Input"],
Cell[24484, 777, 2065, 56, 151, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26586, 838, 293, 7, 45, "Input"],
Cell[26882, 847, 2624, 70, 187, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29543, 922, 127, 2, 67, "Input"],
Cell[29673, 926, 2545, 69, 280, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32255, 1000, 212, 5, 67, "Input"],
Cell[32470, 1007, 1001, 28, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33508, 1040, 544, 17, 45, "Input"],
Cell[34055, 1059, 145, 3, 66, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34237, 1067, 897, 28, 75, "Input"],
Cell[35137, 1097, 411, 15, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35585, 1117, 751, 24, 75, "Input"],
Cell[36339, 1143, 835, 30, 90, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37211, 1178, 953, 27, 75, "Input"],
Cell[38167, 1207, 625, 18, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38829, 1230, 756, 24, 75, "Input"],
Cell[39588, 1256, 79, 1, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39704, 1262, 182, 4, 45, "Input"],
Cell[39889, 1268, 116, 1, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40042, 1274, 287, 9, 51, "Input"],
Cell[40332, 1285, 206, 4, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40575, 1294, 292, 8, 45, "Input"],
Cell[40870, 1304, 542, 11, 38, "Message"],
Cell[41415, 1317, 267, 7, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41719, 1329, 248, 6, 45, "Input"],
Cell[41970, 1337, 644, 13, 35, "Message"],
Cell[42617, 1352, 351, 12, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43005, 1369, 387, 11, 45, "Input"],
Cell[43395, 1382, 9655, 169, 364, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53087, 1556, 700, 17, 45, "Input"],
Cell[53790, 1575, 6702, 119, 562, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60529, 1699, 760, 20, 45, "Input"],
Cell[61292, 1721, 6618, 119, 555, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67947, 1845, 803, 21, 45, "Input"],
Cell[68753, 1868, 6790, 122, 562, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75580, 1995, 549, 16, 45, "Input"],
Cell[76132, 2013, 6542, 117, 562, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82711, 2135, 1622, 50, 133, "Input"],
Cell[84336, 2187, 24079, 407, 562, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108452, 2599, 261, 7, 45, "Input"],
Cell[108716, 2608, 9063, 160, 342, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117816, 2773, 158, 3, 45, "Input"],
Cell[117977, 2778, 110, 1, 44, "Output"]
}, Open  ]],
Cell[118102, 2782, 901, 28, 162, "Input"],
Cell[CellGroupData[{
Cell[119028, 2814, 587, 18, 45, "Input"],
Cell[119618, 2834, 500, 15, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[120155, 2854, 178, 4, 45, "Input"],
Cell[120336, 2860, 122, 3, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[120495, 2868, 305, 6, 45, "Input"],
Cell[120803, 2876, 502, 13, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121342, 2894, 467, 14, 92, "Input"],
Cell[121812, 2910, 270, 9, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122119, 2924, 288, 7, 45, "Input"],
Cell[122410, 2933, 1694, 54, 138, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[124141, 2992, 414, 11, 45, "Input"],
Cell[124558, 3005, 241, 7, 73, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[124836, 3017, 422, 12, 91, "Input"],
Cell[125261, 3031, 582, 12, 59, "Message"],
Cell[125846, 3045, 397, 12, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[126280, 3062, 273, 7, 45, "Input"],
Cell[126556, 3071, 18471, 316, 350, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145064, 3392, 294, 6, 45, "Input"],
Cell[145361, 3400, 1556, 46, 109, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[146954, 3451, 632, 16, 45, "Input"],
Cell[147589, 3469, 264, 4, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147890, 3478, 520, 16, 45, "Input"],
Cell[148413, 3496, 318, 11, 66, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148768, 3512, 165, 4, 45, "Input"],
Cell[148936, 3518, 139, 3, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149112, 3526, 159, 3, 45, "Input"],
Cell[149274, 3531, 753, 27, 99, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150064, 3563, 198, 4, 45, "Input"],
Cell[150265, 3569, 292, 9, 85, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150594, 3583, 865, 22, 75, "Input"],
Cell[151462, 3607, 1333, 39, 87, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[152832, 3651, 527, 16, 45, "Input"],
Cell[153362, 3669, 353, 11, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[153752, 3685, 610, 20, 99, "Input"],
Cell[154365, 3707, 435, 14, 82, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[154837, 3726, 562, 18, 45, "Input"],
Cell[155402, 3746, 223, 6, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155662, 3757, 795, 25, 75, "Input"],
Cell[156460, 3784, 287, 8, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156784, 3797, 452, 13, 45, "Input"],
Cell[157239, 3812, 149, 2, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[157425, 3819, 375, 10, 45, "Input"],
Cell[157803, 3831, 143, 3, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[157983, 3839, 808, 20, 45, "Input"],
Cell[158794, 3861, 350, 5, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[159181, 3871, 305, 8, 45, "Input"],
Cell[159489, 3881, 70, 1, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[159596, 3887, 302, 8, 45, "Input"],
Cell[159901, 3897, 72, 1, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160010, 3903, 387, 12, 45, "Input"],
Cell[160400, 3917, 509, 19, 74, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160946, 3941, 163, 3, 45, "Input"],
Cell[161112, 3946, 917, 29, 100, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162066, 3980, 218, 4, 45, "Input"],
Cell[162287, 3986, 222, 4, 68, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162546, 3995, 762, 22, 75, "Input"],
Cell[163311, 4019, 573, 17, 109, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163921, 4041, 1264, 38, 104, "Input"],
Cell[165188, 4081, 1394, 43, 124, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[166619, 4129, 715, 20, 45, "Input"],
Cell[167337, 4151, 562, 18, 110, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[167936, 4174, 279, 8, 45, "Input"],
Cell[168218, 4184, 136, 4, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168391, 4193, 282, 8, 45, "Input"],
Cell[168676, 4203, 236, 8, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168949, 4216, 453, 13, 45, "Input"],
Cell[169405, 4231, 186, 2, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[169628, 4238, 378, 10, 45, "Input"],
Cell[170009, 4250, 287, 9, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170333, 4264, 569, 18, 45, "Input"],
Cell[170905, 4284, 162, 2, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171104, 4291, 504, 13, 45, "Input"],
Cell[171611, 4306, 486, 12, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172134, 4323, 213, 5, 45, "Input"],
Cell[172350, 4330, 188, 4, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172575, 4339, 158, 3, 45, "Input"],
Cell[172736, 4344, 1158, 33, 73, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173931, 4382, 194, 4, 45, "Input"],
Cell[174128, 4388, 1509, 42, 91, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[175674, 4435, 196, 4, 45, "Input"],
Cell[175873, 4441, 179, 4, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[176089, 4450, 367, 10, 75, "Input"],
Cell[176459, 4462, 839, 24, 100, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[177335, 4491, 361, 9, 45, "Input"],
Cell[177699, 4502, 204, 5, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[177940, 4512, 673, 20, 45, "Input"],
Cell[178616, 4534, 479, 15, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179132, 4554, 243, 5, 45, "Input"],
Cell[179378, 4561, 196, 5, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179611, 4571, 722, 24, 45, "Input"],
Cell[180336, 4597, 72, 1, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[180445, 4603, 776, 20, 45, "Input"],
Cell[181224, 4625, 17256, 293, 293, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[198517, 4923, 477, 15, 45, "Input"],
Cell[198997, 4940, 17241, 294, 359, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[216275, 5239, 246, 5, 45, "Input"],
Cell[216524, 5246, 1499, 46, 112, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[218060, 5297, 277, 6, 45, "Input"],
Cell[218340, 5305, 400, 12, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[218777, 5322, 391, 12, 93, "Input"],
Cell[219171, 5336, 314, 9, 90, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[219522, 5350, 704, 24, 45, "Input"],
Cell[220229, 5376, 554, 18, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[220820, 5399, 592, 19, 45, "Input"],
Cell[221415, 5420, 495, 15, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[221947, 5440, 426, 11, 75, "Input"],
Cell[222376, 5453, 3370, 107, 133, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[225783, 5565, 597, 14, 75, "Input"],
Cell[226383, 5581, 275, 6, 68, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[226695, 5592, 997, 29, 75, "Input"],
Cell[227695, 5623, 480, 10, 91, "Output"]
}, Open  ]],
Cell[228190, 5636, 199, 5, 45, "Input"],
Cell[CellGroupData[{
Cell[228414, 5645, 449, 14, 45, "Input"],
Cell[228866, 5661, 345, 11, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[229248, 5677, 586, 19, 45, "Input"],
Cell[229837, 5698, 464, 15, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[230338, 5718, 170, 4, 45, "Input"],
Cell[230511, 5724, 140, 3, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[230688, 5732, 497, 13, 75, "Input"],
Cell[231188, 5747, 389, 8, 115, "Output"]
}, Open  ]],
Cell[231592, 5758, 635, 15, 77, "Text"],
Cell[CellGroupData[{
Cell[232252, 5777, 1404, 36, 114, "Input"],
Cell[233659, 5815, 1225, 35, 146, "Output"]
}, Open  ]],
Cell[234899, 5853, 296, 5, 74, "Text"],
Cell[CellGroupData[{
Cell[235220, 5862, 942, 25, 75, "Input"],
Cell[236165, 5889, 1334, 40, 183, "Output"]
}, Open  ]],
Cell[237514, 5932, 180, 4, 45, "Text"],
Cell[CellGroupData[{
Cell[237719, 5940, 445, 14, 51, "Input"],
Cell[238167, 5956, 76, 1, 44, "Output"]
}, Open  ]],
Cell[238258, 5960, 172, 4, 45, "Text"],
Cell[CellGroupData[{
Cell[238455, 5968, 442, 14, 45, "Input"],
Cell[238900, 5984, 116, 2, 66, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239053, 5991, 1221, 37, 114, "Input"],
Cell[240277, 6030, 1189, 38, 192, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[241503, 6073, 1076, 32, 104, "Input"],
Cell[242582, 6107, 1260, 39, 191, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[243879, 6151, 477, 15, 51, "Input"],
Cell[244359, 6168, 70, 1, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[244466, 6174, 644, 20, 45, "Input"],
Cell[245113, 6196, 145, 3, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[245295, 6204, 410, 13, 45, "Input"],
Cell[245708, 6219, 351, 10, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[246096, 6234, 178, 4, 45, "Input"],
Cell[246277, 6240, 141, 3, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[246455, 6248, 226, 5, 45, "Input"],
Cell[246684, 6255, 553, 17, 84, "Output"]
}, Open  ]],
Cell[247252, 6275, 96, 1, 45, "Input"],
Cell[247351, 6278, 96, 1, 45, "Input"],
Cell[247450, 6281, 94, 1, 45, "Input"],
Cell[247547, 6284, 92, 1, 45, "Input"],
Cell[247642, 6287, 285, 4, 75, "Input"]
}
]
*)

(* End of internal cache information *)
