(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    179596,       3722]
NotebookOptionsPosition[    167682,       3556]
NotebookOutlinePosition[    168130,       3573]
CellTagsIndexPosition[    168087,       3570]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 "AMO Physics Notebook\n",
 StyleBox["\nAuthor: Huan Q. Bui\nFirst updated: Jan 30, 2022\nLast updated: \
Jan 30, 2022",
  FontSize->16,
  FontColor->RGBColor[0., 0., 0.]]
}], "Section",
 CellChangeTimes->{{3.884093517673361*^9, 3.884093537992972*^9}, {
  3.88409375974515*^9, 
  3.884093813164402*^9}},ExpressionUUID->"9f06dff5-46c8-4bf4-b06d-\
a15937dd47cb"],

Cell["Early Atomic Physics", "Subsection",
 CellChangeTimes->{{3.884093542641552*^9, 
  3.8840935535071793`*^9}},ExpressionUUID->"610b0b25-317c-4e62-b329-\
2f43aa82c17f"],

Cell["The Hydrogen Atom", "Subsection",
 CellChangeTimes->{{3.884093561239253*^9, 
  3.884093566883004*^9}},ExpressionUUID->"c34500a0-60ab-47c0-979b-\
e8d4e72f5fde"],

Cell["The Alkalis", "Subsection",
 CellChangeTimes->{{3.884093576889656*^9, 
  3.884093578296946*^9}},ExpressionUUID->"4603ea26-a860-4a21-9d80-\
f3334fdf470f"],

Cell["Spin-Orbit Coupling", "Subsection",
 CellChangeTimes->{{3.884093587919283*^9, 
  3.884093590711277*^9}},ExpressionUUID->"6ad49400-1219-46e1-a09c-\
530011fed19b"],

Cell["Hyperfine Structure", "Subsection",
 CellChangeTimes->{{3.884093598746748*^9, 
  3.884093601223003*^9}},ExpressionUUID->"b2d6a9f3-bd4b-4e02-a365-\
a031d3d748d9"],

Cell[CellGroupData[{

Cell["Interaction of Atoms with Radiations", "Subsection",
 CellChangeTimes->{{3.884093607299618*^9, 3.884093611789506*^9}, 
   3.8840936879792852`*^9},ExpressionUUID->"ad3866f7-df3c-4746-9561-\
401534c08338"],

Cell[TextData[StyleBox["Two-level system (Rabi problem)",
 FontSize->18,
 FontWeight->"Bold",
 FontColor->RGBColor[
  0.09518577859159227, 0.47513542381933316`, 0.7218432898451209]]], "Text",
 CellChangeTimes->{{3.884093830289625*^9, 
  3.884093867755384*^9}},ExpressionUUID->"ec085709-c658-485a-9c14-\
ef8930f7a0db"],

Cell["\<\
Readily observed in radio-frequency (RF) spectroscopy for e.g . transitions \
between Zeeman or hf levels . These transitions also have negligible \
spontaneous emission, so n most cases the atoms evolve coherently .\
\>", "Text",
 CellChangeTimes->{{3.8840940914799*^9, 3.8840941030842648`*^9}, {
  3.884094162717883*^9, 
  3.8840941765075207`*^9}},ExpressionUUID->"7d840f78-2453-419a-8262-\
b6ae6fa7ee39"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Population", " ", "in", " ", "excited", " ", 
   RowBox[{"state", ":", " ", 
    RowBox[{"non", "-", 
     RowBox[{"perturbative", " ", "solution"}]}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.8840941071792603`*^9, 
  3.884094117541583*^9}},ExpressionUUID->"43d9cec8-0d66-4e54-b182-\
4ae9ab07dd75"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalOmega]", "=", "1"}], " ", ";"}], 
  RowBox[{"(*", 
   RowBox[{"Rabi", " ", "frequency"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.884095656625092*^9, 3.8840956696147327`*^9}, {
  3.884100129820282*^9, 3.884100141669608*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"009b07c0-c819-49de-8385-bfa4735d443f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"P2", "[", 
   RowBox[{"t_", ",", "\[Delta]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[CapitalOmega]", "^", "2"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[CapitalOmega]", "^", "2"}], "+", 
       RowBox[{"\[Delta]", "^", "2"}]}], ")"}]}], ")"}], "*", 
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"\[CapitalOmega]", "^", "2"}], "+", 
        RowBox[{"\[Delta]", "^", "2"}]}], "]"}], "*", 
      RowBox[{"t", "/", "2"}]}], "]"}], "^", "2"}]}]}]], "Input",
 CellChangeTimes->{{3.884100148280446*^9, 3.884100151279635*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"2cbb3233-351d-49c6-85d9-cae825768993"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"P2", "[", 
      RowBox[{"t", ",", "\[Delta]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Delta]", ",", 
       RowBox[{
        RowBox[{"-", "3"}], "*", "\[CapitalOmega]"}], ",", 
       RowBox[{"3", "*", "\[CapitalOmega]"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"6", "*", 
      RowBox[{"Pi", "/", "\[CapitalOmega]"}]}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.884100160194923*^9, 3.884100163143784*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"3fdf5afe-c570-4239-ac33-7b1a7de79c3d"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 9.537875296298612, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 6 Pi}}, Typeset`size$$ = {
    360., {118., 123.63201446121224`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        $CellContext`P2[$CellContext`t$$, $CellContext`\[Delta]], \
{$CellContext`\[Delta], (-3) $CellContext`\[CapitalOmega], 
         3 $CellContext`\[CapitalOmega]}, PlotRange -> {0, 1}], 
      "Specifications" :> {{$CellContext`t$$, 0, 6 Pi}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{410., {163.13403309800196`, 168.86596690199804`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.88409415191905*^9, 3.88409567266614*^9, 3.884100072136073*^9, {
   3.8841001688485928`*^9, 3.884100189661202*^9}},
 CellLabel->"Out[3]=",ExpressionUUID->"9296da2f-33ee-4e1c-a64d-0f24efee7740"],

Cell[BoxData[
 TemplateBox[{
  "Plot", "plln", 
   "\"Limiting value \\!\\(\\*RowBox[{RowBox[{\\\"-\\\", \\\"3\\\"}], \\\" \\\
\", \\\"\[CapitalOmega]\\\"}]\\) in \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\
\[Delta]\\\", \\\",\\\", RowBox[{RowBox[{\\\"-\\\", \\\"3\\\"}], \\\" \\\", \
\\\"\[CapitalOmega]\\\"}], \\\",\\\", RowBox[{\\\"3\\\", \\\" \\\", \\\"\
\[CapitalOmega]\\\"}]}], \\\"}\\\"}]\\) is not a machine-sized real \
number.\"", 2, 1, 1, 28810732786757079712, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8841259920570135`*^9},
 CellLabel->"",ExpressionUUID->"71f7307c-c9fe-4cc4-963a-c4b287fb05ed"]
}, Open  ]],

Cell[TextData[StyleBox["Bloch vector, Bloch sphere, and the Optical Bloch \
Equations",
 FontSize->18,
 FontWeight->"Bold",
 FontColor->RGBColor[
  0.0938124666208896, 0.46669718471046007`, 0.7126268406195163]]], "Text",
 CellChangeTimes->{{3.884094261365768*^9, 
  3.884094282403319*^9}},ExpressionUUID->"76252d72-7881-4629-b436-\
c491c5979a00"],

Cell[TextData[{
 "A pure quantum state \[Psi] = (c1, c2) could be represented by a density \
matrix ",
 Cell[BoxData[
  FormBox["\[Rho]", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "dbdae7d5-fb9c-42f3-88f8-f7ae8dc7b1c8"],
 ". On the other hand, a quantum state on the Bloch sphere is specified by \
three coordinates (u,v,w). What is the correspondence between (u,v,w) and the \
density matrix \[Rho]?  One can show that the density matrix corresponding to \
the state (u,v,w) is given by "
}], "Text",
 CellChangeTimes->{{3.884094291773264*^9, 3.884094336012328*^9}, {
  3.884094414808867*^9, 3.884094593260997*^9}, {3.884095200892166*^9, 
  3.884095202812661*^9}, {3.884096641232314*^9, 3.884096748231999*^9}, {
  3.884096792349148*^9, 
  3.8840968197637033`*^9}},ExpressionUUID->"9ed8b2b3-d3a4-4a5c-933e-\
13cd7a5bc3e6"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Bloch", " ", "vector"}], "*)"}]], "Input",
 CellChangeTimes->{{3.884094799943706*^9, 3.884094804616991*^9}, {
  3.8840948395830107`*^9, 3.884094841322288*^9}, {3.884094890595812*^9, 
  3.884094892876524*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"5d87bb4c-7f20-489e-a2fd-50fbf4b91a71"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BlochVector", "[", 
   RowBox[{"u_", ",", "v_", ",", "w_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{"u", ",", "v", ",", "w"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8840948453896513`*^9, 3.884094859607668*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"df76251b-2bc5-4b5e-97e3-b093ee7cfd24"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Density", " ", "matrix"}], " ", "-", " ", 
   RowBox[{"Bloch", " ", "sphere", " ", "correspondence"}]}], "*)"}]], "Input",\

 CellLabel->"In[29]:=",ExpressionUUID->"5080ef65-ec1e-4841-942d-1b39d0da5254"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Rho]Bloch", "[", 
    RowBox[{"u_", ",", "v_", ",", "w_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"IdentityMatrix", "[", "2", "]"}], "+", 
      RowBox[{"u", "*", 
       RowBox[{"PauliMatrix", "[", "1", "]"}]}], "+", 
      RowBox[{"v", "*", 
       RowBox[{"PauliMatrix", "[", "2", "]"}]}], "+", 
      RowBox[{"w", "*", 
       RowBox[{"PauliMatrix", "[", "3", "]"}]}]}], ")"}], "/", "2"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.884096821384489*^9, 3.884096891014288*^9}, {
  3.884097542331276*^9, 3.88409754274165*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"78e0cf12-93f0-42da-8355-87ac4fa163e1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Rho]Bloch", "[", 
   RowBox[{"u", ",", "v", ",", "w"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8840968839308453`*^9, 3.884096896958313*^9}, {
  3.88409754743554*^9, 3.884097547895452*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"a6015e57-3976-415a-b1dc-1d52ba4b24ce"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{"1", "+", "w"}], "2"], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"u", "-", 
         RowBox[{"\[ImaginaryI]", " ", "v"}]}], ")"}]}]},
     {
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"\[ImaginaryI]", " ", "v"}]}], ")"}]}], 
      FractionBox[
       RowBox[{"1", "-", "w"}], "2"]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8840968884836407`*^9, 3.884096897204211*^9}, 
   3.884097548302511*^9, 3.884100086586102*^9, 3.8841002056607533`*^9, 
   3.884106565961773*^9, 3.884126011978378*^9},
 CellLabel->
  "Out[5]//MatrixForm=",ExpressionUUID->"cec576ad-82ec-4e6e-91dc-\
3f2a6cf1904a"]
}, Open  ]],

Cell[TextData[{
 "With this, we can show that given a density matrix {{\[Rho]11, \[Rho]12}, {\
\[Rho]21, \[Rho]22}} where \[Rho]12 = \[Rho]21* then \n\nu = ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Rho]", "12"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "7adc87b7-fd66-4d35-aa94-5fa89a9709d2"],
 " + ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Rho]", "21"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "41f5eabc-18fc-4ac0-a789-4d60a2fa5c1a"],
 "\nv = - \[ImaginaryI] (",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Rho]", "12"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "f1a0b212-2528-4883-94de-790b352b2bae"],
 " - ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Rho]", "21"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "f67c5876-88bf-4650-a24c-bebb618476ae"],
 ")\nw = 1 - ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Rho]", "22"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "b9252f15-e50b-4408-80d6-f8d003f15eaa"]
}], "Text",
 CellChangeTimes->{{3.884096911079535*^9, 3.884096946148549*^9}, {
  3.884096979908996*^9, 3.8840969807225027`*^9}, {3.884097580141987*^9, 
  3.884097602851594*^9}, {3.884097666439527*^9, 3.884097704467744*^9}, {
  3.884100014114193*^9, 3.884100015451026*^9}, {3.884106567643382*^9, 
  3.884106612108178*^9}, {3.884106648043393*^9, 
  3.8841067120610857`*^9}},ExpressionUUID->"9f44d480-46f8-45c7-abe2-\
b7fcb32374d0"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Evolution", " ", "of", " ", "Bloch", " ", 
    RowBox[{"vector", ":", " ", 
     RowBox[{
     "Optical", " ", "Bloch", " ", "equations", " ", "without", " ", 
      "damping"}]}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.88409488855437*^9, 3.884094907019074*^9}, {
   3.884103317937302*^9, 3.884103319600771*^9}, 
   3.884106713813555*^9},ExpressionUUID->"39013ba8-deb9-42f4-978f-\
e158fe897e0b"],

Cell["\<\
The Bloch vector for the ideal two-level system and its evolution is entirely \
dictated by the Rabi frequency \[Omega]R and the detuning \[Delta]. Without \
damping, the evolution of the state vector is given by:\
\>", "Text",
 CellChangeTimes->{{3.884099891250041*^9, 3.884099944715624*^9}, {
  3.884103327189591*^9, 
  3.884103349666833*^9}},ExpressionUUID->"534a35f4-d23f-41bf-bcf6-\
25445b3a9111"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DBlochVectorDt", "[", 
   RowBox[{"u_", ",", "v_", ",", "w_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Delta]", "*", "v"}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[Delta]"}], "*", "u"}], "+", 
     RowBox[{"\[Omega]R", "*", "w"}]}], ",", 
    RowBox[{
     RowBox[{"-", "\[Omega]R"}], "*", "v"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.884094909313559*^9, 3.8840949937572737`*^9}, {
  3.884100105092395*^9, 3.884100116548649*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"54052830-23f4-40bc-9f7f-825e0c821d79"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DBlochVectorDt", "[", 
   RowBox[{"u", ",", "v", ",", "w"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.884095615302958*^9, 3.8840956234460363`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"c0fe6f0b-3983-4abc-a53e-d18b6b4d79f5"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"v", " ", "\[Delta]"}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"-", "u"}], " ", "\[Delta]"}], "+", 
        RowBox[{"w", " ", "\[Omega]R"}]}]},
      {
       RowBox[{
        RowBox[{"-", "v"}], " ", "\[Omega]R"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.884095619957798*^9, 3.884095624019664*^9}, 
   3.884095685234486*^9, 3.884100212823825*^9, 3.884126015360485*^9},
 CellLabel->
  "Out[7]//MatrixForm=",ExpressionUUID->"42737527-d40e-42d8-9bf5-\
350ab7105800"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Conservation", " ", "of", " ", "the", " ", "Bloch", " ", "vector"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.884095037338962*^9, 
  3.884095043221723*^9}},ExpressionUUID->"291f5728-7b98-4a06-837c-\
350c4f3af99e"],

Cell["\<\
The Bloch vector is perpendicular to its time derivative. This implies that \
its magnitude is constantly unity. This means that the Bloch vector \
corresponds to the position vector of points on the surface of a sphere of \
unit radius -- the Bloch sphere.\
\>", "Text",
 CellChangeTimes->{{3.884095135450354*^9, 
  3.884095247971918*^9}},ExpressionUUID->"3461381a-6209-473b-a176-\
83ff8b3e80db"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Dot", "[", 
   RowBox[{
    RowBox[{"BlochVector", "[", 
     RowBox[{"u", ",", "v", ",", "w"}], "]"}], ",", 
    RowBox[{"DBlochVectorDt", "[", 
     RowBox[{"u", ",", "v", ",", "w"}], "]"}]}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.884095101909831*^9, 3.884095124454076*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"f64e5424-858f-400e-a795-b0b771ba8820"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.8840951202661867`*^9, 3.884095124744563*^9}, 
   3.884095711664196*^9, 3.8841002160614977`*^9, {3.884106722799409*^9, 
   3.884106728939745*^9}, 3.8841260169978495`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"70d081e1-2387-4daa-bc46-18c66e00d9ea"]
}, Open  ]],

Cell["\<\
Look at the form of the time derivative of the Bloch vector, it has the form \
dB/dt = B x W where \[OpenCurlyDoubleQuote]x\[CloseCurlyDoubleQuote] is the \
cross product and W is the vector:\
\>", "Text",
 CellChangeTimes->{{3.8841002560265627`*^9, 3.8841002634541807`*^9}, {
  3.884100313848055*^9, 3.884100368257575*^9}, {3.884100425888785*^9, 
  3.884100435731791*^9}, {3.884106732193911*^9, 
  3.88410673339977*^9}},ExpressionUUID->"4ada7085-972f-4edd-9080-\
c5bf3b9dcc16"],

Cell[BoxData[
 RowBox[{
  RowBox[{"W", "[", 
   RowBox[{"\[Omega]R_", ",", "\[Delta]_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{"\[Omega]R", ",", "0", ",", "\[Delta]"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.88410037015511*^9, 3.884100411338835*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"659471ca-d2a2-4806-b22e-136dc546dd81"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"W", "[", 
   RowBox[{"\[Omega]R", ",", "\[Delta]"}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.884100482341791*^9, 3.88410049947122*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"b8ea1bbc-1da4-4540-9e9c-f50bd43cb940"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"\[Omega]R"},
      {"0"},
      {"\[Delta]"}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.884100491827273*^9, 3.8841004997657127`*^9}, 
   3.884106736045349*^9, 3.884126019014573*^9},
 CellLabel->
  "Out[10]//MatrixForm=",ExpressionUUID->"e4d0e4aa-1df9-4a22-b8c2-\
69e9be0fd5a6"]
}, Open  ]],

Cell["\<\
The Bloch vector precesses around the vector W with rate equal to the length \
of W. The evolution of the BLoch vector is similar to that of a magnetic \
moment in a magnetic field, where the magnetic moment precesses around the \
magnetic field. \
\>", "Text",
 CellChangeTimes->{{3.884100505339643*^9, 3.884100536309155*^9}, {
  3.88410062226206*^9, 3.8841006339552813`*^9}, {3.8841009688944187`*^9, 
  3.884100970677141*^9}, {3.884101007786455*^9, 3.8841010513994703`*^9}, {
  3.884101170656746*^9, 
  3.884101215692622*^9}},ExpressionUUID->"c59a51a5-4f2d-469b-bf4b-\
0369e36c949a"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Bloch", " ", "sphere"}], "*)"}]], "Input",
 CellChangeTimes->{{3.884101815844883*^9, 
  3.884101820207799*^9}},ExpressionUUID->"9699a241-80d5-4d5b-94b5-\
03a47aeab882"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BlochSphere", " ", "=", " ", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Opacity", "[", "0.2", "]"}], ",", 
      RowBox[{"Sphere", "[", "]"}], ",", "Black", ",", 
      RowBox[{"Opacity", "[", "1.", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PointSize", "[", ".02", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}], "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0"}], "}"}], "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", "1"}], ",", "0"}], "}"}], "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", 
         RowBox[{"-", "1"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Row", "[", 
           RowBox[{"{", 
            RowBox[{"\"\<|0\[RightAngleBracket]=\>\"", ",", 
             RowBox[{"MatrixForm", "[", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], "]"}]}], "}"}], "]"}], ",", 
          " ", "10"}], "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "1.3"}], " ", "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Row", "[", 
           RowBox[{"{", 
            RowBox[{"\"\<|1\[RightAngleBracket]=\>\"", ",", 
             RowBox[{"MatrixForm", "[", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], "]"}]}], "}"}], "]"}], ",", 
          " ", "10"}], "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          RowBox[{"-", "1.3"}]}], " ", "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Row", "[", 
           RowBox[{"{", "\"\<|R\[RightAngleBracket]\>\"", "}"}], "]"}], ",", 
          " ", "10"}], "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1.3", " ", ",", "0"}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Row", "[", 
           RowBox[{"{", "\"\<|L\[RightAngleBracket]\>\"", "}"}], "]"}], ",", 
          " ", "10"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "1.3"}], " ", ",", "0"}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Row", "[", 
           RowBox[{"{", "\"\<|+\[RightAngleBracket]\>\"", "}"}], "]"}], ",", 
          " ", "10"}], "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"1.6", " ", ",", 
          RowBox[{"-", "0.25"}], ",", "0"}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Row", "[", 
           RowBox[{"{", "\"\<|-\[RightAngleBracket]\>\"", "}"}], "]"}], ",", 
          "10"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.5"}], " ", ",", "0.3", ",", "0"}], "}"}]}], "]"}]}],
      "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.884101826197069*^9, 3.884101854007638*^9}, 
   3.884101990876174*^9, {3.88410204290796*^9, 3.884102070032596*^9}, {
   3.884102161657998*^9, 3.884102223829236*^9}, {3.884102307820513*^9, 
   3.884102308397683*^9}, {3.884102405808066*^9, 3.8841025735021553`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"6f396ff4-71a7-4582-b9b7-f45dbb68ffa5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Append", "[", 
  RowBox[{"BlochSphere", ",", " ", 
   RowBox[{"Boxed", "->", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8841022056855803`*^9, 3.8841022175426693`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"141917ee-e880-4687-a85d-7cbcf966b0e7"],

Cell[BoxData[
 Graphics3DBox[{
   {Opacity[0.2], SphereBox[{0, 0, 0}]}, 
   {GrayLevel[0], PointSize[0.02], Opacity[1.], Point3DBox[{0, 0, 0}], 
    Point3DBox[{1, 0, 0}], Point3DBox[{-1, 0, 0}], Point3DBox[{0, 1, 0}], 
    Point3DBox[{0, -1, 0}], Point3DBox[{0, 0, 1}], Point3DBox[{0, 0, -1}], 
    Line3DBox[{{0, 1, 0}, {0, -1, 0}}], Line3DBox[{{0, 0, 1}, {0, 0, -1}}], 
    Line3DBox[{{1, 0, 0}, {-1, 0, 0}}], Text3DBox[
     FormBox[
      StyleBox[
       TemplateBox[{"\"|0\[RightAngleBracket]=\"", 
         TagBox[
          RowBox[{"(", "\[NoBreak]", 
            TagBox[
             
             GridBox[{{"1"}, {"0"}}, ColumnAlignments -> Center, RowSpacings -> 
              1, ColumnAlignments -> Left], Column], "\[NoBreak]", ")"}], 
          Function[BoxForm`e$, 
           MatrixForm[BoxForm`e$]]]},
        "RowDefault"],
       StripOnInput->False,
       FontSize->10], StandardForm], {0, 0, 1.3}], Text3DBox[
     FormBox[
      StyleBox[
       TemplateBox[{"\"|1\[RightAngleBracket]=\"", 
         TagBox[
          RowBox[{"(", "\[NoBreak]", 
            TagBox[
             
             GridBox[{{"0"}, {"1"}}, ColumnAlignments -> Center, RowSpacings -> 
              1, ColumnAlignments -> Left], Column], "\[NoBreak]", ")"}], 
          Function[BoxForm`e$, 
           MatrixForm[BoxForm`e$]]]},
        "RowDefault"],
       StripOnInput->False,
       FontSize->10], StandardForm], {0, 0, -1.3}], Text3DBox[
     FormBox[
      StyleBox[
       TemplateBox[{"\"|R\[RightAngleBracket]\""},
        "RowDefault"],
       StripOnInput->False,
       FontSize->10], StandardForm], {0, 1.3, 0}], Text3DBox[
     FormBox[
      StyleBox[
       TemplateBox[{"\"|L\[RightAngleBracket]\""},
        "RowDefault"],
       StripOnInput->False,
       FontSize->10], StandardForm], {0, -1.3, 0}], Text3DBox[
     FormBox[
      StyleBox[
       TemplateBox[{"\"|+\[RightAngleBracket]\""},
        "RowDefault"],
       StripOnInput->False,
       FontSize->10], StandardForm], {1.6, -0.25, 0}], Text3DBox[
     FormBox[
      StyleBox[
       TemplateBox[{"\"|-\[RightAngleBracket]\""},
        "RowDefault"],
       StripOnInput->False,
       FontSize->10], StandardForm], {-1.5, 0.3, 0}]}},
  Boxed->False,
  ImageSize->{359.05728782302623`, 350.86850687769},
  ImageSizeRaw->Automatic,
  ViewPoint->{1.6543393225234395`, -2.651061843489947, 1.2980880201066374`},
  ViewVertical->{0.1085965541023605, -0.19854272890013994`, 
   0.9740572741055725}]], "Output",
 CellChangeTimes->{
  3.884101854765489*^9, 3.884101992710449*^9, {3.8841020559444733`*^9, 
   3.8841020711251297`*^9}, {3.884102136572332*^9, 3.8841021679348097`*^9}, {
   3.8841022027606173`*^9, 3.884102225090927*^9}, 3.884102310308755*^9, {
   3.884102468745672*^9, 3.884102489509544*^9}, {3.884102564782268*^9, 
   3.884102574622407*^9}},
 CellLabel->"Out[28]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvVevbNmWJrR6mdjHpM+bPvOY7Xd472P72Oa4vD8ggFsU3VQ13fSluhoa
WzSQmMZ7Lu4iEF5bgAAhEFKJEgKJBx4Q3AdctcQjauAfJGN8w8y5YsfJe6uK
Bx76SGOdiBWxI2LN+X3Dz7le/9pv/8Yf/9O/9tu/+eu/9uz6t37tp7/xm7/+
Z59d/ZnfolPZH0uSP/b7JP/jsySnx98nyb3DX0qSv/L4rzz+/+Pj/5sP6TM6
vOeP/vfopST7CR1+nui/d+XcKR1+1879b6W38+lTe6kSzj2zc8WG9/2v8t//
FT799+2lLTn3ffz2YsMvK38Ef/rv/NBHVMI5/2X/i/z3l+UlPu1/8uDtH8Ff
9ZPNH1G6kB/4iNKFlD+CL8JH+pd8xPebP6I0Fhi6FH+dJW+5wmf25v9Z/vuF
/82D8GX+Ax7JOb7On5S+JSn4Pb+vF7Dpi/z98Rcl2c/jl7bCV/o4PJRzzzZ8
7KavKv20H/iq6O2na+dKX/Uw/K2/byv8rY/1D3xVJkd+q098uuFKN339x3+I
r0r5VL7h+ir8PrB+DVcf/dG+JY8vg08Xv+un46v5o14Mf9bv62faJMSf/0f9
Avxg4zA/LvAp+en/V9chSCj4s2KViA8pfu4/4Q/0XZXSd0WPo2/M4gv7w+Hs
wfrX/I7+Of8Jv5aGT3UtuYm7f8DB04891Y/4eXSudFF/uK/6nSRigYwVZtvf
zt/G3/NY3lFSZD/Amr8cXvK3q558pm//Xf31eH2Tsr//UWXFLnQ2gscXrmYi
PlUyE0CGvKlS+kr9OeHlslUrm5qfJJEVihjq59IN71NrXrJ0+rFqzUtGKQu/
Yv1jS+ciP+Mnmz92k0b+pR+7pnfwr+x7/CS+kCy83a8i+lj/iHzD3+rHqmPl
Wi58bKWkypMAoh/wsTZ5dfpp9ten+k326dEl+29Tp+//CZfi/5Qzv6OfYCgV
z4M/RP1LDOlf+sM9lq/PPnv3QaX51YfvsiQ5jtlqsP3lagj5Ksn5mK2Gz7/C
o4Qffknve4/F/oI+Zct//f8h//1PchHNLz94x76APviLdDXc+ZI+avcrerT7
NX3eaPdrkm9YkpSPdNj7hs7vPcnp6RO8hV9+Qn/whH/QDr063MaBP4B+1mrw
/Kvl4Rc/SlL8rIy+9V3/QYrZ/x7HIr7i5eGXH9PH4ap2v+Kv/Bpfzgf+3vHe
E5KnLHiG4/4zkqf8vzxL+Skfnm3RW57xJeBA50Y7/BejHfrlIglf/hM6bD9J
HvA18CVABs+/xqh++QHLuzyiok6T/w7Hh80vP3xHBnHnSx5D/sU8gjJ+eywY
vz36ePqlFflpE/zKyf7z1eTgGclzegsdH/Mp+rn7z3Fdz/Wq+FV6xgPxLJPr
GO7g8JR/Lq7hG/zsAcvzr5cHn3+Cn/zF++/+D/Jz/xscdYg/enftp8rkJphd
+kKWp0lqg4mfCEkK/pn8W7fp0eE2/eCDHZr7yf42yQ4/48f8hp1C3jXe36Y3
4GL2tvV/vpTd50DQM74UFszBM1zPU7mm7Sd0PSTPv1n1n30t1/PBe4KX5PeM
KA8rcj27XyUC3YIvBReCi9mTi8Fl8JjLeNOPx5gfPs/5OuiF6eE2yc5qerTD
z452Ujrs8vndnA57CR93+ZH+v5vyk4o+Otjlz6a30pXz/O4wCHf4wvnyR7vb
fMUiO8/5UmkM+Hq36Drp+ref0nU+oev0awV5BWSqnbboYrfoYt/DpA2JfENc
KMk+aGGXuRof0kUe4nLpMnGFen0Q/uE7uMYKX+MDOuw9osM+hmFfr3EPz/b4
2nDY5ecHe3yVLEAsX/T+LgNll8Z9vLdLshNkdweqAyOw85wv2sQQvM2QGjx/
SleNq/cr/2/lyv/Le1duV/2Er5qxyjg9YKbT/Fb4svmiV5MjE7rko+2cr5Yv
GVdRpfmr7rHQt9ORRqCKiz/a50f2rLrPh4MtOn+AwTjQ4dlPUhx5QPYxKCQy
PDzaYZB0iHB6vL/H46Syw5TeAeN2SLYxTAxgxuJwZ9sGKgmD9IwGCANFg/Q+
Bum/lkH6L4zbH72PwRnS4Ax1gEb7TwX6hcE+HpoE48IHxvARz3N1j4dk/zFf
OT2t4XCIRzmf4yE55KHC4aDgYeFRPDjQwVDRQdpjku1hUBgme4KVDFgZiQAj
O8k7dPE7PAAqhpVnpAWeyeU/L13+fyVX/58JRBgey8OvPpWrlytfjQ6e4uJT
pgToDk5sAxZ8/anjgg97mbEAIDjgi+ZnOM5qBySHq1n1kLQUH3N5XjsyKfhE
yo9SfVTlkZPDEX/4EY/1IR94XA8PBEd5jC36ffs8XvvQq/s0XvuGHcbMLpOJ
B27XZIfN5A40p8BmsP0cY9YXyJA1+Iw05/vq4/wnOl5f8nh9HY/Xk9J4PWfI
MFx4uCCk2492ZMgAnN2YSRi03FBzmJWHYosf8SDWq/QIkqR2Ds+PcA7Pcvuz
Kt5CT6tHFR5B/moM4yHoeKjDpuTEWGLkWAHvJ5UwdHsiI5bdPcbbLvC2q5gj
2dmR8dvW8Xv+3Mdv/7PPPntn64HoouQ/MofFVBIzTvDGSD4gE02Dl8Ks5DZq
PGY8WjxAe3zYT51gdH31wwodgB8Zgxo9ZcEo1XGOns9FcK6WFPK+WjUSeu2O
j9lddF5GFR9UyKNpFQf6QhpQHjfG5eEhIMkjeMAjyLQe7x/IKO6J0AiCrnsw
ars6hBBW6UDh9jaN4HY0gs9WvWdPCYEf0Chu/ecyiv+B+KE8ioG1rMZpAA19
4xh5GEfV3hlUNxOToFfbZ2FY1vZVYc10UAseVIAuo3HjccAINiD8rFHL6VQd
51N+lGTfzWv17+e1GkuS4ph9T0P63axep0+q87DT4OcKZZ8A/tYaM76G31jj
MWYBX6rphoFmw3AAkh3wI5fxwT6s+T7TfT95T2EbDfbOruB1e0dHejsa6WeG
V1GMyV0wocL3fR7pZzzQqxHxewxPaKxo3QZaJ8xt2IQq6xtQvOaSY8ChF1UD
HoLMpNdmDR7vBuFs3tg46Ckft+iAQW/Q5dOo35F879Ko87jXG3yg4f6OjqtY
eBIwbZXVnId8XsV00JDPMOQ09Ec11k9VaKkjHnWTFMoDc0AX68JTcQgbfQCd
C9mTCeADqYwhIf9RafgHPPwY+ufR0H/OQ/+fytD/+2qYRdV+RkP/VIb+EEMv
o07+vuqIaORFs9Z2BeTANv9qGvBpXWRWF4wDj0c88JHwlc9lFmoMcx6qZt0e
NRoYv8Yv6BENd5Ml/55PZ9/jdL2BuZEZylcLer6ggVfhKawXyptaHWawpuMP
YRYwH45Ykx8d8S88IpRAXx/a0MNdOoS7dMjKxoRdgwM4CPsCfNc4D3X045En
efY8jPyDB8l/LEP/7wavQC3cMx168sAJ5TzyPP7srJM5K2Tgq5FJq+2JTiE7
Mq3v+7iLHPLQ8/gfmSZouKQ66k0cMOA8Zk0cGlurRbORrRYNjG+DRrrRpPNN
Hvtms/L9okEP6eUmDTULv42OKZ8q/ZmwAZNUz3kiiHjVeqoTwAygCWDVTwyY
HULgkbEBPThiBX+Y3h9wiA44RVI7AncZ8B0ecHqt94zdqO7TZxRfvo9x/g9l
0P9tx/v7mwYd480sO4rwHmvzfR1paPM6W8c6+xB1USwpgE0X1KzSgLFAhzdr
Bu4mxqpJYG1B6FMWLYxmsynn6R2P+VmSf0fH7w+f7ECefPok+/6T977Ivj/6
ZhcjjSlo0cC3+H8aiWj0eW5AkUYD6qyRB01GVIiFfyDNBx+qTIPqkUyHCikn
uC44HhzRbLCwMuUjB4+HPDlqhQ9SzM1jmpt9nh+fneG2zBDTofdse9UlSnSf
yOyInU3+zZIR+GwDHdixGx8FOgTPzswsK6AwKQ1msGobTEzq2Gecs2FtMi7D
pGASmjwpTYwvJqmJKSr4SIqm1fLZarHgWYvf28q+/9F7XxQ8S0lOxy9Xx432
6rjZpje0U32XzZTMnUv0nTx1jWjqiNyi7ZqR0PNagw1aA5SCbYGFqTKlTHji
eFLZskwOTA5t6phdI/KhciGVTxmbku1d+t7SjD19vtwT0yHmOvk3Nk7Y8/sT
xhpUeGRzlkXmWTUW86kBu1cyE2KrGZgNt9AiTb7gdVbpBOY+gTx5LZu1Fuap
jUcVfpRU9OW2yd3Rk12eRiUbzSI5qkdP9jCPJPTRclzwvDZcmJKtzAGh8KDZ
ZivXZPo1xVjxnLHA463DMMFNrsrkqahncFiF9amG2ds/wsSxy0WMG+2p6NwN
d0i294RuUIY7YfI+5cnbEoOf/Os4Pmh++fEHPnFDnbgRGXtWgGMOOWnGOGdR
dTdWBSYmw5xl8ZwJyXjWxKyngWR8bNocsRQ8SswpHr5WawtTwrPTkelot5kW
bQx6m4a/3RFpdTI60Ft/8fTTpzxRMk/ff/L+l0n+i6efPeNXVToFTRi/v9mu
OBExW7BSMGwwbjxRmC5SqEyymQhPUyPXuWK7RZ5bwvmWKk8PuQkmMkHjgyN4
xkc0aKP9Q5qdw2iWMFMcheyBXfcmifThB/+eTNC/ZhNEhmrAE3TIE7S9PkEp
JijHBE3c/5Uog5mvrgBNkwojyiYoKZRO9SBNeK5gVDRbop4c38yZNvgCvYjp
6+Tx9LUhmL7OI5418pL7h7W7o2d7PEH8/3f9A/4FNEWYX8yrSUqHLp/mp02R
RbMD2mX6jfxozviZy1yGOYO/1wDBLAQNrh+730ik1aAZazR1KsIzJCiPkvcp
+jiKpvDQpo9mb9+JxnOI+SPp0hx2njxnDZn8OzKJ/6qngLdW/T32rJEtQyDD
kziSSVyNq5hIpOY8YDzQ1Fb9AGaNJo+caGYaSTSHWTyHidGt1VizX3A0eLJa
BSiVxZTiZ2Ea2l0TflOnwo/opQ6edlkfPtu3d9Dn2vtyfR9NXBYmjj6Wv7WT
quZlBs5xaMgjEK/Nk0iXQ1JvZco7eCyzNY9lWq1L9Mqzd0SzdlSaQbZrdGTy
6ezZDO5iBpl8+8TfQTx5zzB5pCG/wOT9WzJ5/wqOD5cHZNsGB8K+obIvmjjM
W8rzhtmL9SNnIuvQjzpzrB9zcUJ06ppsyYR2mDo+16rz/GEOedQaRXnqCpux
js8VZg6z0MtstvhRp5vyI0zZAT/iU/hTOfb4L/ABmGSeyx5Tkj+1FWSBKV2w
2iU6g+x4TrPG0mzjSu7NZENmkqOPhlo7nj3O6Ndp3kxs/qqclWLveURE1OlD
9vkQcdUBiDfY3sfc9eO5e7Ld/Pz9D9WDTP4l90seqObcVpF5Gx1xPneMzDqz
jedsEuYMWnN90twLIad+hjkzwYw1yRebt9zjaEMY9+0WDFh6TzWqZYN+zOIJ
7XQxO+AbT0qPZ7BfYBof8MPVcZelx3J39PxAHmNq9W2ZzCo+qZcAAQVmNpMZ
VcyQOWxjXvkHweRCX7farP+Zqg3MK88om0T4qHOe0zkHGhp9MyNF2IGrkjdG
k4oiRx3TOnahOT2scvKMRxPTK3oVJYUD5IYPVgOa4j5P7/Nd6FSe3s430Kni
bib/ogRwYOUwZqXMbMYTy2xk93JSU+tXPxQVytpUcrzqrzQlWpMw2O1eNIc8
Qez2t11tYrg6EH61w6RQ1VjopHV6D3k2cp6qpEKTdKiTpiKTmPLMpXhPJucw
iTpjRmZ8DOZuEfSycBQTXZ47JmcT5GyCmDx9mESZNrg3Gj9IDAH3hiPyBqaP
NKORcmxCszdiOagieXzEQcMRJ5po/oSWPG8se5i7Hs8dzVvvyfZy95MvxNNM
/oUSK8O8DWXeViNo0bdMXlGaPJk4njZ2Npvwn0WHRoLoqWXTOcd0tjCdMpOY
SIxq270Vnkn2MURtuooUrtHQKLnwHFOYpDqRnT6/d8BPB3auO2C9i7kfrI57
eHOP39cd8AF/0Q+P0tUJPz3BXJ+0+wYJ+RXZH3TCRRu3xMVFOqCZarJsXvMo
pDT7fDhqpGBw4RgYHdREIx+wb89Tz+XrI59+mXrOh9Dk06f3ntH0P3Xaih+b
/PNG228+j4ypT73oY7Ldqot58id1rmsqdVkVa/qqWQVlJfozS8mSqQ6ewz1t
rU14rraL7STNME8zWCVqEiOdOyMxI5VoInl2ZSLpmU/zUF7N7462aZp7AxU+
3RvYTPujE/5cmmSeX/q0E/o0+p++9QQk7/RyMcL2O3l+uzrJc45hxG/i8GUe
whd1eTkJJRkBZGEbPJ88nSyilD+k6awrnasi+2pofToPVwMWmtK+auLe8z1M
aRds/tw6l/5ZCU+EzjSfA6czzefRHs8pTSlnpp3MNJ8kh/fs69QyM+wakU1l
LkNa4shmblrDtLoy7rRdGYO9YYILn2CjUp8NKJG2kGnqxgIdrNMlD3l6WfAM
x96Q5vmI/2ek9OQc5hvPiMC9IU1tb5Dz3CZ4KLMsz+TIM08/h3EAyqdCfvoJ
igG5AHO5eOZZkl8+/U2efnY7prUmTX+QSZW14YTU+0eKgbob5TGoLVgYMg4M
A7uGgf1Vj3HwbI8iVKe1OMfJP4PjO0gjxLQeCq1J9hkG4PU4YCDT5EGdqx3w
iYXdNRHOQ9Psc3jaKjE8EJzZD83dVgy0eb47hShvmnk6dDH9pKnpEZ6Vzikk
oIALnvDCqDrM9RFN6pbAoBfLiGBQ5f+h0YeMp/5wddIfRTIkn/WEFQFhoOCp
p0fdoYAgN8yZhInPdeJl0ruYeJA/BE1izjH5v8LENzHxDfo142pdJl+VwPig
hskf88TvswJg/U5TT9fc18nv8eSzAngaFMC/LDP/T+P4SBR6ZMuHSv5RPOsc
x07Egsu0cxAg1FexmedEdAspCJltE55un/ROedJzccBs0gueX1fbIGgftA5a
eY25RTSNa1MtvE/5JY6R5KTJXZVwcNIbPeBJZ24HGDC3w7keRDSE6QU+15Vn
wwgcxRo4Bmx5xEFEUNDj6zRh98Vcw3kLAnpAW7TUIWi2kxBoe2jGAuxAHzcF
OrU12HD6tpF8EDBjuNmvifGA4TiCwihjZl8UxpMdjqolIkv+ychm9N1miLIQ
2AAybDM45aG6AuK4KSLc1Aw3wQ1ssdloQExdpOz8ZTF8AoTMZKi14Ef9ks7g
MV905Vyw/0BP7sDI3SQQKvoueI0PAiI/n+CFTN5ywhC7q+5UFThjQGYM9NCj
wbi4h6PN2AKOCkCqUJwOgsiP7gqE+vcgxHTrpm8FThYDBxqnxVRucQK/hawH
YYZcDoihJovMTA2RQ40LQ2pmBiR9cjn65Gr0DDXP9snE7JKJ2UYe5mcCm38C
x8JdDbExgAx/bNUBM44AMzHAZDFgUGSoSchnfgY/azVM47SbJgwZJPotQBA3
oyg5jwKS1QLePR/pXG/NURQHQqMA1ULuP7DGiWAxWjuXG5DGeIFODiD6Zn55
zHgxtUPIGAgySDnt1AKgEoCJZMJCEKFnAUZjfXHMzig+N4IWS864A8T+QOjq
M7r6PJI9PqhycpcmoKtNyGoHdMHlbzG6TDgqbMGRFKiN4dLwkXHWEKwd1Ms4
c6yJduox1lQ7dUk7dZ7sAGcSmib/uOBsuf81hygl1SQ4468ia8YwG6NgNYEf
O2E/VgT4qgJkdODalPoyKPe0DV8tKKWWIKxYRxgDDGqHYcbmjOwXfJM0Bo07
nW6kFDhiyGiyjgcAzaCseMZ4IbP5Hxcy7YYWAwOfnti7hhO865EqpR70lqq9
IoBbZQHgL9itAQJ88smdo6sEAEzg187Ys5khYp0SCqZ1F8w6H5rcKkeWiSZc
5KhhnizPeB0zXpMZt1knmyQzfhDP+HLnky80Gk3+URwff/bOwwfL/W++iAzS
Hsk+DNKIZ9xnXefbopd6VaMX0SrTRp1nnQWXpbqFZr7JAvvTKukVm/FuBxMO
/wV5IUxpT10XeKm9fm7BSTTXsCU24Ww3VIdATYwdA/zCYJLKI5rKHFqA5nIY
qJ/ZucH4rrpb49fIFTzhPzsZTnOGgbzH/yK1v4sUSOpGi5EyTgUuZg7t1/dc
F7JnvBAXGMa23WeDZIJwjn6F5Sgj4MBGzaA/3oadehvT1YLWGMOp4WMlhg8F
wnVGEOMnZfBwJnJfXZodhdDzA4IPjNNy99Mv/zlBzz8S0LPq7bM7s2N2aTVk
5FQP3oKewpATOTKoahhuSBosrA3biHhEbwTdkarumLsv7EhKfhhKqeuTIvJD
CDCiMcSkCHYmLEGR0NPhBDCATgCGKvwoNZRM2JfZrfMjPMNbCoYPQw36ZJK5
PknF0znt87ee0jfSIxM+PXqbD42cSQjd+X/Gz0CtzaINrwZKlKsXihUktSUx
BmMToJIBKp8ITExY2xw1BSpkYBwm5P4OD0TVDFjYkTGsbDtOVu1vxLhIhJz8
w+L7Lve/+nzVI+MycOOyH4MlhWVhV+YIdkUEFqUKBVMzJSNwSYESuqBW07QM
YyWOlhghipJU3d0u56y73UzDYSQ0BSFriqY/cEWTlcGSGypIgTAqjqEcjlWp
TB0BhhRFQHgk71O0TPFs8pAf0l+MpqpyTvG+U0Ie4DHgz6Mj0JI7TDL1fNQu
pZ6vWXfE2CANEPmrZOYBW65trrk20hEzgs2sYeJ4gVphj7NFisKBYqYJQGkY
UFJGCoXe6zjpbx+uutApe6u2OiESTyd/UfOk7IT07+GE+6vc1SV9YjjhH1XV
LIrFRVPuvQBEpqhqQKUwTBATzVCfitSKSAd5pQ7sU1mrpK5ULCIC81SRF29D
TP42g1QYZAAWSGKaYjR1FM3wQhpeoFh7NLO/MPjwK3J+BHTR4RT4Gc0IIQyn
0yEOE3thGEA0ERUUmzELsQpXPSEloPmb+2BC2gm2qoeA3KVlwbkk8cTlcXAh
99lhhrfhVrTZ5wG+2Fq1zPE5EqdnxHLQIGDV76NLEVZC127zs/c+TP4pQdc/
5Oj6QtEVzJWjK4vRlRi0JiVomXsr0Jq21qEVWawOLFanJbgqzMMN0u1KJFWo
H2Cpt3IklPlxHPuzb9VEQw5yjh0aKoqlGRsQgYtJwSdSf8SGbK+ub5rxH/E5
xhIDiIWQGMNLXp3JO0b8NacCQ/4dosGm+v8EZ3PoMzF8J0GyHwCeZ6I7Qxo6
FnjaXHfixMWvAr18Ta912Kh0uKGJgQdpAYCTaovhxzaQo58j7kNk1TYkO8j2
b8Cyz0Lah6BHPxkmkIDXYeCRq7TzyZea80n+QRxzeNl9UmkKvDRG3QiIi1FX
EOpqMepg+PJ11AFv6l93Wm7w5pzfmXc6b8FcHnRZbsG5CUKbwmPvVEIm86A3
ga0oYWieFAKdcSQKozlDZkbIGDPIantNhY0CKMErfq6CI2uyOZ2fy2vjWebY
23LVVrwdUBrXx7lLz0BQ9LaASNQm7ji0WxTJsydOcRz3ooZUI40+SZOlkwYs
ceauo1hiZSZRHHrUxKUaHbI0uBGqnjxyJPVJj/VNj+0cEZQOVx0K3BRKkgZK
/gHxuteQBPW1GtbE4x7VDxRNRyTVSIeVkAQgpYwjpA6DBwXpCJ446S45Qin0
i3dtJQVxshdc2FsgC7II1QLJlKyhqFAUkf7IzZ1WAXymHHLdRw7jhjHAamXM
CBrP7BGdzGJoyFsYWvtNgY3+GTA3z2OQ4a/mjJnxfBPw1oyn+2KsyaDiBtPc
EwWGsSCaIl1wbnshJrPbj0wmwjtBVobcdRFBSmTa5BazKYwmgcughUxQG03g
LcGVY6uRBGDVBVh7VREDFgwkA2tvufPpl5L3Sf5+aVD4IWCxIkQQp8ACuDKG
lXjjjCcopzQgi0AmltGQRUzptHLXTgKqTGimOedMsyc6ZETOYAhyT/iM1RZq
zAZ45eqCC7Km7lrjGAweFNHUjGCAWipaSYAxmTssBCKLcH4ydyAuBG/5Xe2g
aX/EpysxqBRojx29mes1M6gzFmANMAt2Vi3pyVDSlpNYuWmAaDl2r85AlbEZ
VdUWCTK1kubveJ4hCSBkC9nNADyFHMQg95Dg1hbLaJAjGaplBOQOOM9MgCMO
9XerZcg9A+T+MYHcd78UcocCOUZc9VcDmquwFoDGlAr2UAXOgJbM4iy2jI1C
D7xFyjEzyIHVY89Gc3rouD+xRIEKAQwSx35A39S9KWCxWMfaBGpqEtQZ423B
zyYLf2Gy8Bf4HL18Vzfc8bPV2XhBB7z5jN5MT0nYHp8BxfSKnBfJcbpCx9nq
bBTLnM9l/GTN7csdjlB9uQ1HVODhIgDA1zPbqiBUf80SXfMgYl4Je+2S/hMc
cmDXpdk3sSCU8VhRL63lWOQQYch5UQIjOaliVqtrUDwgKO4zFCUHmvx9OD4k
KH5JUNwlKO6VoDisHcKkjuCcjeGcjes1mFSRkJVowDeDhwYgsrCH1mEnoIzG
DoCYZOqZwdvAEIlnFuvAKOuZvS2o1CynZKMGEgq6v1+KBYICCurJlVMRo226
ALJygeHZ5JgOU2CMThL4WgFP08UWP0gdhJWAsUygN4Yk/BYyxYKuM/pFZ0MI
vwC6nIk+DAoQjh0jcCKiiblMUr+LHg5cheT6U6TtUglN5wCdgK0HmbHlnbU4
YmWjO21G4kjrwHfqkDFVXw4yrgniRhBDXIMBR4pvn9dHGOJ69xGnidPk79UO
ghhyg82QY8Ax6mrqxDHaIBqDphHgpq3WatoWqAXAdUzY8kr9LtXhiVXd/Spu
ZvwOGVHEnUhrTmJcibnNovDy1EWcfoDLnS1RWQ41hoPhio/H9BTCmKAjXlas
HRPu2jgNMEKvLeRvIAuc/qCEvqDhaHrOxLd7i4MX5fI1MSLDseipbuNa5z2f
bi7CmqyPBAAwBogBaDxJ3F0+VbRNmgFlGVC2RejqELrMvhK6qo4wuHXcyNI/
4FiB3bqaQ6y7w7ECh54CMUm3Jn8Pju/+ShAbwZ+rrcai0Rj4DfRBNuuxyQXS
+FKasLjAGiONhS0u0ssBbg45BBO9tXyRhAyhb1CcmM2tBBaFWqo9t2SpZS0k
qhzNK6rHJnNRWrG922JcPAKeyHAeth1jmR0JP+dTCF3lObCF5xOXjA6LHK9l
0WtskM8Vu4tY0U3mML6Fg27NoKZRkuQklv5EEag1iZ6LKTxmLdIfhjvOPvW4
6NbLgDbWDj2aQpYuprQjCi2PoAa4cYW3xTtuqC5TfaYBhCGtSkg7AtJUmUm+
NvkLa0DrA2gHJaANFWQjBpkCbYwlO78MaFkMtAQoY3Pa0dB0zi1vc/SvzgO8
tLFMkxl51C9wXEoOaMo+xAvpmsd2isSFzZtbysSi0NEcDlsWvDX1stQHgy4K
yooOMxyOCz5HEJqdCJDuGgRIAx7OzU5IAhiP8QIe8asRVPnvgUl+y0ReXfA5
wLRQxEIRnpMiPFdFmPIxK2ESZjdRveiVCW+c0Oqpl1qVqiE+E1ZXVnMyv/OO
SZ+mi8QBqprQsanSUIxqDmVcd4gKPN+lIwUbGnAMDsoQ7cUQ3Q72VrK+yd9t
fTSPHq56ZYyybq1xo/UaRlMGKPCZMjzFu0PibYpUbwzO9mraQTGWUyYGTkCy
C82nYsGXVA/6XtLemPS1MY4KzFo4VCWoHh5NFvIahcecC7etGqiqSyYunBnM
qYvrP4abCGu+2bHpOJw7YSgxXAWqgKcCVd6tgDxRnOqLAadbCtHZsaA4V4we
myLNHapAKvC65jYCtJKfifUo3EIrxibS7lOK1mQwizJgpXfDM39oNYQhl7AE
6Xz2HKf0fErWHNLsMRx6FM5PGr0Ql9S766gluLZhw4covhNwOS3jmpUEsBXo
imY9NNhKylh3WS0+e+ePjtpmGbVtRW07Rm3m7qF5Nj3HqbWCakODeYbSNRPU
g8QeQXnMXKsUG3JvmbuDbqSTLQdqoa5fgOCxgmd2YjCaA6PzE8djbsCbn941
jjr07DScm52W3wccMsZPKjHcBcLyjN8IXesa1Sz9Oel5KFoESACthtnleDpz
DxP12zV0pm9FpyC0jM5FCZ1q8+kw5cOkxavkRJeWkTlmEZPPBYc2r6AncEKX
qsTA7CswuwxMil862w5MyUAnf9evCMyhApMkY2Bmb8VkHmOStWlqsOxKwsbq
F0kpc9Oz/kNXomX/8YQTsVYDKLlYAKqGMEGLiEGErbdYBfpHwZlrVAFzLtHw
cTDOsdVWFXpSMDozU58M1PmpyV3ziGPMC4JoRscTfrS6mJ/yuTnDFs9xHoK3
FvyI336c6Tl8sbzlmIW+6GKKIwH3QhAqAh/lHMG3poUipCL/PVVvJ1/Xrqmk
ur0MlMfFSFELC813Y4aGYvw1GupnqkpnLVKlKhNRpV2Uuu4BNRGkZjFS6dzg
sMllX7b+itS+ITWo0M/eefBQc9rJ34ljRlB9sOoeAKr8MVx624TTeoTTCh0d
p3F8nQXFiXjHQYpymydzNK8t7bGDEkZPyosmNrWpZpJhs7RbHFGL55mK53k2
9rhDYmB5VqhRF+0ZaTRANdugEqFIWacCjnOG4gkL4HiSCyYZs/oiyxlOA5jy
hiwGLY2gQBR/Dq0rGD1h1LIwfOkXXbDxv2C9fzGZw2Wdmx+tqSNJb0oFJ9NE
+bpviqo30hSuX82TKuGzIAd1GDmoA80QiSpt8aHJFWV2US0dNG4EdI5qncT0
6JDRyUYeOtT0qKGzvurtCTo7hM42o/MpoXProWS/k7/D9OhDAWdP9ejA9Wix
js/VCGHTOBh4Bumk2dzglkKh8jlFq0Xlm9CqsVNX27jFL407z7if5aTskQ4h
1tKE1FzoAECNBXgdu6SmUz0duIBft45gaNdMQySFcbDx7lzCUJ8GP5RfOE0N
h0BvpFDpsMALixN+5G+Tc6SNqx17x/wseoGfsiT5PbXM/8sXFmBKJT4f3gec
B/hPXRj+AD0PwEXkUGTuVizgBKsjDOsEnVAB3re0DjQOyqSHVBXyoUgScBRS
CscGjIQBMjWIytS9XUO9yMRQX49Qz40LnC0YHLUE8gcC+X4M+Z0Y8nsMecmy
J387ju8o5HcA+f7RPkNeMgW1o02QB+K5+auJzKeBHnjnQ2vNq4VDy6GoAD6S
nq928Wo/vIiBJaO0kc4BX8RgV1G852+DuYQqExwWnjQvR+4K4VhHuwNbER9h
JhIBzrUsMHlqiFzI8UzwKuDOBM2E666+dAYinAHWZ6tLETpHRzqwMr/Eh9ND
fuTPTvlwIg9XlzOIPKO/mIn74ZhOgk4HqBexlzxZwAGBlzwX/0OEA7upJiJK
/ZNxSKc9+tKgJt3/eRTKodiUB4i/T/AeEBoGBnF1PXqOcTjK9Z76HoRxwTlr
9URgngvMzUPeb3CSn10DV+zbJZRLYj/52yS/vxHlg2oZ5UOO2kbYK5CAzjhn
lHMyBK0+rNon4nskMdJnhPQZFu7PtKhpSEdFV9f/rlU31RM56ckS3aE6IkMb
0pMBH4bcWzoc5w5x7djRyZL81hq+JYtayp9yQD9VRDuWoaEV6EFDuxexBm1T
3PMz1t5ngDTQy6r2WOB+6XJ21652C4Xz4jwAm75M0H5qqMfpLYYwv4vU9yWI
RGg2gPNjwjjr7kuYoMuJYRxZtakCWgNBDIqHgFxCVcfaHBbtzTxBn9JJv+Si
2EoWaG72TZCWICCzlh7wfA/I6522Bu48e/qsjGCUzDuE/GFN/BJBbyv4Jvui
qHv79XsQbgmEtXKQ/K0xhvd3Vl3FcP+HMLwVMAwcN0RTtxjDLXFMGLFvxW9P
kTvveH+a1Qhk5ejAF5KaCy0dqwN4JtwpPXTJrK4zWvdMUICP9U+oU6ZWhQoh
vydgJUcg3jSwDShn6nbMTisM19x07FxdB9G7Akp+IYIhQ+74LMPD4q5d6/LT
IPIGIPlY/pJPnrOI2oauTk1RR5+bOapTBnMalDUfjxnSJoU4ISF1rL0DyTqa
YeWGnGgcWuQcAmpUY8fSLlFRII+8+s8uyIzzGDPkMYJeHgATA3E+8ih70WPH
IwWmPxCdTIgekLctaA6I7seI3q2L6wFEHwDRj7ce/oUY0I+Xe998CTD3DgnM
RwLmAYO55mAmqQPPKfztvIxm9jsIztDGnIHhZiyCssaCHY8Ji00wPt4A48Gw
BOPTXxHGyDV5iiJSyxzbhxqA5VklH4ssbu6OqynX4O0uzhzAgqPzEqpEt/LD
43NDaiIALeSc/cHxGSNaXuMDFPI5I/48d/1s7kbgA1C9gM9xGr8qalxhnBly
OQ2idTn2mjxgFO9Cu/oqHkZPvA/5pD+21HCkeyFJ6p7zkGErwrW2KQ7tAUq5
AwYtZMLS6KOAwcWNcdlvRqzISYd28jhgl13mA8Fvj9zmbuw2c7bts6+0tJb8
eQPu118QcHf/UMAdR8DVAHHWghZGnrttangWShaihhEu982NgOiWIbIcwBbK
AsO8kH8NwhNfeqDu3anX1c44mJFmEBTMYEkjlYsZLWd/oX0lAwaPFEpWXGR5
ZtGbqlvYeYAY2C0UhgpIRuzJuSHZ9C8Qe16slvzW5fFFvloC8PSc5Iye8Vvo
XMEP6TxrWj5JRwLrkn6SCTvKKdRuRXwKshsmkgI5RlCoPrOnlwXJIfJzJBcW
cQxL/TCyGrESpT4IyP2RgVr7UOcA9awzJByzDFgyx7PiWLAMJHMyrMv6l7Cs
fjFkcNR2r6J/0ASOe4bj3Rph2HHc/OyDj6T6lvwt0mcVZTsExn2GcbUEY/a+
ORcnkV+zgRIxfAiIoBdJDUlttIPSRc44N/xGiE29KozgDjEF9K72e8iSGA3t
pq5prQ/OfV+rRVkeQ6MbTJwng713IC5cGG49v7s4jR3gTFSxqVgD7OL8AbCa
A6vLIAxOwiVgK9hkr4BeAFT5cFHhR8Avw/SM/+IMSD51JOc4ZjF0+VPwA5ez
0xjOdBrR3qXnpI8l9gN8LZCdximMAimMM6vjiSeRFCGNt4XWrqjvQX1j4BeZ
U1HOQ0naoSIyZzATjHknlfbQPAn3jyecwmN1zPDtizJGdZlgzHubRkAeAsis
jMtA7sZAJmei9Wz/s8cPHtp9D//mGMn7guQeI/noMCjltyJ53NRMsss6krsB
ySCsV5C1iix7vMhuTr4QTaQUy2UB1LmD+kwklZ4U6fQcu/qN0WxNBbP1CkPu
KM5CykzTBuolmM49Bo7P1f6LNgU4T/jRiejVi7s2xTD8LDf8XuAtmSth078L
SJIaxM+UBYZnoPkBjpV76hh4hvMgB76SS0/HnWhmPPRQjBeeogTdQ1gn1kuA
bM2KIgOkpinKq0Rolu6dBWREyqknAOb5HiKeHwK9hFzE/XCFAV2Hr6D3PVKS
4gozcoFecif6qoZ7EXo7it62oLcE3AfkSbALzKDdB2j77kkAtBljlve6a3Dy
rbEaBQdCYzi2F22N4doey+Xq9q4h1jegWm9+iPeQOrYMJinkU2zkQdjlAQ5e
hIro5AjAmm875wBcVU/oLJDgrbBKBBxe9xwkW4ZYioK3SPOKl3CB+ExRJxo2
j8EIPXwB0F6kht/TC36qiAaMAc+TC/7L8P7CPggviPbeMrirWhZQi7AC59eg
xec4QCGfAs3sZBzrIzEzKAGqMo7a4EL/rSTdpA2SwWorlyNVrBHdGP3cI4It
y1AEmnjGXWgE5FSBPGsZkAcKZNLB5FCMKa4bN3qRDu4qklUXa1AXI7nLSGYU
G5KfHy53Pv9Gi8/Jn1Mo7zKUD/ZUBwcoD2IobwUoNzyII2lZQo131Y40cLur
Rb37GpiwnPnKOVO+2v5kS3+BYKAYbgWyadZkekZjrCo4kaxn4QVYk3PTx5vx
rOVdK6WZzE8SSw+HbJeC29yK47KDoW5CjE94GvRoS0F6Sni96wiYIVesoK9O
SX1fMeqvTi7pz6+OL/kpS5LiyOfoOSH7CvqZnqX8kF/F85MzegrBq/yhC/7u
K/rtV1DcZw50/oGzU09KpyEpnUfeyIlDX2oquWLfm4gKC5ihxG0OQmxo2Jd2
eokNx+aDAP0UIM4QIM7UB0ldhRPqmwNgng19H8WKHuGNpM7S5Ypeh9PKXJiI
Ed9jxO8D8SnDnT5OAH9A3vPHWsJOflsAX3Kfe+o+96sG+KoBfqiAHzdcdwPw
Fv9h25Cgu1mgvpnP4jr7Kr8kXa0vFQ2At22XBPFjaG0AXl2OMxNOI5+ht0BW
mGh8M5m75+zu82whuQp3OFJveEjWK3uEhIqFdpaviLzh4HWciNq+dDVsHgYB
OBd0k+q+EiGUnl7ywdB/5a9dAv0MYD7gXSeXIEPOIAe0wRIH+nlFgc8K/IpV
+RUc7ytiaEC6ZDzSzajO1cOO6ymp6omolJKkrtcxznEPx9T6j6IaufUfLfoo
kJPDyOhmYI8QJ7KTLQjfCq42oXwMEb0+akKvk3b/gKCner1qEhJ2QDoJ9Ppe
Y9XZY92u/vXzA/avpR6e/NkI6R1yr7uRe21IH9xH+uitSC8U6Z1IuuqtPBTt
HtCuaY5BqTnddkGUdN3IRffm0P0VzoaizaflBVWTmWhzcytLKY4QJyrYU2+a
EHUeyn/cRnE/1WuJ4GNJyrnDEMWCgQICdwal6Wt9BsAnmWHcn+m5u06jF87h
VKGP6BMK+yz5U9gCJpUaiPNNFgEvFEHxZ7HiZ0LCvYGrtkRVRlpKbHSkzwnV
dW8gdVZIldE7RueyX4H1Ipqfbov12NVJdTHpglz1hSVPmBRzbh0hUoATyPMO
AxPc0yE+8Go00/eq88GGuqr8xxpsltU+k6HD7vpeCDabzw+SEhMKcXKYBe7k
YMPSWpXhr1k/F6cCdrJs8qZPkjhpw2mHoEzeyVzrq5MzCxSwxkPvBTmOSoVD
VMVH3phsGzvwEi5xcjzOlNQJoD+zWhnCy3mu+Ef0tQn/qXsza6Y/1QSxpI+R
gz53z+U8xJXnZZfbcK/wdt/lZKl8uCRtIBr9jF4gzPfvc+Es8KOwc/6hy/C+
kw0OUfkcKISYQThxYRJ7QsvgCWWWlaHhWC5OIJc8SlGVR7pMEMp6MTbTujss
ra0H1YY/E/ODKhID9IMsIGIj4AQhLw43SKTDBGmPLBnTcl6sxi1YicyNg1LC
nP+jjmcS+8yJg82caG8fLrc//0Y6R5LfwjFf7nz15apDfr8ahxScyNQ2gBGS
emFfSxkxIsMwhnFg4UWk7PbD95/yvuNajhTnv5SCYfMQZcGlRUr20tYKutUj
E9kPYMsoIf4+RCkxnoqVTnQ9htAisQlCQxAv6GAVVzHFH8mpOr9w6tG0Ifk7
DxeVBvBvzs1tl2fq8lydiPZmYApklzErRMEvc6EBHZd3XTL413j1mv/sGi9c
ny35EV7I7YjnS5NM33+CwwWe8oF/Dz0nOWdJ8Cr9NULua6bDQkXyl2ecYXcP
yaBeaCL9OLYCyTretdkk1OMD1OMKpi7iZluwEFvQG2vIOxIzQLDnzbEE9JAp
i6A+hSnIAfoRuUajBkuPMcjudAR81txHhLn+Ee+jZajvGOo9cXNILtEj6SRJ
/qYNLlH38GDVI3couEQa7RLi640NqOfN3pBrFBPQYZGIN/N6pVZ/COeK9yS7
ZwNGIcU4RoDL9nUz1GkCWGas8GfuBE2lznMBJ8jBnpfAbpoNSM8laF2rw2je
7xyOjro3FpgC33xYuiu/BGIBXj4Q8AXWguIEL9hbFOR4H0NbzgG0wDufEszz
4QLw5bfQ9wrMj0Wvn4lXI+Kp9g32TDqqQmeshvm5d3Gr539fj8eeZrRlhLZr
J7J8dzFgLLO/P+clhILkeQnFguRJayhIrgQkkwwbPdPfHMYyVti/F/XdZiiz
CqePJyjTaw7mndqqvQP/PikjmVyarxTF7tKs+oziWo2RnK4hebgJybwKtWNI
dh3+Q2BOI80tq+p9oUDiGwhLFOuR7ES8mnwjppFk8Ly5LMWTBIS5qZI6vxRI
Y77ZjUfHnpbJzWNPtVCjuL5Ylao6XF4U5yHIqTgS8LVPS+fdN2HVfgZdTB9A
x4eAfn7XbRn0Af/CuQEKFAbwsjovlBlAvGryCPGZeDKiuhMEvBLrZoh14bjM
Q0aKHhYYGHA+KiqlWthHBfgC2mIe+qzEebGlYKUgV/cZW1+rwF793IQzOvMu
n553xoED7RF7AVwgnQgNxIVpkiM8Qh5z2DAasF/AHHhnNWAOVBn/bbgwPZaD
FrkwqtB365aFX+588Y10oCQ/9fLRQ3JhhAJdokCvTAES9WFShj/9slGjqSRo
uwOTMBWcAEkalHpUEuVu74qmMIUM856t7yrvreyrD618tJaCl/SlOi8o74WZ
ORc1lVhb88Y0pdptmfuQprSQFr6LHKNip4awqfryklxxvFtCRh1vT9SoM56L
wnasu0I/u3LUX9Hh/D4trlJ9w/myYpaB/1w/I3dDERyb3OiAdCfcfnFjEPXC
JuTiyyytvdY7GLxNPPJq1tvEz6OdXVJvCk+0aO2LR451OcRYQ1oVMwGgAHu3
Y2BFdX+bo7sJ8pnquwP7DL8+O/CN4MAPql1B/lvRL65MO7gyfz5GP7sxe8GN
OWI3pkrod+SLAcgjAwDsc6xtnvuE78onWr+0FrwooXz+lmLT8SAUm9CwYg1C
mrA85xL1rwLyNPJeLk00V5OZ43ImuK6Uca3+ucR892LECNfwxc1HFw9d/ZEz
h3aiXo0oa8Ev3uEoPruip+c4eb686zHU6RleoF92c35FsgxyxnL1gB+k/KhY
3cAo3NBPuDm71DfgNWLBDf+oG7YMN+wL3SBAvj6+FJfJ2AoHX5I+SvMzDWhP
tZtmfib6IWrEPbXUz9QrWxfTRewWYXHbult0GpoWPc1vZS7dzyTX2LbH3TNz
dvi7Y/LwVcg+zNrDDJQgz54o4rRo9IUVW6Ww1u0ByyG3VhEn6JO7xgryidrK
iubzA2XEn8Hx/ebnH3/kLtFb7IFmeQIlhk2mBTZMbYotaMMeTLDt5RRF2an2
JGqLeGYbJkRmYBEvQnduoHw1Ss0MDCZuadXF32gGLiAlMyArBNB4iomUVQPi
E0V+sFaurIzvvEHcem6pRGTntfQU8vQhQXNpXguiVSGEnjsDJs+WD4wbgDyE
3nwDatyAGkN/dsUvAPb8xjOXHKczowlLAprwudMr5gr4ssXv4D9nxpy6MEMu
cn2k4XEqZuManWliMrxIZoG91n/BkbM1nmBo0XIfuhqO3XhIa9lWeVFRubdX
aCL7lmE/PQQOaj0y0ISLn06TREzIQw+E2XcSngw1fhggEh6iO5JD4S0hipLF
zEePBQEEUYWuzXJAQpaj5mcf/kj7x5Qtked0eLjJfngGiDfbxO0fiSYkbXhP
Y7UfvO+OhQ+dzjpTkiyyJ7YiXpYKDUv2ZK0kgHLYRO1JVADT6gxTJo+oArqI
uwv1pkQ5FqIgYsiixL+qSqFHklksXKp4nWyoQylv1rKgxpuYI2lgSvD+NUzO
3SMS2+LYZyaAK9eFc+f6rkdguLm4ovmic6BMhd+XuVHJQY8s0APfT8eKmpCb
k2BCIGRCKsyR1CvLpZrHwjvl16rF1vPDPimSD6E5WjueZDu8eXlhtBQMAiem
ygtIhlxR4MTcOMG9whxMcqflRAjBOrrFmRSQQoyIkIJT+Ryx9tcZcRAxYk/C
CWZECw7VQ23nSf5GrRLsffO1e1RdYkSvyvu/EieS/KfN/X1lRSPmhJgP5QQ5
Vj/tHmGjMbYggRNhNV233Ncj64ssQ+RbdWp3pa2d862fB4gfEt/oTeNpL1xy
tmOe6QqbiAhuObzmbw1dQofsbUwA1s9XpUS8JzitfKshrYS7SyOBB8U4fRXH
D6lp/mAQguaHNblmgUW5NhNycZ1kxoZgb/AWfvUqC+YnNklnV/YB9PF5bGxi
Gp27E1bmEph9A/9xjUaIUDIxOnERwu1NqoH7cmGdffeZxGXqBdkaYdOFdS/n
UZwexeqZx+phq6XCCXUcErCcpelP0HQ0EafMHLPOGO4ME2sSrAyXn5uD5BER
ahCKb7WeWJlaR3jlVqYdjEwTvXKg1G6VIvQnRqk/LS332OGis8ElU0Pzs+df
ffV7P/rgQ6YUUgRNvoVK4BP9us7Pdr95+j19mBEqUzLNfohMhZMpNNdbbSEX
Ig084eptRMIlbSGaEZl40C84XxjZlmnshOXiOcxdrK9MSZXGLZZAiNApyUKE
Ui4dWExyehkKBqWYZJk4rc6Xq1KsrWhfpg55PKqATRVhzsW1ibLpOjhu8tLt
BVPvlil1ixdu6QV6xKfoU275o2/PiJi3Z/IqvUK/hIT/7HxZ0AtLOi/xzGW4
ggslEIxgKG2LJRLCeIPeKQFhPYiR4PDY/vdOJW/siPtNdXmEtPvzZv4RSTKw
JFN+QBJJam0haJlaUpdkwgKvTE1PCrtTIG4ZKEn6QhKOV47a9Mu7h22JWRC3
BFestXP02TsPHv25mCSx3Tlctztsc4gkXytJmmnEkWB3OswTNjq/eO+dd362
+/SpRvTWg+cESVLfnmjga7YXIYUV2jPsDk0P1slSqk64O1ZRdywElaLRjrH6
M1vjSuiHR1X2fmlCGxw2G6B7rNEkkqSTSjbn/AokUf0uDhM8KXaxrnNB/y1M
S5/m+Bbov6LJxTl+rPAWRuDN9LdMi1xocWZylSszYNrwV2cseCZH+sG3ZxD+
NHiIYmWWKpdsZVDLu4RpkRYQGQFJgIEpHNx4mKfdtXMMH9r9ZkgNOl+s9+M4
iQiTe4O2ri+QPo9oZzATZg73PvHtCipmYUSIOcogJg8bHIn8S+RBRmyU/IgJ
pJ7bQA0NeXD1vsT/xKO+8qhHxkYNjfDosKWWRnjUIh41tw+VQ39KY//PPvpI
DY37bqseGRk2NH3y20o8ajR/2jo4vPvq08/uvvrsc5r8r+lY/GznyVM2Mkyg
/3OrUoGdERJVYhKFHT/M2uRRV99IMr/GnbF5bWvcmWkFZGz7taxxJ8EKvTyk
e8uN+HN1LVLpalZkrAct7q9dSHm5Eqe7QnQSHDW4RSGmd0ftbC3MD25X/PSW
vTVlyU0W8+qSeXWTPL7HqyuYDFDqestMCwwPmznijTFGRdJnS/HK4JMJY5Ay
u4ZuuD49Lw2A5QKWscgSiLcs3OFzWnGKeid1C75oP6hJyAHwjRLs9gieIkPR
6xhLGZgvC+NLd0IkYRmjNSr5QLjSFrE02ai1zpO+2pyucKXqXEmZKJ4mY5o0
Vm1Qpdr87IMf/XZMlfdWbQr8O2Vzs0aVhlDlQ6FK++CI/a/09z758KPs9z75
6CN0vsIXY5r8bE/sDd9rbwNDLOZHvC+lw6HvMVZaPXav6WOK4FG5kpTJEghz
aWRJ8sg7gKALLlSNQxlBbMsDaRgqFQUvvQByfXqReX0iFDoQMjx21Ce5+kxX
JvCXckZ6DtDnYlYur+/6HabCTUwPocblDZ4VSp5gXS5cMmWXmJhrvOEqJhI4
k6upQZij+bMUxyIQxnNowhZkA07PQ36AW0rM2mgtFVbGk4raSiXthXnklln/
Wdh3MFBFpi/kB+yGIXJLrlmqWxJL0XFCwcixN0/do43YmC7sC8xLivxAhr5a
TZkhM4C6I3OmznzhSh4xJgNbOHwJzlmLpLlzpE3iyd8gNZbm5x9/rHmyyKpU
nSopcyV59LPtr74hcnxIX9sytvy0fVgVz6zdsRQZ5zQ6SRbZF6kt9rAzIcFR
6BLfTihQBber0sUQ3iI4DNS4n0UmaiAvc8lx5SWy/jE/uCtU+0PnFqygyYKp
UdlIDfJLirhkJ9USL3doDsvwJ4G4JH4RwFuILsgNgQbQfKHnEGtE/EmZHkIU
ItDInskL1/bqi4sbkmuW5CEfK6sXzBd+Tg/pw1+cx7Lk/2FrUlCmElNGRJ5n
lkUTjWBxGXjjFicwJjFbLO5saECUjtx7puVydmxzU+YLUsxWoJRut3A/n1li
d7XDarmIKWjQYLPDYY2xZdrVdNoWohnPLzeHSpiQX+4n74IsMDLVrhqYDoG/
HYIaLc6Lhaktt7/4JlmAMNkzOpwm+u+BnPtJEv07lP/+pFbwHz98qOboQM2R
8EvMUZ05lgjJtn62/TWT7CMh2WFVSHZUY4LBx+wQgUIeGv2HzLLvGnv7VrmP
b9IebyAsm6eHsk0o3JcrNuejt3HNKjbGNZ3ZJVau85SXvDer1f0A3UQTX2Yh
u1ZE2TVx3m5Qs9xYXCnF9Guem/LNuaYOmHpmN07NXO3OxU0hLLsbEHpekLEi
oU/jY07HazvHkjIV6beCjJfX4WU7mzExmbHnN8baJPOjc5Q/WY5nwldNMWT3
LBzcPymWItV+WeJoJo2RESmtTf5qIylPyqRE/adUJtUVI9KCmsf3vfI7SHKZ
lFvj+xQ6kSz6U7AyRZ4hM0oSSNnxmbIJI0om75dJKUUfeH0DtWBOShCyREr6
IKIkfXgbhqyK9PY8kPL3S6RMf06Ho5iKHy53v/kaVDQadqsRFetMxYYmv5sb
qdg5qiGr2EnecQqS/JRozK/HNJQt5jvlzZGJvQiegle4tgnGVNLeuPOJdP56
EIWuSPcJp0pE8Qph85ZQtksuBi3nJ+7l8/ohaS1Es9UZAgVdjXFdEq3wpNb5
Ui5cKg3X0m5gn6a01bwl7va5d6cOonHvEiLnUuGesOry1gi4jAmY8StOysze
fJ06GSvKuoub/J45vBaB4aQf/eJ8PaEHh5IOGnJJksLzkuI+cu+ch1y6vNEL
Sza+6GDTMdf1CEiHn1gnctjV9NhYFzOtKDFNMxMSbKFKMtVEuFKuN02Mbpz8
nvVAOdBtTCZOYq1hyRRarMWsG4B13SjWYk+NOEcmVBjHsmYGv3zydsbJOSbC
s8gM/iaOH6GRLZjBozL3aiXuUSgY8a/ZZhMo/KvWhH6V2AJycPaL9995VzY+
mMv2+XKDh5XdsxnU68fUG0U7gUXUC0uznH7GPCs6MeGWs1hOksA5JtmpdzRK
ni94TUgKF94Nbw003iPDeblyj40XTtXNjE2a5+rUhqUWYmnA5TbrAlRS++Pn
YdmUd0TB5e3dgFQ2uLcMXMNrl35O5dZ5eIEDyHjN1u8Gvil/duSRWtow0/wG
8oanJsvUuoYwEpdWnEKvEAbqIuZeMHVY/5IU1jWqBQqzcRsa5WwbKNtfdmZ3
WbO9RmzPMucar/rim9nOe1PLo4NqkYUjSI6lJ+4BmkKFbSGzMTC21bqc8u5S
4NeLTZySrRORrbnL5u3RbAPXMlg39kBzef67dPi5vXpQYt1y5+uvlXVm8WrK
ujr9HORBAusarcC6VoetHVhHfyO+J7vWvvUIG73I9wy3DYyMnvY/PCjvZW1r
wkK3aLB6YVXk+YZS70bWiYNDrs6pLJZdnGqVReot0NIcucgyEvWWrFYTa/rQ
ZRAygYWYO809cPouZDTgRt4gupPwzD3BiBtbTrGUGcb2zTjm/Mr5lZh3OO1G
8Vo+Tj1JsFaPket5eVOY5Tv3fEkwc2eoWF2JrVtXOpeWaqQRuZGY7/TCkvPX
Yc2ZrzuTuu9DzZfEKduTeCFmtEYhs7WX0Z2QpAQcbonpd/71W1wqBRNwkAu+
U9i6KRFwYq1FXW6tmICEyC1ynNQaYqXl0PPwQ2dhzxgokZ+y8FBY2KHIDwwk
ae3Wydw9fSsDk4w59ztr505jC6hc/A0xkc3PPv6IPjmygMZHsYCIATk+bWIr
CuLiN8LFcZmLGghWzPytmcC+JFqK0s4Tuo1r4rdtv8/BZN3+uQ20CnGwfwtz
ONeYSOAgBCgT4W6eWjDiuzigKeeaHahNNLzh4tYNu2M3oSyrsVrIDIYMvOQT
1eBdexI+U6cw5E3EgUxwDnxLCmWieZa3ws/VSz3erF5estzSz3oJe4fnch7n
bnDuWt/Hv+XlxY29T86H99GPeEm/9CXyQS/B1JeldM21GcxM1U3UARVVmTNf
BRdRMYupGDL8IUucSNOflPf1RmWJ7xwSdkRMZPv1Qu+MHNXJQMMTtYcZuEhG
sT91YzgzYwgZScoSS4W48eKDwEOK9Pr1nvmcQkJLwYCE90xh89MPfzT9FYkY
GUU/tx8TMV+19vdio5gyC5P3xAutNWATB2QP2SYOG9wP2PrZzjdPuCqwzkVm
IvvbulFAZBMPslIeZqDm8OT+rR109y3dr+h8JIXmWbn3bzqX1plL3iVcGtRA
PdDN5FQjkNwpdy2SvpV1IbWQxe3a6CpaZrHxk2SJdUlEGczUAjywyE0SrF/2
Q/HbbW5OKCzfrUkqFLwbEqDoEckLJsvyNjMe4iS4KGzD8dZ5yPwikislwwsi
QlHoEyYpSAdS3s/PpJJBfSE9IFLqDsNjQ6Y1iNyjxSxe33ftrbm+RVMpGzOP
ep11h/SYm2dhdxrJlJLZDdz0plzcR8k9V9hJZmgOhorLqsU4Dg6LUjEOBbnm
UDukCk/J9ANRUVToEuFBVLKWHbOWRFRYSyJqY+dQSJrHJOXHKZ4U3+tpExjJ
VPj6EzWcMV//+jXD2V4znP3IcPLeCYGvdD1v5+y0jXum6y5kbDufme0EZ33P
/268qbRs9y83XNyw45jt1CQMLuJl28Zg5GpgQGeLUteim86YvtdvpS+6wrO3
kTaR9sBS6TmPMzLnNyEjA5IWRsOLOMATJ9RczzV/tUSqJX0CMzYPjL16wawt
3Ja+UM7+gH3d4qd4lOmjCzwV7/fa86jOUyR21nlaKneAseL9utsrC3ZjoqqP
ixBBJJMNeN5G1AdO1LCqPN5CTbd4L8qN8948L4XAwUwbhReSPWWiSjanAFct
tNR1t9ph8pDAPNKddciaNtctao+cyYisRzFZiagHbFEbZlEn98kKQp7itEWV
pypZ4OnvrvH0T+D4ASodzb29csB5VNNq4ppxbSDgVLKiwYsLnB2sobFqYpcl
2Nee3UNX6xy6AQnf4iTchyYyrmPrs5f7p+q+lucuWuiQ5GoBml5O5+Lfwsdd
JNbDupwfa4kDxhb7MkG3S5u57VFgQaYtb7pQv008OOmQWidnkoXCoGVPNZtz
P2OzyaCmJbZGthHGj63pTcVMKvlqIOfVC2bd8kUWUxSsBb0jit6WXWD7eDW6
MLO3hLXIN479Xwtcs7exls+dWR8ZutLOlb9ZyAbFTorVKE+sNvk2+mouNrSt
YjJPrUFMt1XSO1yKB5xuujeD1O1niJpmRFkToi18YidujmLktGvkxWLhUfKx
GFjLCSlvNRpFd2VPeKvhqISk4Oxhi7gUG9ijZPIrusFZeN/3ymCLR4WuBdrJ
WmpWO2JWoTpqvOOEZmSZqoOG2lWna4fXfnYkDs2Fp1IJkc3h5G7DXa/2sx0t
21IjKUUbfdkZ4p45jbgaLYeZxS6xlSKNp+oSC1+RF5J80OoacpaBsHmJsDfc
nntzcmHLEpWtZkphOrROkL2Nrch6egZoA1ERY3rG9CV7vubOPjTKXd0SOyfG
TpAz1XcRWctGNF29AkNf0blX9AX2jD/oFZHw1aVLzm+QF+Ul+Myv5HeU07fn
187IqHctNOXcTx6ZdoOe06VpqhCvXM5swX+qW9qVdtyVbVpOkeA7tY0t/B4q
qd1GO9zoLfGddsdOUI5ahzPc6ipmqLN0NR9orYQTRnxPLLA0mFel6EiX4LAf
/D7hnmkqFO3fo6lkjZim7cMmaNoS04oiyfhtNE2ZofkGW1oi5/v37GjvqBaV
SxpOztiOSrM0dwqIIbUVOpPYkGa4qZcufk6Ep1ngaNea2OzePyOiKBZ59mXx
c7TMf+SrCsBTr5eApEj8zZF/X8QmlUuU3DUwP87WWKoiZrUwdkZykayxFAS9
NP8usQoDLMjFlXY9lxKzTtV1+4nM0G0IQ8XuuU+ax3ZSbSKsYbCiKXOYA9Wr
FzGT8SdEVCIi0/oVv/sVv/sVO8ivmOCv2Hy/4i9Zp/CtWnD1h1lPcA7p8tpy
SXw6MBZB+S9nbI4sb0VyvscmF5bqTW0XAuzR4UttM88qxTf4uphKjeU47CYm
q0h9a71xuIM4x6jCTAbZgG3qgp6Dof0JZIZlCkzSx7pMYRyCVSHoagRh39ft
KH06UZT8YxCUbGg3Jqja0Kba0E3kXKtgwl5qBfOP4/hxsJcHYi97JVq+3V6O
uEMurF+A1WTb2Y1sJ260x63WZjadjqUNVfnWfadmNu0OGp7CRQqJzaSy8ULW
92QafBoRl7CXS0kiwa8NGXzP2GqP1zXf5OLm5CLXSpwt69du5VSXwXBfgNEu
82qgFQ4vIjGjmInTamawcC6FR+ZuXkHY6F3BkhG/RsSvV/BhhUVXINULvHrL
T8OruVlHtpNCKtL/fK6iRLs1opkTG3JK16Wc7ZUpE+kpEHdWmnhCtUXWKFkY
rsVMCc3DSm5e6lrqvTiPFkCcle4gcqpVZd0CytoIzuP9+3A7zPLdILUFtUQ9
EaFeysxjpPWFe7O+5YhIOhPjnoSdWyXqhbATOaIkBfUeIaG7Xtdsqwvb2vew
c/R29pUMYol9BQxi64C9VTKIh2CeeqsP1SAK8wbEusC+trCvBcbRsXCDyCLb
+PWgcMRl1R0tj7uD1DvnQLmyFVTeyUY3zrsz4xx4NxcDuBUM4Azcs5pJaEzF
Whdv07HkbRIXL80Auq8qbhcr+NN47cA6I9VdlSTnVRIq9aF3xh6JofHAz11N
oeNlZOkQIb6IDZymbNXLhL0DX1+AkHhE0aey1rgJc3j18oEbxjx2a5fi1j7A
sQgUXZpY7rcS89TrLNYeC5JemUcr8fd9sxiYqRm26xMvGx/bbISN2cJSCrsl
YFiIdKF3nr/XHb7ArrPaVVlK4Q5lRQUn/o+HMzWJJP2Z0TOFXXxH2Sm7jkzb
aDzw9RSwiogupb+nXyc09800WqlFW3wKCS4PmZnNdcPoFOR/W+Hc6Ro1/zoc
H0veRw0jU7O7bhgDPbkBt8FbLjs1m7wHyUSiSfZOp8JJZqTwMsl1Z7aBCfiZ
6G6DPdzQFtREU2s/3pjtDJkfoqjtNCtRJdrJiaWErlBdmTtJQ3Hz5Jd2GCSy
5FU5miAO4u08UEoPCxHA0tOlr5W7VAzehq5PLbRIk5qyVMuVBPyKEQ8ceGGi
nmdsACMKwudkOxeMophPUvavrl84Q1/mzsb7nyV/K8Z0K2aopovuZ3S16plJ
CteCyzwqsNxGdETSR2srLrYoXazlg/LmDuUFHPFC9KtfhZxYv3FeuveFiVZZ
RuwugaLDORFzXqbnMKbmVKNKCS052zh1bjIqueu1QC9C2WwyuJmcjyS0rLLH
Kl5rR81mi8xmU8wmMezRn4o592i5/dXXcEaRuDnUPKtzTvjWbzSFbnnJGk44
1WqMS1EOKYxykGhXTzeGzLHCwkFhGckZ8qu28+Ek5GzGU8vZqDG0zKokVDMz
gKBXytRK1zt3ZLPA65M146fRnyAkjv4yt3zQ+UvT+zB6wqnMLd8aXnMzcLdp
bM7gegrREnNJ3TiZEWOr9eIhnufMKmOXvnb1kv/o+qWdomevmWavmXCvQVJ6
SHKr/8vpCh1u+a0SJKaWsrlNtYIp3jQiW7S7XlvMex6WV5VZldugyYpC6/iV
FOomPqlbEt+rTng1s/vgRhsy2l5+9ygVelxPlUnz2BUdqiu6pWSKuuxsaYf0
kLfHycdEp7C2Y8Skitrr+lazVGvXrSqhQCr2Q5VUe3XkaJRRvx5bMWRdOLyr
mpMpjKrWhVWNNSvWWLNinHWRbIuGdr0MNiyLbVhiZQu+H/VJV8K6E20MV3qx
GuKFUBu4xR3452NtylldTuZ32988SVI6Pk2y73pEfCsqMrF4cUZkuYKnKRw7
s62khGgXQbCw4D7NvLgW6hjxeiO0fZaa066FdJLDWFreUep8iP7KkZ5mQCSq
g9GBXSrcQjGb2JscO81eJkwnMmKvr+l98siIZqTiZ0tQ65bfLNQK6Rg2kiFA
tKSqZGasgceayKW39doWyxvfNlmxpTjoUrzYihZYXehyROtpFW9fvIlT2whV
4j8rYoQd7qStdXZ/964kvjlvtPUj39yAacfmy0W9zPnAa4/oriuTDs0CvmI3
eJn0GtGOdzc14lmSVIkH0h21A+nIkjV2qyXOvYeUCjxHCuqEc2Ur1qsb5ySo
G4Jv7VTKhcw3vm9BzDeWvodz3KIU/EYV5VwXnJOOuBy0OxOLtk6883WjllmO
8xcfvvd+kqNtIf+uR78v6sf5pa04as1uT3FA4Hbp2yiY+ZJ0PNClKxgiQTFc
uCXdLDde+nsLy8xv40xKbtx6weEVMSXyEN17fJmpzcIbyIoRxZhKzsDXfI4Y
WOFHZtrsPU6+1G2e0fDq1kiqXxdczrUIEMUOdPNUJOMpGdxocVfipi/sTRFW
1Sepb9Pi/eShlzx0CedxsjPsoScbSYVbcLqhi3eX1KVTYuhyMK6yOhkx4+Yl
ti0GpLzn0sfanfqGRcK00Mc6xi6rxDX6es9yiqSa6OxXe5stHOK5WvPTj36k
S3yNbcS/PWLbwaqt1i34jHVh2loKRdjWAduQA+psIFuPCSf2jXf/ipgmyUsw
LQfLKuIzOss8gcJNMygjjNfLCIukIvT6/tP3PrrrHNSUYqdCr4LLenGrDIyZ
hO9YakHOzgVTbAPNOChZ5tJwKTHKxVX+g1TKNdiCzVDHL8RQWRRDGdqNBkoc
UCNdZw+9UDhnXonR0mdlHr2MeMRu49IJ5hYtK1nN2430WmvfQYCJZSMvy4la
uJapj01YOrUsOQOX4ib4ZmJpyE7JgvxS3BYWwhjDMo3T5DZGfgPR1Pr+w6pE
S2wmYFjKBOM+Z6ZZoBf63lCVjxZtWN7kXn/qCEvqJTQDzdSwPQoVvw0GrR0M
mlLsr5WwjFhHBm2PUyHBoHXXDNqAwzLiGDuRYsq46UWLA9NWqemF+TWzjYrF
qLHjGNMLEhxIzYTkFp8Z15hjXPlUS+Zcuxijnn73/Osn0qFHjHv/4TvfP/n4
cxYJ0izrcc1Lm7Q8Vy6ia3nuFoWltZwk4PJCGZdpr5YWCtSzknYR7cnM3E9M
Mk/6uSmwVKEYj+VLM2oejV2tswY+4RoVsxIVCTb2Qq6G7PpV8Cfl3SVrtu5e
PoyJt/RWGSGa6BBU725ClhKN6GF9cfAvxeJviUt9FgRDGW3Zt0x1377rMst8
o/3yPrly29352qaXfkOgWXyXlEXqdTzthzkNkoF5GYzbgmXAPtFCnUip3j0E
35xrnahyF3IhSrbH4kUq4UC2qhi1tho1kE2N2p8sMU6NGruQR2uMqyvjms44
NLe2EbWNtSg3QWmAWKepRzVqnHrEKgoh3sBFC+R8T9Nj3OfoJNQHtDSHXZGY
dedDdh5NSpRLUSLP2IH8XkuOSars2yoqxj6W72a9obMvVx9SU43nHqrBkVwr
B7zgcsCLM1BumTrvVKWHFmjt1wJKhXxqAhEOaUAW8Y4fvRT3MHYag/cH0jww
nt0QQ25eMsnUzuVi525e4f83zLQ3eOubK3pKH/oGlHvDPHzDX/cGJH5zFdu7
F8LdDVT0tIpoDavXu0JZz1MW2j/Hm3HYevylrMmHcGb2dBnvySR8u0x8cwxt
QLsy2vFRb8p1aT5kZl3e4VZEqNr5naRLXd6SfzwRQddomXFs42Q91KInaRNm
nXCvonZOeafdZ8S7lImXvHsva2KdLR21c+1SCrK+fP7VM6Pdr+H4PrIloN6B
+JOdkj/Z2OhPIlvSQH9KUyI3t3fuTM54DS9Tb0tTkQP3Kd3g6cbKSPeXq3OB
eoNfRj12LJx6GY5FbPi+f/Kjz++6h7w3h3qaFJiXPE3svcVJ/4qxsJzuZz/z
BTL9wNO5S6AirN9VXGQGATUjSSeX1+aHIgPIJevbSmz7QEFxDBFWwXQJAdPY
qYzNHnPj5qUQkIg54UU9sIbKQnrtzQ2ImfC5V5m9wGxliuIj3uAvmPZCV6Uk
aAnDGn6T5TiXLq5RbkS5ePbF+Gj96MEq2qiFmp4wlJBy64sx4gWdFxoCRNX1
NE5uRrvW2jacSSDpiRG1RFJJrcj2m4tE7hp2MlaiDudgKOEh8kWdn/Oudp9l
3n0mWweOUWEfW2W91NhtpQJiKG+5WRWOtg+Vo8E0congN2OKPiDWfgVftEW+
qFC0ZBm5/qBmseJm0XpVJjCNWh3Y0mWG4opqqwoJqKnJzAoSK76Zk/qjp72R
u6OD4I6eD9UdzUFMr5mXyMlZzcgulsn59EcsXzg5kTWLyBlqcZUNtTjzRhG7
RORM4KFqR8cLEBMCY5kFclZAylexwFLeFM7PLc9IMgNemYlaDwRfCUkrIOQb
l1f8PxMzW+fkzStQ75XYR6Fkiae50/FlyacNhYaXJpYD1QzQraVcLP2SoGum
EtY2hiSoLMhAGULdVdsPdOkr/Nd3mY45ebXGSd6nrpx9iXfRCHtoZPHd/BLb
GJcXNK4z83S8sHXFzM4UzHyHIsW5d4euVfF897WohTsDO4vgtFr7thbw+mg5
I6dVrWc7sp5Nsp6N/To5rZ8kJWq+75mYljqtJWrWvXpXzsQ0OkxPbmSRakOo
M8BbVbuZGTGjSoNtuy6l8gzHB2I3B6MQJA5jl3UqFfKKBYi+98zldPFdr9YU
k/lY2OiMBCu/m7PHqoyMq+O5d694kBiy5cLDKzirbBfPnX7afJXHkaKTsWRE
1pgIH7VU+oZNqlhMd/WqzEh3JF+BsxoKMr9yYVsgaQoqZsJTws8bfAY941Nw
aF/hLZkTE3YSHwk65muBpUewJS6+cC6m2sgdL3TM3ubSlkJNbRR9oWs5Kxup
qe19m6i5KTG64L2rSztuzKNl/zO7JZXvwit3o4LwCuMF9rqRgPLYZDiX1jT2
c/vCznnf9rgpImaq8Wyb8fwgdITGxrMRSoJdo+gRU7QNiqpzu6rvVZWdPxHD
iSROY3dfGVoth5VqOClo7UfkNIJGttMJOisRVFI48e7UQ76rem7UDKQslwDZ
iw2GcobiH1nmy4l3V3MBEB7t+w8fMyXJcBIhk+IXR0+2iZIjlrvuUUN3o7nG
nmwbyn5eYM+9GhEviX3JRb6X6ruGzI1UIfIoboSkwZD4+gPv81JuWgjn6VIx
T0mgyKt7lvPqVaocg8kTiordvEfR61dsSvmUUDQQMy9TFCHoS/u+kAp64Tx9
aWnYay/rX1lZ3xtngkcbh565r8m6WZUSsL4gmd5xfh3vClDYbsBhIVRIrlZK
jTBRq1ruHE21u3B5n6BJ5luYxntkLzKws+LR53G5iMGr/7lWD3L2ZtHSYiHm
BMWMCfZh5MBz1BqVyelZ1th2StLHbGcLttMSPp/osn1jp7u1zTW3tltFp5mw
c6tkOlnGgZ2J9Zqh/7Pdsx7QDioYnZDsifiJgDONSdofWZMZ7rfA1pPLGedD
5qlaT97BJixZuuSloZe4YeXl7Jgr9b84/Oa5WU+mqfddiBt71ztqfsd3VvLb
H4tTC5benmppCytdy7ZUi/OWshdbem0pn022NNVVCMsb6/Hi9Il0pdwm+Wqt
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
Yg1qKkEa6f6I/4H+Bjrc5cp5kZGOpoq0McRKL2fuaPqUUupf0mfA83ARvxur
IRhvrYZHI/ihJdWh8tKq5rlV73jKxxxDxeb9GqzF7xQPOeZ+pzXvCZ25h+1O
cfKocNMj0TqUYjiMgFNC/USNniRsZ3oNHPjCuvtx+J4c2RBwbmEh4Ag5zZHw
6WLYPswh3xLId0GkDJCnjKPPKS71vUqVGsZ4lTCOZqcwTFpTvyfZrHWIB2Uc
vRPJ5FQZ3+/JLeOADv7xXSoz7ze++8o3pdYD3Cqg3Ho4Evu1HO6gY6RRIoJM
FBqm0iCxndNZkdfTIzMlMKm/8URXkmZf+i7r3WzJa+Hu7KJpqdhyKddikLnE
jWz4cHTWsRFn0r58xRiLqH70ny4UbWRZScafuHUUV0jxR3ysHdamubJNwXRN
3kTQbo5UqIOFrkSpVRRLOG7Q4jUyDli75wThltlS7jCO7gNCuAyS/BFIzL8u
5SinVMs0UKKEXO61UmIud45mBneQVSHn5CaR+5TA7niw6aFlQDrOUXquSccB
1hW4Jn+sD3NN4+HKsN7rUckcucaSmcg+iGTvbxvVO0T1/Yc3H8JnsU7WhBTr
w/e8B0gPYd15DOsSia40BScRR4/60qVPvylwk5/MerJycCEuqHLUcUCncPAL
7WFmxWSlikmukUvpQ4+9UJLEkoWSrIeQCeP7a3ggj8M2Sy7fwMK5praWcXzn
F+FDw+Ip8eanszXBBBtt4ZmAqig+Q5OZgm+pYH5M47HEaKIaKbUC+iRLxe80
PK8T2BFnm0hxY0vaYCFVTZYqtpTUwnzf+HJsaFyTlTxbqA0Ymgv1uwgtJ5nJ
tbLSlJsfGSnxuWV+G6YLrg2DCwevsYuuflxQN4bAWFCjv9vF8WlkFp/Ac6Uz
va7jINbrOj4w23UdtCIP3+l1HRsrtcflrovLQq81vYDejZze9y9a6H3bpPeQ
6e1t7JZAbwHQQs9c7cYPKBKLJ6qt2Pd8l4uicO0zbYnCwa48qus/CGma5JLi
Ssm9HCVa51KdiyGbJmRto8+wNYlkjuuNPPgiupleiY4IquM7eMRoJulp2dK8
BOCP+LJOBBteLmH+TPRZRA9L2tWoP4RHmV0as0WD2Y/ELEMq0Aq4S4rD5f3f
lxzB01/PldT8+2to52q5RT4pug/yTG5uB+r7VnwXulydRHRPjhjdjj/RI8po
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
LFNFNjE/LYDNIguZ55heAZH1PZTlpxI2STcApSTPPeADnPLwUPpAeYx9Ed5g
S6CUvBSenfu9zc0Eyq80L92VWpKj5cHrDwimjT1wvRQUPdvhJ0pLJVJuNOz/
yb6B0lIDU6HUq7YMZS/xLJ2g+7+7cDlwWltq7+BpDzILT8zP8MolOqCFyodM
Vt2yTzGkQXaWOhR27FIiJmWp1N6R4iU4TyVyLL6ZzOXUx0ULogUjipbivOzW
cBR3fkHa7xHRaSLC1YMB8DkWqVeKlQnXS009pWAkpgHcNcU16+T47k7jHtA8
UxLU93KZ47ox8dB21ZVoevjWzlImQcHtgtdUSvqrdlOyfp6jmHnGuA7zG9Sr
k+NhET8MQrWC4f2VKClx7+V0St/SdbtHPXZBlWTxQCzabZVpXmukFgzoOQVP
eQpglVo/6I40xsJJSMWkFlqvSChTCvoYQPSpRs12SHcB0umrX35JIK3QchQh
pehZAKWxMt1vMOo6rhQ4cShikELw3C/RCemZ4/PA93t0JjKWpmsXm65dkt+5
a3bU8QmtIlnqwI7w/PRIS8jsROVpya4MM3UeVYszavKU4nEGTR45QU3nOkKl
PBbSb9XrlERiKNl53iEICy86iXRkVhJCzeI/tHGoHdhlJYkk9luvn1j+Kblp
qFQLRJvklde3WgCWpXMHGYvPzWPf+e/LSp11TxsNKzL/1YuS3nYMt8sWa+qy
PhP3qNXoePhwMT57uBidVZ929/ZC+Ski9il+7R/o/JFBNU8njA2oCrow3uzW
VPyRU1WJg9Ct4fSUQuEAfQSPeb9MVkIpJAJuvHRygq8/Co6C26DrMtVDbbBS
DQmC9O6erx+3oX4MTNx/hR+/w1wVaXvxJsLmc9UPhpsOOChXbcVtEw37I29V
GhP3Dgrs1jxzI8iuHH42mU4P9k760qkJZOVdek8jGndg62ZIrOH6zhT1FWn1
mOA2y3ArnW//4sz59oeSa0cXBYP5g/INycmscr798nbu/EALBo88BrGC1DLy
zlzImLkqGxmo/y1aXmuok+sbS45mRBia/Kt+PQa7ju/fWOCjPqjOOXMa3XJn
a49Xzl76zzU352i9hjLVjEzXRw16iZ229CgGrime5tR7+TAdnX3aQzqB0Ujq
/t6nxfkFcPoJN/Pxw/xsonfobDeMrQElZUUH6Ipvg3tMa/ZeAEzPh2OLhBj9
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
wsn/QezQOucTF05eWjh56dh5y+xAdrYJ2yUSRz6QjG+AJcxgcxsuKKluiB6k
BvZOIjbUAnhm3TZJ1Q6Bmm6yc2JSvon12zA/O6YGNej48AMqageWok1hwX06
lPEQnfmzc3/oahHI9tZWsGVPTBDhacUjYIRUWFuKsNYMIuHFjZ9r5wRDSHJu
RXc1dHF7xotmTBWigOufxcP09EzyL44cXNnTo6FEChoJIsKPK+rxc5M0vEBT
fRF/vEhp4jqnImom8lC3Wj5tQvXSUKoUpRk9dLK91ltf5uBOwoWzUksetgzC
yv8C0zHmh8MP4QM1zjnoOikvOzWG/r/2zqxHsmy764dzTkRmzX17qm53VeVQ
OUdGZMzzPFTV9WfIh/4MgJmhMeZiRgPGTDJwAQsxliwmMcjSFQiB5Ad4MLpI
IHPNExLYjzw36/9faw8nMqr6cs2jW1qnIyOiIuKs9VvDXnvvc3zzDMXZwNdl
/diPkndmoNG7M1DBix77DNQ6ennb9hlIPcmmeNhNQ2E2cBmoUk2ZfsrOj+BF
JnW3JLbBZlrDN9TMkzDjM4tmfPw8ax7dbYhO5JbDusV363Dl6KTgRpuiG3Et
kBYEmfMfek/mWgBF/8m3Rv9anP1wbqQXtA2XtY23Pt8ZDLkN+e6eczq7Eq3l
zt3U5SZslnbuo3WXJJtBqMW8x7z6dnEgAx8JxZflmzuO5BrNfHXlemfmOkgs
/Eks1LaT07Y3bVzxVnCpNyp3XMpfBs+5VGauFN3lmf6Ubm1s3kx4nX49hua0
gLhGH2Ht0pOr6xL6WA4f8302uhj6CMNhUpwOyuhqeSFdTXekK6asTkhXdLam
dzZLV79dHU23Zn2r9tnjD6J0dSpOdqZOttW2HlwGRxtWqn7kE7JVfjsWTxur
p8HR0HBroK8QPO12xhWvIq32tpu55UBL7S3o1FDuVzEULs6eb68E8tuYx5Oo
az3N7SJ5eg2BObep52H78h4vDRJvYfabPtwl2lN/iejYyZxDZYVNzqtwxdR4
rTqawqtoHazbM7F57bJcPKepfuYcKnYnuo489ePOkbRki1YTvLH3vC75OVFx
nCBIRK/hQJwYfZ36MY4r3tRp1FWwP2Pj90aFK9TBPXJ3E/Rt93C34UF7eYOF
PBvXWLNiTVOOOgVHO7lPNxj32PJv3Qi17QoDc4VS7Aaux8as05V6yPnBuJB0
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
+F54zv9X1ueQz+a7PwKLNL5yL+X6QV/Zu762/8+jj8ev+e7WR/3v4q85DB9V
nsfP2T/9Xvhh8UvJfy982peJy8P+03ge/sem+tzX8Ufwfel37/y0wj+MPuzL
rQ/7QfxcHn7I11u/8X+FM8ZLOEunoMJH7PrY0o7f/auFj50nd836w35s4bni
xzqzxm//7o6P9Wfk30eN2qn/SviNXqN74TnPxv3wBd6M+qXlL+P3JaqGH7iP
ecd3+c/YD+fpf+Q9fe578ecqYcyxX9lJ/sD9Zvu9BYX86ru/knpJ8SsjJPyr
7/7y/NC+0Gl5/5u+917hexNVzdf2nDuVJNuhgv0dv+LDb/q6+/HXHSaRhqKv
xnuUjPyr6O04n9J3/dOJvYRnPvqm7y3F3zt3b+Np0fx2gu7beZLlcOr+JP/f
vuhL9zgL/8zrytgvBIq98NwPr9PCV3qF6Vfuf5ncNa+LgXjt/4tCt86zYDWe
6nf9i+57k9KX/rnfhHa/Dt9ajr/VnSbev8tdvlGpD+JvSpIo6tqnF4M5Pvj+
j/I9j7a/x73VseL+WXxGP9pXMXmEnxyec9Eqfs6/774/v8g6/gffjffFsJl+
lfhI8d13/0N829eFf7hVJ0SO4Z+zj7CE6/959PZdH1GIYcWPwEtfvu8jrIY4
TCIVxzUE1bTr55fDaX5v1z/U8O9P4T3f/b3459tH/PqOM9O8kePt+Lnuo3ad
wQ8Kn/JlEjFln/JVEkqz6FMK4cw+5TfCbzksfoqvXXhKUe3oNfJr+r//oy/h
VL50L/1P/d/X0dt+6/GP9jj5bf8XgqeKGg==\
\>", "ImageResolution" -> \
96.],ExpressionUUID->"17cbfbd1-063a-4ec9-b48c-b96acf67ba2a"]
}, Open  ]],

Cell[TextData[StyleBox["Ramsey Fringes",
 FontSize->18,
 FontWeight->"Bold",
 FontColor->RGBColor[
  0.0938124666208896, 0.46669718471046007`, 0.7126268406195163]]], "Text",
 CellChangeTimes->{{3.884102955111163*^9, 3.884102957596738*^9}, {
  3.8841041760964937`*^9, 
  3.8841041825154753`*^9}},ExpressionUUID->"806e2e35-7441-4544-b913-\
1013593d11ab"],

Cell[TextData[StyleBox["Driven Damped Lorentz Oscillator",
 FontSize->18,
 FontWeight->"Bold",
 FontColor->RGBColor[
  0.0938124666208896, 0.46669718471046007`, 0.7126268406195163]]], "Text",
 CellChangeTimes->{{3.884093874209495*^9, 3.884093880662342*^9}, {
  3.884104184909889*^9, 
  3.884104189640617*^9}},ExpressionUUID->"1570c2de-4557-403b-8a82-\
35700dd3fd6a"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Driven", " ", "damped", " ", "Lorentz", " ", "oscillator"}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.884103359894198*^9, 
  3.884103378174712*^9}},ExpressionUUID->"07dad649-11fd-40e8-84cd-\
77543a970c5b"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Optical", " ", "Bloch", " ", "equations", " ", "with", " ", "damping"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.884103358317225*^9, 
  3.8841033911329536`*^9}},ExpressionUUID->"ad3974dc-86cf-4a09-ad8a-\
4fba3f323121"],

Cell["\<\
In order to get the damped version of the optical Bloch equations, we simply \
add damping terms to each of du/dt, dv/dt, and dw/dt. Since u, v are terms \
related to coherences and w is related to the population in the excited \
state, the damping factor is -\[CapitalGamma]/2 for u, v and -\[CapitalGamma] \
for w.  \
\>", "Text",
 CellChangeTimes->{{3.8841034175670958`*^9, 3.884103434201087*^9}, {
  3.884103620523698*^9, 3.884103686427046*^9}, {3.88410384923342*^9, 
  3.884103875468821*^9}},ExpressionUUID->"0e2a1282-66b2-4a27-b31e-\
0808b0e1df71"],

Cell[TextData[StyleBox["Optical Bloch Equations with Damping",
 FontSize->18,
 FontWeight->"Bold",
 FontColor->RGBColor[
  0.0938124666208896, 0.46669718471046007`, 0.7126268406195163]]], "Text",
 CellChangeTimes->{{3.8841057658340473`*^9, 
  3.884105773812221*^9}},ExpressionUUID->"5c78fb22-06b7-4ccf-a699-\
0ac6131c985e"],

Cell["The Optical Bloch equations with damping are", "Text",
 CellChangeTimes->{{3.884103879150786*^9, 
  3.884103892087226*^9}},ExpressionUUID->"d52e7283-b9a5-42ff-9e1a-\
bde15cac9474"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DBlochVectorDtWithDamping", "[", 
    RowBox[{"u_", ",", "v_", ",", "w_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Delta]", "*", "v"}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[CapitalGamma]", "/", "2"}], ")"}], "*", "u"}]}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[Delta]"}], "*", "u"}], "+", 
      RowBox[{"\[Omega]R", "*", "w"}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[CapitalGamma]", "/", "2"}], ")"}], "*", "v"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[Omega]R"}], "*", "v"}], "-", 
      RowBox[{"\[CapitalGamma]", "*", 
       RowBox[{"(", 
        RowBox[{"w", "-", "1"}], ")"}]}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.884103905695702*^9, 3.884103955344737*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"3ddd1bec-670f-40f9-b66c-e35eafdd833a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DBlochVectorDtWithDamping", "[", 
   RowBox[{"u", ",", "v", ",", "w"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.884103957566407*^9, 3.884103961692368*^9}, {
  3.884104065558816*^9, 3.884104075138844*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"94781488-c3cf-43af-8b2c-678a06ec83b2"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"u", " ", "\[CapitalGamma]"}], "2"]}], "+", 
        RowBox[{"v", " ", "\[Delta]"}]}]},
      {
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"v", " ", "\[CapitalGamma]"}], "2"]}], "-", 
        RowBox[{"u", " ", "\[Delta]"}], "+", 
        RowBox[{"w", " ", "\[Omega]R"}]}]},
      {
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "w"}], ")"}], " ", "\[CapitalGamma]"}], 
          ")"}]}], "-", 
        RowBox[{"v", " ", "\[Omega]R"}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8841040672984457`*^9, 3.8841040754082537`*^9}},
 CellLabel->
  "Out[32]//MatrixForm=",ExpressionUUID->"1d56a9ac-19a2-4e55-a738-\
345b441e9914"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Steady", "-", 
   RowBox[{
   "state", " ", "solution", " ", "for", " ", "the", " ", "Optical", " ", 
    "Bloch", " ", "equations"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.884104100602151*^9, 3.8841041096408854`*^9}, {
  3.8841041537434683`*^9, 
  3.884104163426653*^9}},ExpressionUUID->"4fd95796-5abc-47ae-92aa-\
e44253d6415c"],

Cell["\<\
We typically don\[CloseCurlyQuote]t care about the transient solutions to the \
Optical Bloch equations because the timescales are often not relevant. \
Rather, the steady-state solution is much more relevant to us:\
\>", "Text",
 CellChangeTimes->{{3.8841041958893147`*^9, 
  3.884104250343172*^9}},ExpressionUUID->"ee9099ac-8ef4-45e2-abf6-\
d775eff6395f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BlochSteadyState", "[", 
   RowBox[{"\[Omega]R_", ",", "\[Delta]_", ",", "\[CapitalGamma]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Delta]", "^", "2"}], "+", 
       RowBox[{
        RowBox[{"\[Omega]R", "^", "2"}], "/", "2"}], "+", 
       RowBox[{
        RowBox[{"\[CapitalGamma]", "^", "2"}], "/", "4"}]}], ")"}]}], ")"}], 
   "*", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]R", "*", "\[Delta]"}], ",", " ", 
     RowBox[{"\[Omega]R", "*", 
      RowBox[{"\[CapitalGamma]", "/", "2"}]}], ",", 
     RowBox[{
      RowBox[{"\[Delta]", "^", "2"}], "+", 
      RowBox[{
       RowBox[{"\[CapitalGamma]", "^", "2"}], "/", "4"}]}]}], 
    "}"}]}]}]], "Input",
 CellChangeTimes->{{3.8841043043095217`*^9, 3.884104320763156*^9}, {
  3.884104596510029*^9, 3.88410462243766*^9}, {3.884104691765478*^9, 
  3.8841047813513727`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"f2efcf8d-8819-40e3-a0da-4d77807dd40c"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Steady", "-", 
   RowBox[{
   "state", " ", "population", " ", "of", " ", "excited", " ", "state"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.884104923331748*^9, 
  3.884104936619442*^9}},ExpressionUUID->"b396641d-ea0c-4bc1-bdaf-\
34f6133e0b01"],

Cell[TextData[{
 "The steady-state population of the excited state is related to w via w = 1 \
- 2 ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Rho]", "22"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "631fb1f4-1c77-4a6c-a411-1cd40dad3257"],
 ". So,"
}], "Text",
 CellChangeTimes->{{3.8841049606284037`*^9, 3.884104982803184*^9}, {
  3.884105974170776*^9, 
  3.884105983295052*^9}},ExpressionUUID->"e18007c5-3ae4-4bd6-bc4b-\
43e0a150ff99"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Rho]22SteadyState", "[", 
   RowBox[{"\[Omega]R_", ",", "\[Delta]_", ",", "\[CapitalGamma]_"}], "]"}], ":=",
   " ", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"Dot", "[", 
       RowBox[{
        RowBox[{"BlochSteadyState", "[", 
         RowBox[{"\[Omega]R", ",", "\[Delta]", ",", "\[CapitalGamma]"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ")"}], "/", 
    "2"}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.884104940544936*^9, 3.884104956838417*^9}, {
  3.8841049890924664`*^9, 3.884105106140213*^9}, {3.884105141274946*^9, 
  3.88410514252934*^9}, {3.884105940129984*^9, 3.884105965634354*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"04dd37a1-9d8f-4b87-9ec4-17cd9330af1f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Rho]22SteadyState", "[", 
  RowBox[{"\[Omega]R", ",", "\[Delta]", ",", "\[CapitalGamma]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.884105125493917*^9, 3.8841051385658407`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"5e08c30d-5955-46e2-b704-068e3d580648"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[Omega]R", "2"], 
  RowBox[{
   SuperscriptBox["\[CapitalGamma]", "2"], "+", 
   RowBox[{"4", " ", 
    SuperscriptBox["\[Delta]", "2"]}], "+", 
   RowBox[{"2", " ", 
    SuperscriptBox["\[Omega]R", "2"]}]}]]], "Output",
 CellChangeTimes->{{3.884105129180979*^9, 3.884105143633024*^9}, {
   3.8841059675746593`*^9, 3.884105987825673*^9}, 3.8841260317276187`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"4c0076e3-01ed-46cb-bfcb-935ea747acb2"]
}, Open  ]],

Cell["\<\
Notice that for very strong drive, i.e. the Rabi frequency \[Omega]R becomes \
large relative to the damping and detuning, the excited state population \
saturates to 1/2:\
\>", "Text",
 CellChangeTimes->{{3.8841051504981737`*^9, 
  3.884105205996871*^9}},ExpressionUUID->"f1cdafc0-b6a2-4bca-9fde-\
0ef0d5f3aef3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"\[Rho]22SteadyState", "[", 
    RowBox[{"\[Omega]R", ",", "\[Delta]", ",", "\[CapitalGamma]"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\[Omega]R", "->", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.884105207727911*^9, 3.8841052397502728`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"939debd9-056a-4961-bb04-161ceacc77ef"],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellChangeTimes->{3.884105240090866*^9, 3.8841260335727654`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"3e9aa4c5-322e-4525-bff4-d81e63789c02"]
}, Open  ]],

Cell[TextData[StyleBox["The Optical Absorption Cross-section",
 FontSize->18,
 FontWeight->"Bold",
 FontColor->RGBColor[
  0.0938124666208896, 0.46669718471046007`, 0.7126268406195163]]], "Text",
 CellChangeTimes->{{3.884093902049995*^9, 3.884093929813541*^9}, {
  3.884106012379037*^9, 3.884106019521323*^9}, {3.884110473162547*^9, 
  3.8841104733991947`*^9}},ExpressionUUID->"0304f5dd-21e8-47fe-ab3e-\
ea1de07a66d5"],

Cell[TextData[{
 "Consider a sample of N atoms with thickness \[CapitalDelta]z. Light with \
intensity I(w,z) along the z-axis with frequency is incident on the sample. \
The attenuation of the light is modeled by an exponential decay:\n\ndI(\
\[Omega],z)/dz = - N \[Sigma](\[Omega]) I(\[Omega],z) = - ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SubscriptBox["N", "1"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "6bb273b4-896b-4905-befd-283345ade992"],
 "- ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", "2"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "4ae99bb2-9dbc-47bc-96b5-fb44d291c514"],
 ") \[Sigma](\[Omega]) I(\[Omega],z)\n\nHere ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", 
    RowBox[{"1", " "}]], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "e3b7cc01-1d21-4ff7-953a-e2442e85537d"],
 "are the absorbing atoms and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", "2"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "fce901be-7058-4d7e-8b9e-7b58e76cdfea"],
 "are the emitting atoms (due to stimulated emission). By conservation of \
energy, the light attenuated per unit volume is the same as the amount of \
light that the atoms scatter out of the beams due to spontaneous emission. \
So, we have an equation:\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SubscriptBox["N", "1"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "04cc9634-e96f-41db-b484-cac0fbf48caf"],
 " - ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", "2"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "2bc2f52a-3d43-4373-a33c-f030c891a481"],
 ") \[Sigma](\[Omega]) I(\[Omega]) = ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", "2"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "40ff99f8-0a24-4c9a-935f-e04601d65345"],
 " \[HBar]\[Omega] \[CapitalGamma]\n\nNow, since we know w = ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SubscriptBox["N", "1"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "1e9f81b0-b551-44d2-b09a-90dbafc34af0"],
 " - ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", "2"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "a7ab7ec4-2be1-43a2-98cd-88916035e443"],
 ")/N and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Rho]", "22"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "c827c934-4f40-4f15-b9d0-b1524948bc66"],
 "= ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", "2"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "99026b34-f0a3-4dc7-b9ee-0e605e9058dc"],
 "/N, we can substitute in these quantities into the equation above and solve \
for the cross section \[Sigma](\[Omega]):\n\nw(\[Omega],\[Delta],\
\[CapitalGamma]) \[Sigma](\[Omega]) I(\[Omega]) = ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Rho]", "22"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "0463a960-ab9f-49e7-b230-44eb55f1bc43"],
 "(\[Omega],\[Delta],\[CapitalGamma]) \[HBar]\[Omega] \[CapitalGamma]\n"
}], "Text",
 CellChangeTimes->{{3.884106084590341*^9, 3.8841061529821043`*^9}, {
  3.884106351050604*^9, 3.8841063607758102`*^9}, {3.884106464689597*^9, 
  3.884106468583044*^9}, {3.884106778290204*^9, 3.8841068508534184`*^9}, {
  3.88410701785821*^9, 3.8841071399146*^9}, {3.8841072132391577`*^9, 
  3.8841075492520103`*^9}, {3.88410764523555*^9, 3.884107650129999*^9}, {
  3.884107682697218*^9, 3.884107804635921*^9}, {3.884108114845235*^9, 
  3.884108125215308*^9}},ExpressionUUID->"d4b52ace-1493-4bd9-82ba-\
fa69758a0d69"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Dot", "[", 
       RowBox[{
        RowBox[{"BlochSteadyState", "[", 
         RowBox[{"\[Omega]R", ",", "\[Delta]", ",", "\[CapitalGamma]"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], "*", "\[Sigma]", 
      "*", "Intensity"}], "==", 
     RowBox[{
      RowBox[{"\[Rho]22SteadyState", "[", 
       RowBox[{"\[Omega]R", ",", "\[Delta]", ",", "\[CapitalGamma]"}], "]"}], 
      "*", "\[HBar]", "*", "\[Omega]", "*", "\[CapitalGamma]"}]}], ",", 
    "\[Sigma]"}], "]"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.8841077898539753`*^9, 3.8841078656966753`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"390e3858-7a44-42bd-9dd5-24c24ced5375"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Sigma]", "\[Rule]", 
    FractionBox[
     RowBox[{"\[CapitalGamma]", " ", "\[Omega]", " ", 
      SuperscriptBox["\[Omega]R", "2"], " ", "\[HBar]"}], 
     RowBox[{
      RowBox[{"Intensity", " ", 
       SuperscriptBox["\[CapitalGamma]", "2"]}], "+", 
      RowBox[{"4", " ", "Intensity", " ", 
       SuperscriptBox["\[Delta]", "2"]}]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.884107861431552*^9, 3.884107865944749*^9}, 
   3.88412603519372*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"695c0151-f3d6-4c7b-b99a-79e363b2d33a"]
}, Open  ]],

Cell[TextData[{
 "Okay, but notice that the absorption cross-section should not depend on the \
intensity of the light used. To see this, recall that the intensity of the \
light field is proportional to only the magnitude of the electric field \
squared. Moreover, there is a \[Omega]R^2 term in the denominator for \
\[Sigma], which is also proportional to the electric field magnitude squared. \
\n\nThis means that we can cancel the electric field magnitude. After some \
manipulations, the absorption cross-section is dependent only on \[Omega], ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Omega]", "0"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "0aa6ad2a-7f19-4987-9437-c597fb7f1c8c"],
 ", and \[CapitalGamma] and takes the form:\n\n\[Sigma](\[Omega]) ~ \
\[CapitalGamma]/\[Omega]0^2 * Lorentzian(\[Omega], \[CapitalGamma]) ~  (1/\
\[Omega]0^2) *  \[CapitalGamma]^2 / (\[Delta]^2 + \[CapitalGamma]^2/4)\n\n\
where the Lorentzian(\[Omega], \[CapitalGamma]) = gH(\[Omega]) is the \
lineshape function (Cauchy distribution)",
 ". Here, \[OpenCurlyDoubleQuote]H\[CloseCurlyDoubleQuote] denotes \
homogeneous. "
}], "Text",
 CellChangeTimes->{{3.884107899813751*^9, 3.884107908038548*^9}, {
  3.8841081750783033`*^9, 3.884108195826354*^9}, {3.884108299130672*^9, 
  3.884108472109641*^9}, {3.8841085591415977`*^9, 3.884108739515497*^9}, {
  3.884108770431678*^9, 3.8841088155021257`*^9}, {3.884108906984975*^9, 
  3.88410891740096*^9}, {3.884108963431211*^9, 
  3.884108982865439*^9}},ExpressionUUID->"f12f66fc-36b0-419c-88b2-\
bc6671ba5002"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"gH", "[", 
    RowBox[{"\[Omega]_", ",", "\[Omega]0_", ",", "\[CapitalGamma]_"}], "]"}], 
   ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"2", "*", "Pi"}], ")"}]}], ")"}], "*", 
    RowBox[{"\[CapitalGamma]", "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Omega]", " ", "-", " ", "\[Omega]0"}], ")"}], "^", "2"}], 
       " ", "+", " ", 
       RowBox[{
        RowBox[{"\[CapitalGamma]", "^", "2"}], "/", "4"}]}], ")"}]}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8841087114346657`*^9, 3.884108716950367*^9}, {
  3.884108821082695*^9, 3.884108888639442*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"92ff335d-04a2-4dae-b906-082631ff0bbc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"\[Omega]_", ",", "\[Omega]0_", ",", "\[CapitalGamma]_"}], "]"}], 
   ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"3", "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Pi", "^", "2"}], "*", 
         RowBox[{"c", "^", "2"}]}], ")"}], "/", 
       RowBox[{"\[Omega]0", "^", "2"}]}]}], ")"}], "*", "\[CapitalGamma]", 
    "*", 
    RowBox[{"gH", "[", 
     RowBox[{"\[Omega]", ",", "\[Omega]0", ",", "\[CapitalGamma]"}], 
     "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8841079095717983`*^9, 3.884107918377709*^9}, {
   3.884108476926597*^9, 3.884108535144011*^9}, {3.884108893523288*^9, 
   3.884108920973402*^9}, 3.8841094783440866`*^9},
 CellLabel->"In[24]:=",ExpressionUUID->"374aea86-5cc7-47d4-988d-d00c5216ec28"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Sigma]", "[", 
  RowBox[{"\[Omega]", ",", "\[Omega]0", ",", "\[CapitalGamma]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.884108923716364*^9, 3.884108947622177*^9}, {
  3.884109458302882*^9, 3.884109458717493*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"4cc6f68a-66ff-482d-aae0-241aa38b9a58"],

Cell[BoxData[
 FractionBox[
  RowBox[{"3", " ", 
   SuperscriptBox["c", "2"], " ", "\[Pi]", " ", 
   SuperscriptBox["\[CapitalGamma]", "2"]}], 
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      SuperscriptBox["\[CapitalGamma]", "2"], "4"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"\[Omega]", "-", "\[Omega]0"}], ")"}], "2"]}], ")"}], " ", 
   SuperscriptBox["\[Omega]0", "2"]}]]], "Output",
 CellChangeTimes->{{3.884108942729363*^9, 3.884108947889337*^9}, 
   3.884109459062763*^9, 3.8841260539845805`*^9, 3.884126232286831*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"5a60d375-3d59-437c-ac5c-4642ad7e1f83"]
}, Open  ]],

Cell[TextData[{
 "Note the factor of 3 in the equation above. In a more general case, this \
factor can take values between 0 and 3, as it is given by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["g", "2"], "/", 
    SubscriptBox["g", "1"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "99429b8c-a180-4763-a320-165de097d491"],
 "the ratio of the degeneracy levels. For alkali atoms, the D2 transition is \
s-p, and the ratio is indeed 3. "
}], "Text",
 CellChangeTimes->{{3.884109463137115*^9, 3.884109568304636*^9}, {
  3.884109619759943*^9, 
  3.8841096206068153`*^9}},ExpressionUUID->"d2234b82-a7dc-4de9-90f0-\
8615b845a2c7"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"RESONANCE", " ", "ABSORPTION", " ", "CROSS", " ", "SECTION"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.884093946697592*^9, 3.884093957149055*^9}, {
  3.8841293209221706`*^9, 
  3.884129334192667*^9}},ExpressionUUID->"e9395da8-4b31-4154-8013-\
5b058d29500b"],

Cell["The absorption cross-section peaks on resonance: ", "Text",
 CellChangeTimes->{{3.884109637216099*^9, 
  3.884109653696301*^9}},ExpressionUUID->"7b33dece-5ee1-4de0-9b06-\
cfe291fb9a8f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Sigma]0", "=", 
  RowBox[{"\[Sigma]", "[", 
   RowBox[{"\[Omega]0", ",", "\[Omega]0", ",", "\[CapitalGamma]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.884109862707192*^9, 3.884109872508654*^9}, {
  3.8841301695238223`*^9, 3.884130170426897*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"aa6c94ce-e11a-4e28-8d56-3fceb3542f59"],

Cell[BoxData[
 FractionBox[
  RowBox[{"6", " ", 
   SuperscriptBox["c", "2"], " ", "\[Pi]"}], 
  SuperscriptBox["\[Omega]0", "2"]]], "Output",
 CellChangeTimes->{3.884109872870276*^9, 3.884126061948369*^9, 
  3.8841301707455673`*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"05b8807f-2008-4573-b696-3108fc6789da"]
}, Open  ]],

Cell["\<\
which is proportional to the square of the wavelength of the transition:\
\>", "Text",
 CellChangeTimes->{{3.884109881595578*^9, 
  3.884109921878417*^9}},ExpressionUUID->"7b1e35e5-1434-4780-a9d5-\
84628a3fe1af"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Sigma]0", "/.", 
  RowBox[{"{", 
   RowBox[{"\[Omega]0", "->", 
    RowBox[{"2", "Pi", "*", 
     RowBox[{"c", "/", "\[Lambda]0"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.884109924530813*^9, 3.884109955758916*^9}, 
   3.8841301740985155`*^9},
 CellLabel->"In[52]:=",ExpressionUUID->"a7411458-1ccd-42ca-8c04-5cc80f312de7"],

Cell[BoxData[
 FractionBox[
  RowBox[{"3", " ", 
   SuperscriptBox["\[Lambda]0", "2"]}], 
  RowBox[{"2", " ", "\[Pi]"}]]], "Output",
 CellChangeTimes->{3.884109956911428*^9, 3.8841260631755695`*^9, 
  3.8841301816921*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"92232c54-e344-426d-a62e-f9efe9ec487a"]
}, Open  ]],

Cell["\<\
One thing to note from this is that the cross-section of atoms in photon-atom \
interaction can be much larger than the size of the atom. One could say that \
the \[OpenCurlyDoubleQuote]collisions\[CloseCurlyDoubleQuote] between atoms \
and photons have a large resonant enhancement. \
\>", "Text",
 CellChangeTimes->{{3.884109992094775*^9, 
  3.88411005823243*^9}},ExpressionUUID->"486e26f8-7191-4e34-a884-\
ee12ed50dd6d"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"SATURATION", " ", "INTENSITY"}], "*)"}]], "Input",
 CellChangeTimes->{{3.8840939589355793`*^9, 
  3.8840939630786667`*^9}},ExpressionUUID->"7e6d229e-a5b0-460b-9935-\
9eab45f58ad9"],

Cell[TextData[{
 "In order to quantity the amount of saturation, we return to the equation:\n\
\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SubscriptBox["N", "1"]}], TraditionalForm]],ExpressionUUID->
  "664444ef-0d29-4aee-a850-bfe9006845f7"],
 " - ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", "2"], TraditionalForm]],ExpressionUUID->
  "3fb90807-35f3-4e8b-b59c-092c75a4d74c"],
 ") \[Sigma](\[Omega]) I(\[Omega]) = ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", "2"], TraditionalForm]],ExpressionUUID->
  "1215b1cf-b618-4db4-bc68-6db91e3de39e"],
 " \[HBar]\[Omega] \[CapitalGamma]\n\nwhich after calling \[Sigma](\[Omega]) \
I(\[Omega])/\[HBar]\[Omega] \[CapitalGamma] = r and assuming ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["N", "1"], "+", 
      SubscriptBox["N", "2"]}], "=", 
     RowBox[{"N", "=", "1"}]}], ",", " ", 
    RowBox[{"we", " ", "have"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "0b691369-f050-4786-bf63-dbeeb98e1621"],
 "\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SubscriptBox["N", "1"]}], TraditionalForm]],ExpressionUUID->
  "96f08a71-15fa-4266-a2f9-ac8107a9f9fb"],
 " - ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", "2"], TraditionalForm]],ExpressionUUID->
  "5b7e0201-c44f-4dbe-8fb4-723b98fd8e47"],
 ") r = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["N", "2"], " "}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "58e3ee19-7232-4fd6-b59a-9adadc7ac713"],
 " ------> ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["N", "2"], "/", 
     SubscriptBox["N", "1"]}], "="}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "f57db765-5b70-4100-a8a4-41f051634dc3"],
 " r / (r+1) \n\nSolving for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["N", "2"], " "}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "e8aa02fb-9f5f-4dcc-a7bb-7c990b05f8fe"],
 "using ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["N", "1"], "+", 
    SubscriptBox["N", "2"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "64d13296-65ae-4f61-adf6-67466fc730f8"],
 " = N = 1 gives "
}], "Text",
 CellChangeTimes->{{3.8841108054417257`*^9, 3.8841108662735577`*^9}, {
   3.884110901334291*^9, 3.884110978549307*^9}, 3.884126238966981*^9, {
   3.8841263806820645`*^9, 3.8841264279066052`*^9}, {3.8841271403199368`*^9, 
   3.8841271514352455`*^9}, {3.884127234778343*^9, 3.884127237219323*^9}, {
   3.88412728590438*^9, 3.8841273611679306`*^9}, {3.884127405032251*^9, 
   3.8841274899030423`*^9}},ExpressionUUID->"c755355b-fb66-4385-8035-\
517b641fe2c9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"N2", "/", 
      RowBox[{"(", 
       RowBox[{"1", "-", "N2"}], ")"}]}], "==", 
     RowBox[{"r", "/", 
      RowBox[{"(", 
       RowBox[{"r", "+", "1"}], ")"}]}]}], ",", "N2"}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.88412749651396*^9, 3.8841275580685396`*^9}, {
  3.88412760588171*^9, 3.8841276078801556`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"752a21ad-25a6-45f7-bd00-e6b0f9466465"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"N2", "\[Rule]", 
    FractionBox["r", 
     RowBox[{"1", "+", 
      RowBox[{"2", " ", "r"}]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.8841275494765263`*^9, 3.884127558273257*^9}, 
   3.8841276081589065`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"f343ede8-a2c9-4648-99c8-45b10855ae18"]
}, Open  ]],

Cell[TextData[{
 "We define the saturation parameter as \n\ns = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"I", "(", "\[Omega]", ")"}], "/", 
     RowBox[{
      SubscriptBox["I", "sat"], "(", "\[Omega]", ")"}]}], "=", 
    RowBox[{
     RowBox[{"2", "r"}], "=", 
     RowBox[{"2", 
      RowBox[{"\[Sigma]", "(", "\[Omega]", ")"}], " ", 
      RowBox[{
       RowBox[{"I", "(", "\[Omega]", ")"}], "/", "\[HBar]\[Omega]"}], 
      "\[CapitalGamma]", " "}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "eca08974-1571-4c4f-acff-006e33ec8faa"],
 " = I(\[Omega]) * (2\[Sigma](\[Omega])/\[HBar]\[Omega]\[CapitalGamma])"
}], "Text",
 CellChangeTimes->{{3.8841276272346888`*^9, 3.884127635294185*^9}, {
  3.8841276709207344`*^9, 3.8841278010313163`*^9}, {3.884128938777836*^9, 
  3.8841289398173127`*^9}},ExpressionUUID->"192bd5de-3818-4744-be0d-\
3207cfcb8203"],

Cell[BoxData[
 RowBox[{
  RowBox[{"s", "[", "\[Omega]_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Intensity", "[", "\[Omega]", "]"}], "*", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", 
      RowBox[{"\[Sigma]", "[", 
       RowBox[{"\[Omega]", ",", "\[Omega]0", ",", "\[CapitalGamma]"}], 
       "]"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"\[HBar]", "*", "\[Omega]", "*", "\[CapitalGamma]"}], 
     ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.884128941835786*^9, 3.8841289931702952`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"4a87ff97-dfd0-4d22-8a8c-13f2024fe5d0"],

Cell["\<\
From here, one can define the saturation intensity as a function of the \
frequency of the driving field:\
\>", "Text",
 CellChangeTimes->{{3.8841289998678875`*^9, 
  3.8841290441208076`*^9}},ExpressionUUID->"e08beac2-66a6-47d3-8d81-\
47cfbe163c4a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ISat", "[", 
   RowBox[{"\[Omega]_", ",", "\[Omega]0_", ",", "\[CapitalGamma]_"}], "]"}], ":=", 
  RowBox[{"\[HBar]", "*", "\[Omega]", "*", 
   RowBox[{"\[CapitalGamma]", "/", 
    RowBox[{"(", 
     RowBox[{"2", "*", 
      RowBox[{"\[Sigma]", "[", 
       RowBox[{"\[Omega]", ",", "\[Omega]0", ",", "\[CapitalGamma]"}], 
       "]"}]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8841278047787457`*^9, 3.8841278870729175`*^9}, {
  3.884127956928458*^9, 3.884127981288988*^9}, {3.8841285082984324`*^9, 
  3.8841285102254624`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"112c7005-ac89-471a-954e-13914b5156e0"],

Cell[TextData[{
 "The saturation intensity ",
 StyleBox["minimizes",
  FontWeight->"Bold"],
 " on resonance. This value is often referred to as ",
 StyleBox["the saturation intensity",
  FontWeight->"Bold"],
 ":"
}], "Text",
 CellChangeTimes->{{3.8841280582986774`*^9, 3.8841280664890165`*^9}, {
   3.884128110657201*^9, 3.8841281229675937`*^9}, {3.8841281535526323`*^9, 
   3.8841281608236275`*^9}, 
   3.884128511185336*^9},ExpressionUUID->"07435b89-6121-485e-bceb-\
55a1a443e5a5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ISatMin", "=", 
  RowBox[{
   RowBox[{"ISat", "[", 
    RowBox[{"\[Omega]0", ",", "\[Omega]0", ",", "\[CapitalGamma]"}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{"\[Omega]0", "->", 
     RowBox[{"2", "*", "Pi", "*", 
      RowBox[{"c", "/", "\[Lambda]0"}]}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.8841281670591106`*^9, 3.8841282414248977`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"cca3e35f-1c36-49bb-8393-d9f003b591a8"],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", "c", " ", 
   SuperscriptBox["\[Pi]", "2"], " ", "\[CapitalGamma]", " ", "\[HBar]"}], 
  RowBox[{"3", " ", 
   SuperscriptBox["\[Lambda]0", "3"]}]]], "Output",
 CellChangeTimes->{3.8841281914571886`*^9, 3.8841282422175426`*^9, 
  3.884128513640901*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"9ffd04ee-cda3-480d-9b1c-83d021a764b8"]
}, Open  ]],

Cell[TextData[{
 "Alternatively, we could also define the saturation intensity from the \
steady-state solution of the Bloch equations. Knowing that\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["N", "1"], "-", 
     SubscriptBox["N", "2"]}], "=", 
    RowBox[{
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", "r"}]}], ")"}]}], "=", "w"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "1d829e07-c3fe-4e1b-b3eb-a9df3771ce79"],
 "\n\nwe obtain another definition of the saturation parameter in terms of \
the Rabi frequency and linewidth of the transition: \n\ns = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"2", "r"}], "=", 
    RowBox[{
     RowBox[{"I", "/", 
      SubscriptBox["I", "sat"]}], "=", 
     RowBox[{"2", 
      RowBox[{
       RowBox[{"\[CapitalOmega]", "^", "2"}], "/", 
       RowBox[{"\[CapitalGamma]", "^", "2"}]}]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "e2b5282b-290d-4532-befd-44c4b2c3b73b"]
}], "Text",
 CellChangeTimes->{{3.8841285238514767`*^9, 3.884128560215984*^9}, {
  3.884128685025227*^9, 3.8841286967875967`*^9}, {3.8841287351476603`*^9, 
  3.884128759675785*^9}, {3.884128793915712*^9, 3.884128911065714*^9}, {
  3.8841299309726863`*^9, 
  3.8841299312206945`*^9}},ExpressionUUID->"0c8ac9ec-2792-4caa-a2a1-\
40a8c5285e7d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s", "=", 
  RowBox[{"2", "*", 
   RowBox[{
    RowBox[{"\[Omega]R", "^", "2"}], "/", 
    RowBox[{"\[CapitalGamma]", "^", "2"}]}]}]}]], "Input",
 CellChangeTimes->{{3.884129143308184*^9, 3.884129188443043*^9}, {
  3.8841299443306923`*^9, 3.8841299476386375`*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"4be0fcda-0d2a-49f4-b8e0-023aae54ea31"],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", 
   SuperscriptBox["\[Omega]R", "2"]}], 
  SuperscriptBox["\[CapitalGamma]", "2"]]], "Output",
 CellChangeTimes->{{3.884129184482065*^9, 3.8841291887115526`*^9}, 
   3.8841299483715487`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"27df8972-8455-44c2-961d-46a3a936ba33"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"POWER", " ", "BROADENING"}], "*)"}]], "Input",
 CellChangeTimes->{{3.884093965207849*^9, 3.8840939711551037`*^9}, {
  3.884127324512045*^9, 
  3.884127325192438*^9}},ExpressionUUID->"60082d3c-cfdf-4b0f-aadd-\
4bf2427a0f13"],

Cell["\<\
Suppose we are doing absorption imaging of atoms. What we observe is actually \
the attenuation of the imaging light due to the atoms. What we measure is \
proportional to the quantity w*\[Sigma](\[Omega]), which has the form:\
\>", "Text",
 CellChangeTimes->{{3.884129555508363*^9, 
  3.8841296529944887`*^9}},ExpressionUUID->"67c6b10c-f31c-4dcb-92b1-\
1874371eab05"],

Cell[BoxData[
 RowBox[{
  RowBox[{"wSS", "=", 
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"s", "*", 
       RowBox[{
        RowBox[{"\[CapitalGamma]", "^", "2"}], "/", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[CapitalGamma]", "2"], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"\[Omega]", "-", "\[Omega]0"}], ")"}], "2"]}]}], 
         ")"}]}]}]}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8841296540840244`*^9, 3.8841296594904766`*^9}, {
   3.884129694658468*^9, 3.8841297000905285`*^9}, {3.8841299674192257`*^9, 
   3.8841299831867313`*^9}, 3.884130369620102*^9, 3.884130450491819*^9, 
   3.8841304886986985`*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"0903e2a9-ef32-416f-bf56-75d19121efc7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]", "[", "\[Omega]", "]"}], ":=", 
   RowBox[{"\[Sigma]0", "*", 
    RowBox[{
     RowBox[{"\[CapitalGamma]", "^", "2"}], "/", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[CapitalGamma]", "2"], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Omega]", "-", "\[Omega]0"}], ")"}], "2"]}]}], 
      ")"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8841297124437785`*^9, 3.884129737428853*^9}, {
   3.884130011883116*^9, 3.884130031971815*^9}, 3.884130103339863*^9, {
   3.8841301353145123`*^9, 3.884130155714156*^9}, {3.8841301861546717`*^9, 
   3.884130257018427*^9}, {3.8841302934118133`*^9, 3.8841303489305787`*^9}, {
   3.8841304973869867`*^9, 3.8841304976587067`*^9}, 3.884130529979608*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"51228e62-fa9b-4e11-b957-111ce8a9f02f"],

Cell[TextData[{
 "where in the definition for w in steady state we have used s = ",
 Cell[BoxData[
  FormBox[
   RowBox[{"I", "/", 
    SubscriptBox["I", "sat"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "d1e5de03-1776-4ef0-99bd-4d59a5e08b2d"],
 " with ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "sat"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "4fbc1f6b-dfc3-4c49-a87c-3114eda8e09b"],
 " being ",
 StyleBox["the ",
  FontWeight->"Bold"],
 "saturation intensity, and rewriting ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"I", "(", "\[Omega]", ")"}], "/", 
    RowBox[{
     SubscriptBox["I", "sat"], "(", "\[Omega]", ")"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "d0657d78-ca61-4b02-bae7-f129822919c8"],
 " as ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"I", "(", "\[Omega]", ")"}], "/", 
    RowBox[{"[", " ", 
     SubscriptBox["I", "sat"]}]}], TraditionalForm]],ExpressionUUID->
  "3640d751-e229-42bd-ac5d-fe35b89df0e9"],
 "*\[Sigma]0/\[Sigma](\[Omega]) ]. With these, we get:"
}], "Text",
 CellChangeTimes->{{3.8841305314132586`*^9, 
  3.8841307058113527`*^9}},ExpressionUUID->"a2d33866-6a7a-4f43-bfab-\
a6c3677bbbce"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"wSS", "*", 
   RowBox[{"\[Sigma]", "[", "\[Omega]", "]"}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.88413035554069*^9, 3.884130360057577*^9}, {
  3.884130493787258*^9, 3.884130495654961*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"5bbe0573-d142-438a-9790-a2e4380e2b3e"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[CapitalGamma]", "2"], " ", "\[Sigma]0"}], 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", "s"}], ")"}], " ", 
    SuperscriptBox["\[CapitalGamma]", "2"]}], "+", 
   RowBox[{"4", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"\[Omega]", "-", "\[Omega]0"}], ")"}], "2"]}]}]]], "Output",
 CellChangeTimes->{{3.884130360482087*^9, 3.8841303878197174`*^9}, {
  3.884130490660189*^9, 3.8841305000103273`*^9}},
 CellLabel->"Out[9]=",ExpressionUUID->"0cc8bbd9-0432-4677-bfd0-826b2316297b"]
}, Open  ]],

Cell["which is a Lorentzian with full-width at half-maximum:", "Text",
 CellChangeTimes->{{3.8841307097897167`*^9, 
  3.884130744490988*^9}},ExpressionUUID->"b1a5e419-9979-4fce-8ff4-\
7610f21ff562"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalDelta]wFWHM", "=", 
   RowBox[{"\[CapitalGamma]", "*", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"1", "+", "s"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.884130752573439*^9, 3.8841307754907403`*^9}, {
  3.8841308250764303`*^9, 
  3.884130828427503*^9}},ExpressionUUID->"8a89bc5e-1133-467e-8d16-\
a94cb11d2bbe"],

Cell[TextData[{
 "We see that the lineshape is broadened as the light intensity approaches \
and exceeds the saturation intensity ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "sat"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "3be802db-803a-4c6a-9864-b7eea3b1ac57"],
 ". This is call ",
 StyleBox["power broadening",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.884130877685471*^9, 
  3.884130931483534*^9}},ExpressionUUID->"237e7b74-be15-4176-9183-\
d5c5521e26b0"],

Cell[TextData[StyleBox["AC-Stark Effect and Light Shift",
 FontSize->18,
 FontWeight->"Bold",
 FontColor->RGBColor[
  0.0938124666208896, 0.46669718471046007`, 0.7126268406195163]]], "Text",
 CellChangeTimes->{{3.884094061589861*^9, 3.884094068826573*^9}, {
  3.884106027946604*^9, 
  3.8841060348647118`*^9}},ExpressionUUID->"dfd009cf-2cb1-4ed5-a588-\
96fb04975fcd"],

Cell["\<\
In the rotation frame, the Hamiltonian in the presence of an oscillatory \
driving field is given by \
\>", "Text",
 CellChangeTimes->{{3.884135061120558*^9, 
  3.88413508375657*^9}},ExpressionUUID->"11dcf6b8-fab7-45cd-888c-\
4da8fc9c72da"],

Cell[TextData[StyleBox["DC Stark Effect",
 FontSize->18,
 FontWeight->"Bold",
 FontColor->RGBColor[
  0.0938124666208896, 0.46669718471046007`, 0.7126268406195163]]], "Text",
 CellChangeTimes->{{3.884094075770163*^9, 3.884094077963488*^9}, {
  3.884131258858365*^9, 
  3.8841312655223703`*^9}},ExpressionUUID->"381d922c-4b3e-4cc4-a0a9-\
588c64853dc2"]
}, Open  ]],

Cell["Doppler-Free Spectroscopy", "Subsection",
 CellChangeTimes->{{3.8840937020796423`*^9, 
  3.884093708086186*^9}},ExpressionUUID->"90637a7b-a405-4c95-bdf7-\
03189285a13e"],

Cell["Laser Cooling and Trapping", "Subsection",
 CellChangeTimes->{{3.884093711746416*^9, 
  3.884093718156609*^9}},ExpressionUUID->"676c6cfb-926c-481e-87de-\
4f271e14fd80"],

Cell["Magnetic Trapping", "Subsection",
 CellChangeTimes->{{3.8840937225419064`*^9, 
  3.8840937250575733`*^9}},ExpressionUUID->"3b33dc22-8219-4d6f-be6b-\
6d382db7c512"],

Cell["Evaporative Cooling", "Subsection",
 CellChangeTimes->{{3.884093728146826*^9, 
  3.884093730391189*^9}},ExpressionUUID->"135cb7d7-b3f7-453c-8969-\
3cffa286ac0f"],

Cell["Bose-Einstein Condensation", "Subsection",
 CellChangeTimes->{{3.8840937329516172`*^9, 
  3.884093735801517*^9}},ExpressionUUID->"75f93ef8-4e51-4018-bb29-\
bd05f72fc5ea"],

Cell["Degenerate Fermi Gas", "Subsection",
 CellChangeTimes->{{3.884093738125545*^9, 
  3.884093741816811*^9}},ExpressionUUID->"8eb2ccc5-0e7b-415d-a80f-\
a65facbdea17"]
}, Open  ]]
},
WindowSize->{1440., 777.75},
WindowMargins->{{-6, Automatic}, {Automatic, -6}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"a85ed9d4-e6a6-43c2-b8f3-f116dc134784"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 376, 10, 159, "Section",ExpressionUUID->"9f06dff5-46c8-4bf4-b06d-a15937dd47cb"],
Cell[959, 34, 170, 3, 54, "Subsection",ExpressionUUID->"610b0b25-317c-4e62-b329-2f43aa82c17f"],
Cell[1132, 39, 165, 3, 38, "Subsection",ExpressionUUID->"c34500a0-60ab-47c0-979b-e8d4e72f5fde"],
Cell[1300, 44, 159, 3, 38, "Subsection",ExpressionUUID->"4603ea26-a860-4a21-9d80-f3334fdf470f"],
Cell[1462, 49, 167, 3, 38, "Subsection",ExpressionUUID->"6ad49400-1219-46e1-a09c-530011fed19b"],
Cell[1632, 54, 167, 3, 38, "Subsection",ExpressionUUID->"b2d6a9f3-bd4b-4e02-a365-a031d3d748d9"],
Cell[CellGroupData[{
Cell[1824, 61, 209, 3, 38, "Subsection",ExpressionUUID->"ad3866f7-df3c-4746-9561-401534c08338"],
Cell[2036, 66, 317, 7, 38, "Text",ExpressionUUID->"ec085709-c658-485a-9c14-ef8930f7a0db"],
Cell[2356, 75, 417, 8, 35, "Text",ExpressionUUID->"7d840f78-2453-419a-8262-b6ae6fa7ee39"],
Cell[2776, 85, 342, 8, 28, "Input",ExpressionUUID->"43d9cec8-0d66-4e54-b182-4ae9ab07dd75"],
Cell[3121, 95, 360, 8, 28, "Input",ExpressionUUID->"009b07c0-c819-49de-8385-bfa4735d443f"],
Cell[3484, 105, 749, 21, 28, "Input",ExpressionUUID->"2cbb3233-351d-49c6-85d9-cae825768993"],
Cell[CellGroupData[{
Cell[4258, 130, 758, 20, 28, "Input",ExpressionUUID->"3fdf5afe-c570-4239-ac33-7b1a7de79c3d"],
Cell[5019, 152, 1879, 37, 351, "Output",ExpressionUUID->"9296da2f-33ee-4e1c-a64d-0f24efee7740"],
Cell[6901, 191, 635, 11, 28, "Message",ExpressionUUID->"71f7307c-c9fe-4cc4-963a-c4b287fb05ed"]
}, Open  ]],
Cell[7551, 205, 346, 8, 38, "Text",ExpressionUUID->"76252d72-7881-4629-b436-c491c5979a00"],
Cell[7900, 215, 848, 17, 58, "Text",ExpressionUUID->"9ed8b2b3-d3a4-4a5c-933e-13cd7a5bc3e6"],
Cell[8751, 234, 328, 6, 28, "Input",ExpressionUUID->"5d87bb4c-7f20-489e-a2fd-50fbf4b91a71"],
Cell[9082, 242, 328, 7, 28, "Input",ExpressionUUID->"df76251b-2bc5-4b5e-97e3-b093ee7cfd24"],
Cell[9413, 251, 256, 6, 28, "Input",ExpressionUUID->"5080ef65-ec1e-4841-942d-1b39d0da5254"],
Cell[9672, 259, 690, 18, 28, "Input",ExpressionUUID->"78e0cf12-93f0-42da-8355-87ac4fa163e1"],
Cell[CellGroupData[{
Cell[10387, 281, 325, 6, 28, "Input",ExpressionUUID->"a6015e57-3976-415a-b1dc-1d52ba4b24ce"],
Cell[10715, 289, 1175, 35, 76, "Output",ExpressionUUID->"cec576ad-82ec-4e6e-91dc-3f2a6cf1904a"]
}, Open  ]],
Cell[11905, 327, 1487, 39, 127, "Text",ExpressionUUID->"9f44d480-46f8-45c7-abe2-b7fcb32374d0"],
Cell[13395, 368, 476, 11, 48, "Input",ExpressionUUID->"39013ba8-deb9-42f4-978f-e158fe897e0b"],
Cell[13874, 381, 412, 8, 35, "Text",ExpressionUUID->"534a35f4-d23f-41bf-bcf6-25445b3a9111"],
Cell[14289, 391, 585, 15, 28, "Input",ExpressionUUID->"54052830-23f4-40bc-9f7f-825e0c821d79"],
Cell[CellGroupData[{
Cell[14899, 410, 280, 5, 28, "Input",ExpressionUUID->"c0fe6f0b-3983-4abc-a53e-d18b6b4d79f5"],
Cell[15182, 417, 987, 30, 77, "Output",ExpressionUUID->"42737527-d40e-42d8-9bf5-350ab7105800"]
}, Open  ]],
Cell[16184, 450, 259, 7, 28, "Input",ExpressionUUID->"291f5728-7b98-4a06-837c-350c4f3af99e"],
Cell[16446, 459, 407, 8, 58, "Text",ExpressionUUID->"3461381a-6209-473b-a176-83ff8b3e80db"],
Cell[CellGroupData[{
Cell[16878, 471, 417, 10, 28, "Input",ExpressionUUID->"f64e5424-858f-400e-a795-b0b771ba8820"],
Cell[17298, 483, 298, 4, 32, "Output",ExpressionUUID->"70d081e1-2387-4daa-bc46-18c66e00d9ea"]
}, Open  ]],
Cell[17611, 490, 488, 9, 35, "Text",ExpressionUUID->"4ada7085-972f-4edd-9080-c5bf3b9dcc16"],
Cell[18102, 501, 334, 7, 28, "Input",ExpressionUUID->"659471ca-d2a2-4806-b22e-136dc546dd81"],
Cell[CellGroupData[{
Cell[18461, 512, 273, 6, 28, "Input",ExpressionUUID->"b8ea1bbc-1da4-4540-9e9c-f50bd43cb940"],
Cell[18737, 520, 762, 23, 77, "Output",ExpressionUUID->"e4d0e4aa-1df9-4a22-b8c2-69e9be0fd5a6"]
}, Open  ]],
Cell[19514, 546, 595, 11, 58, "Text",ExpressionUUID->"c59a51a5-4f2d-469b-bf4b-0369e36c949a"],
Cell[20112, 559, 209, 5, 28, "Input",ExpressionUUID->"9699a241-80d5-4d5b-94b5-03a47aeab882"],
Cell[20324, 566, 5126, 137, 219, "Input",ExpressionUUID->"6f396ff4-71a7-4582-b9b7-f45dbb68ffa5"],
Cell[CellGroupData[{
Cell[25475, 707, 279, 5, 28, "Input",ExpressionUUID->"141917ee-e880-4687-a85d-7cbcf966b0e7"],
Cell[25757, 714, 101425, 1688, 367, 2489, 65, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"17cbfbd1-063a-4ec9-b48c-b96acf67ba2a"]
}, Open  ]],
Cell[127197, 2405, 352, 8, 38, "Text",ExpressionUUID->"806e2e35-7441-4544-b913-1013593d11ab"],
Cell[127552, 2415, 366, 8, 38, "Text",ExpressionUUID->"1570c2de-4557-403b-8a82-35700dd3fd6a"],
Cell[127921, 2425, 253, 6, 28, "Input",ExpressionUUID->"07dad649-11fd-40e8-84cd-77543a970c5b"],
Cell[128177, 2433, 265, 7, 28, "Input",ExpressionUUID->"ad3974dc-86cf-4a09-ad8a-4fba3f323121"],
Cell[128445, 2442, 564, 10, 58, "Text",ExpressionUUID->"0e2a1282-66b2-4a27-b31e-0808b0e1df71"],
Cell[129012, 2454, 323, 7, 38, "Text",ExpressionUUID->"5c78fb22-06b7-4ccf-a699-0ac6131c985e"],
Cell[129338, 2463, 186, 3, 35, "Text",ExpressionUUID->"d52e7283-b9a5-42ff-9e1a-bde15cac9474"],
Cell[129527, 2468, 934, 26, 28, "Input",ExpressionUUID->"3ddd1bec-670f-40f9-b66c-e35eafdd833a"],
Cell[CellGroupData[{
Cell[130486, 2498, 339, 6, 28, "Input",ExpressionUUID->"94781488-c3cf-43af-8b2c-678a06ec83b2"],
Cell[130828, 2506, 1339, 42, 93, "Output",ExpressionUUID->"1d56a9ac-19a2-4e55-a738-345b441e9914"]
}, Open  ]],
Cell[132182, 2551, 374, 9, 28, "Input",ExpressionUUID->"4fd95796-5abc-47ae-92aa-e44253d6415c"],
Cell[132559, 2562, 367, 7, 35, "Text",ExpressionUUID->"ee9099ac-8ef4-45e2-abf6-d775eff6395f"],
Cell[132929, 2571, 1029, 28, 28, "Input",ExpressionUUID->"f2efcf8d-8819-40e3-a0da-4d77807dd40c"],
Cell[133961, 2601, 290, 8, 28, "Input",ExpressionUUID->"b396641d-ea0c-4bc1-bdaf-34f6133e0b01"],
Cell[134254, 2611, 467, 13, 35, "Text",ExpressionUUID->"e18007c5-3ae4-4bd6-bc4b-43e0a150ff99"],
Cell[134724, 2626, 834, 20, 28, "Input",ExpressionUUID->"04dd37a1-9d8f-4b87-9ec4-17cd9330af1f"],
Cell[CellGroupData[{
Cell[135583, 2650, 284, 5, 28, "Input",ExpressionUUID->"5e08c30d-5955-46e2-b704-068e3d580648"],
Cell[135870, 2657, 488, 11, 52, "Output",ExpressionUUID->"4c0076e3-01ed-46cb-bfcb-935ea747acb2"]
}, Open  ]],
Cell[136373, 2671, 323, 7, 35, "Text",ExpressionUUID->"f1cdafc0-b6a2-4bca-9fde-0ef0d5f3aef3"],
Cell[CellGroupData[{
Cell[136721, 2682, 408, 9, 28, "Input",ExpressionUUID->"939debd9-056a-4961-bb04-161ceacc77ef"],
Cell[137132, 2693, 193, 3, 48, "Output",ExpressionUUID->"3e9aa4c5-322e-4525-bff4-d81e63789c02"]
}, Open  ]],
Cell[137340, 2699, 418, 8, 38, "Text",ExpressionUUID->"0304f5dd-21e8-47fe-ab3e-ea1de07a66d5"],
Cell[137761, 2709, 3628, 94, 311, "Text",ExpressionUUID->"d4b52ace-1493-4bd9-82ba-fa69758a0d69"],
Cell[CellGroupData[{
Cell[141414, 2807, 818, 20, 28, "Input",ExpressionUUID->"390e3858-7a44-42bd-9dd5-24c24ced5375"],
Cell[142235, 2829, 597, 14, 54, "Output",ExpressionUUID->"695c0151-f3d6-4c7b-b99a-79e363b2d33a"]
}, Open  ]],
Cell[142847, 2846, 1574, 27, 196, "Text",ExpressionUUID->"f12f66fc-36b0-419c-88b2-bc6671ba5002"],
Cell[144424, 2875, 792, 23, 28, "Input",ExpressionUUID->"92ff335d-04a2-4dae-b906-082631ff0bbc"],
Cell[145219, 2900, 833, 22, 28, "Input",ExpressionUUID->"374aea86-5cc7-47d4-988d-d00c5216ec28"],
Cell[CellGroupData[{
Cell[146077, 2926, 320, 6, 28, "Input",ExpressionUUID->"4cc6f68a-66ff-482d-aae0-241aa38b9a58"],
Cell[146400, 2934, 654, 16, 64, "Output",ExpressionUUID->"5a60d375-3d59-437c-ac5c-4642ad7e1f83"]
}, Open  ]],
Cell[147069, 2953, 666, 16, 58, "Text",ExpressionUUID->"d2234b82-a7dc-4de9-90f0-8615b845a2c7"],
Cell[147738, 2971, 301, 7, 28, "Input",ExpressionUUID->"e9395da8-4b31-4154-8013-5b058d29500b"],
Cell[148042, 2980, 191, 3, 35, "Text",ExpressionUUID->"7b33dece-5ee1-4de0-9b06-cfe291fb9a8f"],
Cell[CellGroupData[{
Cell[148258, 2987, 356, 7, 28, "Input",ExpressionUUID->"aa6c94ce-e11a-4e28-8d56-3fceb3542f59"],
Cell[148617, 2996, 312, 7, 52, "Output",ExpressionUUID->"05b8807f-2008-4573-b696-3108fc6789da"]
}, Open  ]],
Cell[148944, 3006, 222, 5, 35, "Text",ExpressionUUID->"7b1e35e5-1434-4780-a9d5-84628a3fe1af"],
Cell[CellGroupData[{
Cell[149191, 3015, 353, 8, 28, "Input",ExpressionUUID->"a7411458-1ccd-42ca-8c04-5cc80f312de7"],
Cell[149547, 3025, 300, 7, 51, "Output",ExpressionUUID->"92232c54-e344-426d-a62e-f9efe9ec487a"]
}, Open  ]],
Cell[149862, 3035, 433, 8, 58, "Text",ExpressionUUID->"486e26f8-7191-4e34-a884-ee12ed50dd6d"],
Cell[150298, 3045, 221, 5, 28, "Input",ExpressionUUID->"7e6d229e-a5b0-460b-9935-9eab45f58ad9"],
Cell[150522, 3052, 2691, 81, 219, "Text",ExpressionUUID->"c755355b-fb66-4385-8035-517b641fe2c9"],
Cell[CellGroupData[{
Cell[153238, 3137, 507, 14, 28, "Input",ExpressionUUID->"752a21ad-25a6-45f7-bd00-e6b0f9466465"],
Cell[153748, 3153, 355, 9, 46, "Output",ExpressionUUID->"f343ede8-a2c9-4648-99c8-45b10855ae18"]
}, Open  ]],
Cell[154118, 3165, 907, 23, 81, "Text",ExpressionUUID->"192bd5de-3818-4744-be0d-3207cfcb8203"],
Cell[155028, 3190, 578, 15, 28, "Input",ExpressionUUID->"4a87ff97-dfd0-4d22-8a8c-13f2024fe5d0"],
Cell[155609, 3207, 259, 6, 35, "Text",ExpressionUUID->"e08beac2-66a6-47d3-8d81-47cfbe163c4a"],
Cell[155871, 3215, 647, 14, 28, "Input",ExpressionUUID->"112c7005-ac89-471a-954e-13914b5156e0"],
Cell[156521, 3231, 483, 13, 35, "Text",ExpressionUUID->"07435b89-6121-485e-bceb-55a1a443e5a5"],
Cell[CellGroupData[{
Cell[157029, 3248, 456, 10, 28, "Input",ExpressionUUID->"cca3e35f-1c36-49bb-8393-d9f003b591a8"],
Cell[157488, 3260, 379, 8, 51, "Output",ExpressionUUID->"9ffd04ee-cda3-480d-9b1c-83d021a764b8"]
}, Open  ]],
Cell[157882, 3271, 1396, 37, 168, "Text",ExpressionUUID->"0c8ac9ec-2792-4caa-a2a1-40a8c5285e7d"],
Cell[CellGroupData[{
Cell[159303, 3312, 366, 8, 28, "Input",ExpressionUUID->"4be0fcda-0d2a-49f4-b8e0-023aae54ea31"],
Cell[159672, 3322, 317, 7, 51, "Output",ExpressionUUID->"27df8972-8455-44c2-961d-46a3a936ba33"]
}, Open  ]],
Cell[160004, 3332, 264, 6, 28, "Input",ExpressionUUID->"60082d3c-cfdf-4b0f-aadd-4bf2427a0f13"],
Cell[160271, 3340, 378, 7, 35, "Text",ExpressionUUID->"67c6b10c-f31c-4dcb-92b1-1874371eab05"],
Cell[160652, 3349, 829, 21, 31, "Input",ExpressionUUID->"0903e2a9-ef32-416f-bf56-75d19121efc7"],
Cell[161484, 3372, 894, 20, 31, "Input",ExpressionUUID->"51228e62-fa9b-4e11-b957-111ce8a9f02f"],
Cell[162381, 3394, 1233, 38, 35, "Text",ExpressionUUID->"a2d33866-6a7a-4f43-bfab-a6c3677bbbce"],
Cell[CellGroupData[{
Cell[163639, 3436, 324, 7, 28, "Input",ExpressionUUID->"5bbe0573-d142-438a-9790-a2e4380e2b3e"],
Cell[163966, 3445, 571, 15, 53, "Output",ExpressionUUID->"0cc8bbd9-0432-4677-bfd0-826b2316297b"]
}, Open  ]],
Cell[164552, 3463, 198, 3, 35, "Text",ExpressionUUID->"b1a5e419-9979-4fce-8ff4-7610f21ff562"],
Cell[164753, 3468, 362, 9, 28, "Input",ExpressionUUID->"8a89bc5e-1133-467e-8d16-a94cb11d2bbe"],
Cell[165118, 3479, 512, 15, 35, "Text",ExpressionUUID->"237e7b74-be15-4176-9183-d5c5521e26b0"],
Cell[165633, 3496, 367, 8, 38, "Text",ExpressionUUID->"dfd009cf-2cb1-4ed5-a588-96fb04975fcd"],
Cell[166003, 3506, 250, 6, 35, "Text",ExpressionUUID->"11dcf6b8-fab7-45cd-888c-4da8fc9c72da"],
Cell[166256, 3514, 351, 8, 38, "Text",ExpressionUUID->"381d922c-4b3e-4cc4-a0a9-588c64853dc2"]
}, Open  ]],
Cell[166622, 3525, 175, 3, 54, "Subsection",ExpressionUUID->"90637a7b-a405-4c95-bdf7-03189285a13e"],
Cell[166800, 3530, 174, 3, 38, "Subsection",ExpressionUUID->"676c6cfb-926c-481e-87de-4f271e14fd80"],
Cell[166977, 3535, 169, 3, 38, "Subsection",ExpressionUUID->"3b33dc22-8219-4d6f-be6b-6d382db7c512"],
Cell[167149, 3540, 167, 3, 38, "Subsection",ExpressionUUID->"135cb7d7-b3f7-453c-8969-3cffa286ac0f"],
Cell[167319, 3545, 176, 3, 38, "Subsection",ExpressionUUID->"75f93ef8-4e51-4018-bb29-bd05f72fc5ea"],
Cell[167498, 3550, 168, 3, 38, "Subsection",ExpressionUUID->"8eb2ccc5-0e7b-415d-a80f-a65facbdea17"]
}, Open  ]]
}
]
*)

