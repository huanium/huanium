(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    286753,       6260]
NotebookOptionsPosition[    279887,       6025]
NotebookOutlinePosition[    280264,       6041]
CellTagsIndexPosition[    280221,       6038]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"U1", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"{", "0", "}"}]}], "}"}]}], ";", " ", 
  RowBox[{"D1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "0", "}"}], ",", 
     RowBox[{"{", "1", "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8012225104284554`*^9, 3.8012225994998565`*^9}, {
  3.80122267424518*^9, 3.801222699942787*^9}, {3.801223106813656*^9, 
  3.801223110836505*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"UU", " ", "=", " ", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"U1", ",", "U1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"UD", " ", "=", " ", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"U1", ",", "D1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DU", " ", "=", " ", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"D1", ",", "U1"}], "]"}]}], ";", 
  RowBox[{"DD", "=", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"D1", ",", "D1"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8012226425977697`*^9, 3.8012226492053185`*^9}, {
  3.801222727981835*^9, 3.801222802909745*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Ket", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{"KroneckerProduct", "[", 
   RowBox[{"x", ",", "y"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8012228548250914`*^9, 3.8012228649394207`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Ket", "[", 
    RowBox[{
     RowBox[{"U1", "+", 
      RowBox[{
       RowBox[{"E", "^", 
        RowBox[{"(", 
         RowBox[{"I", "*", "\[Beta]"}], ")"}]}], "*", "D1"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"E", "^", 
        RowBox[{"(", 
         RowBox[{"I", "*", "\[Beta]"}], ")"}]}], "*", "UU"}], " ", "+", " ", 
      RowBox[{
       RowBox[{"E", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "I"}], "*", "\[Beta]"}], ")"}]}], "*", "UD"}], " ", 
      "+", " ", 
      RowBox[{
       RowBox[{"E", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "I"}], "*", "\[Beta]"}], ")"}]}], "*", "DU"}], "+", 
      RowBox[{
       RowBox[{"E", "^", 
        RowBox[{"(", 
         RowBox[{"I", "*", "\[Beta]"}], ")"}]}], "*", "DD"}]}]}], "]"}], "+", 
   RowBox[{"Ket", "[", 
    RowBox[{
     RowBox[{"U1", "-", 
      RowBox[{
       RowBox[{"E", "^", 
        RowBox[{"(", 
         RowBox[{"I", "*", "\[Beta]"}], ")"}]}], "*", "D1"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"E", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "I"}], "*", "\[Beta]"}], ")"}]}], "*", "UU"}], " ", 
      "-", " ", 
      RowBox[{
       RowBox[{"E", "^", 
        RowBox[{"(", 
         RowBox[{"I", "*", "\[Beta]"}], ")"}]}], "*", "UD"}], " ", "-", " ", 
      RowBox[{
       RowBox[{"E", "^", 
        RowBox[{"(", 
         RowBox[{"I", "*", "\[Beta]"}], ")"}]}], "*", "DU"}], "+", 
      RowBox[{
       RowBox[{"E", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "I"}], "*", "\[Beta]"}], ")"}]}], "*", "DD"}]}]}], 
    "]"}]}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.801222896021859*^9, 3.8012229849728646`*^9}, {
  3.80122303330087*^9, 3.801223068869561*^9}, {3.8012231350609913`*^9, 
  3.8012231426286783`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Beta]"}]], "+", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "\[Beta]"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Beta]"}]], "-", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "\[Beta]"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Beta]"}]], "-", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "\[Beta]"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Beta]"}]], "+", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "\[Beta]"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Beta]"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", "+", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Beta]"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", "+", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Beta]"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Beta]"}]]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8012229860183954`*^9, 3.80122303400502*^9, 3.8012230747892165`*^9, {
   3.8012231168278675`*^9, 3.8012231430062876`*^9}, 3.802102025071351*^9, 
   3.8025333152258234`*^9, {3.802538126315319*^9, 3.8025381546599226`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Ps", " ", "=", " ", 
   RowBox[{"U1", " ", "+", " ", 
    RowBox[{
     RowBox[{"E", "^", 
      RowBox[{"(", 
       RowBox[{"I", "*", "\[Beta]"}], ")"}]}], "D1"}]}]}], ";", 
  RowBox[{"Mn", "=", 
   RowBox[{"U1", "-", 
    RowBox[{
     RowBox[{"E", "^", 
      RowBox[{"(", 
       RowBox[{"I", "*", "\[Beta]"}], ")"}]}], "D1"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8012329316013927`*^9, 3.801232986554068*^9}, {
  3.8012334026114583`*^9, 3.8012334514903903`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"PP", " ", "=", " ", 
   RowBox[{"Ket", "[", 
    RowBox[{"Ps", ",", "Ps"}], "]"}]}], ";", 
  RowBox[{"PM", " ", "=", " ", 
   RowBox[{"Ket", "[", 
    RowBox[{"Ps", ",", "Mn"}], "]"}]}], ";", 
  RowBox[{"MP", "=", 
   RowBox[{"Ket", "[", 
    RowBox[{"Mn", ",", "Ps"}], "]"}]}], ";", 
  RowBox[{"MM", "=", 
   RowBox[{"Ket", "[", 
    RowBox[{"Mn", ",", "Mn"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8012329918179135`*^9, 3.801233031921851*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Comb1", "=", 
   RowBox[{
    RowBox[{"Ket", "[", 
     RowBox[{"U1", ",", 
      RowBox[{"U1", "+", 
       RowBox[{
        RowBox[{"E", "^", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "*", "I", "*", "\[Beta]"}], ")"}]}], 
        "D1"}]}]}], "]"}], "+", 
    RowBox[{"Ket", "[", 
     RowBox[{"D1", ",", 
      RowBox[{"D1", "+", 
       RowBox[{
        RowBox[{"E", "^", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "*", "I", "*", "\[Beta]"}], ")"}]}], 
        "U1"}]}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Comb2", "=", 
   RowBox[{
    RowBox[{"Ket", "[", 
     RowBox[{"U1", ",", 
      RowBox[{"U1", "+", 
       RowBox[{
        RowBox[{"E", "^", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "*", "I", "*", "\[Beta]"}], ")"}]}], 
        "D1"}]}]}], "]"}], "-", 
    RowBox[{"Ket", "[", 
     RowBox[{"D1", ",", 
      RowBox[{"D1", "+", 
       RowBox[{
        RowBox[{"E", "^", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "*", "I", "*", "\[Beta]"}], ")"}]}], 
        "U1"}]}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Comb3", "=", 
   RowBox[{
    RowBox[{"Ket", "[", 
     RowBox[{"U1", ",", 
      RowBox[{"U1", "-", 
       RowBox[{
        RowBox[{"E", "^", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "*", "I", "*", "\[Beta]"}], ")"}]}], 
        "D1"}]}]}], "]"}], "-", 
    RowBox[{"Ket", "[", 
     RowBox[{"D1", ",", 
      RowBox[{"D1", "+", 
       RowBox[{
        RowBox[{"E", "^", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "*", "I", "*", "\[Beta]"}], ")"}]}], 
        "U1"}]}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Comb4", "=", 
   RowBox[{
    RowBox[{"Ket", "[", 
     RowBox[{"U1", ",", 
      RowBox[{"U1", "-", 
       RowBox[{
        RowBox[{"E", "^", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "*", "I", "*", "\[Beta]"}], ")"}]}], 
        "D1"}]}]}], "]"}], "-", 
    RowBox[{"Ket", "[", 
     RowBox[{"D1", ",", 
      RowBox[{"D1", "-", 
       RowBox[{
        RowBox[{"E", "^", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "*", "I", "*", "\[Beta]"}], ")"}]}], 
        "U1"}]}]}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8012330478827314`*^9, 3.8012331752583885`*^9}, {
  3.8012332180512037`*^9, 3.8012332820925093`*^9}, {3.801233323499512*^9, 
  3.801233361522789*^9}, {3.8012334936678057`*^9, 3.8012335106507597`*^9}, {
  3.8012336162428565`*^9, 3.8012336459629717`*^9}, {3.8012339285633583`*^9, 
  3.801233953986493*^9}, {3.801234315243222*^9, 3.8012343297946444`*^9}, {
  3.801236039506115*^9, 3.8012360891866393`*^9}, {3.801236125178453*^9, 
  3.8012361377453537`*^9}, {3.80123690900565*^9, 3.801236911588097*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Ket", "[", 
   RowBox[{"Comb1", ",", "PP"}], "]"}], "+", 
  RowBox[{"Ket", "[", 
   RowBox[{"Comb2", ",", "MP"}], "]"}], "+", 
  RowBox[{"Ket", "[", 
   RowBox[{"Comb3", ",", "PM"}], "]"}], "+", 
  RowBox[{"Ket", "[", 
   RowBox[{"Comb4", ",", "MM"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.801233176742906*^9, 3.8012331984985075`*^9}, {
   3.801233373402381*^9, 3.8012333831776676`*^9}, {3.8012360763291245`*^9, 
   3.8012360802571077`*^9}, {3.801236158513879*^9, 3.801236178952796*^9}, 
   3.802102005914386*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "4", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Beta]"}]]}], "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "4", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "\[Beta]"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "\[Beta]"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Beta]"}]]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8012361669338465`*^9, 3.801236179271307*^9}, 
   3.802102029096543*^9, {3.802533319346964*^9, 3.8025333278602843`*^9}, {
   3.8025381333181067`*^9, 3.802538160381815*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Ket", "[", 
   RowBox[{"Comb1", ",", "Ps"}], "]"}], "+", 
  RowBox[{"Ket", "[", 
   RowBox[{"Comb2", ",", "Mn"}], "]"}], "+", 
  RowBox[{"Ket", "[", 
   RowBox[{"Comb3", ",", "Ps"}], "]"}], "+", 
  RowBox[{"Ket", "[", 
   RowBox[{"Comb4", ",", "Mn"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.801233460407193*^9, 3.8012334855218344`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "4", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "\[Beta]"}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8012334858412995`*^9, 3.8012335127507086`*^9}, {
   3.801233621813913*^9, 3.801233647422169*^9}, 3.80123414155324*^9, 
   3.8021020308148313`*^9, 3.802533328663545*^9, 3.802538134362546*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ket", "[", 
  RowBox[{
   RowBox[{"Ket", "[", 
    RowBox[{"U1", ",", 
     RowBox[{"U1", "+", "D1"}]}], "]"}], ",", 
   RowBox[{"Ket", "[", 
    RowBox[{"U1", ",", 
     RowBox[{"U1", "+", "D1"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.801235059513386*^9, 3.8012350882333093`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8012350656213217`*^9, 3.8012350895909595`*^9}, 
   3.802102032375004*^9, 3.802533329268928*^9, 3.802538135636956*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result1", "=", 
  RowBox[{
   RowBox[{"Ket", "[", 
    RowBox[{"Comb1", ",", "Ps"}], "]"}], "+", 
   RowBox[{"Ket", "[", 
    RowBox[{"Comb2", ",", "Mn"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.801236877338522*^9, 3.801236900984811*^9}, {
  3.801252940617078*^9, 3.801253019309493*^9}, {3.801253114947263*^9, 
  3.8012531778951035`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "\[Beta]"}]]}], "}"}], 
   ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Beta]"}]]}], "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "\[Beta]"}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.801236896450657*^9, 3.8012369144237146`*^9}, {
   3.801253013726226*^9, 3.801253027625802*^9}, {3.8012531288258653`*^9, 
   3.8012531783154216`*^9}, 3.801253238882382*^9, 3.801498961510092*^9, 
   3.8021020341804233`*^9, 3.8025333298912525`*^9, {3.802538136785008*^9, 
   3.8025381624064493`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result2", "=", 
  RowBox[{"2", 
   RowBox[{"E", "^", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "I", "*", "\[Beta]"}], ")"}]}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Ket", "[", 
      RowBox[{
       RowBox[{"Ket", "[", 
        RowBox[{"U1", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"E", "^", 
            RowBox[{"(", 
             RowBox[{"2", "I", "*", "\[Beta]"}], ")"}]}], "U1"}], "+", 
          "D1"}]}], "]"}], ",", "U1"}], "]"}], "+", 
     RowBox[{
      RowBox[{"E", "^", 
       RowBox[{"(", 
        RowBox[{"I", "*", "\[Beta]"}], ")"}]}], 
      RowBox[{"Ket", "[", 
       RowBox[{
        RowBox[{"Ket", "[", 
         RowBox[{"D1", ",", 
          RowBox[{"U1", "+", 
           RowBox[{
            RowBox[{"E", "^", 
             RowBox[{"(", 
              RowBox[{"2", "I", "*", "\[Beta]"}], ")"}]}], "D1"}]}]}], "]"}], 
        ",", "D1"}], "]"}]}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.8012531676834373`*^9, 3.801253197587508*^9}, {
  3.801253388648714*^9, 3.801253447663439*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "\[Beta]"}]]}], "}"}], 
   ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Beta]"}]]}], "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "\[Beta]"}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8012534001057076`*^9, 3.801253448168395*^9}, 
   3.801498962383148*^9, {3.8021020155702934`*^9, 3.8021020358628855`*^9}, 
   3.802533330727706*^9, {3.802538137829293*^9, 3.8025381639328985`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result1", "-", "result2"}]], "Input",
 CellChangeTimes->{{3.8012531833214035`*^9, 3.8012531857010975`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.801254047304858*^9, 3.801498963191105*^9, 3.802102037179908*^9, 
   3.8025333317049923`*^9, {3.802538139081512*^9, 3.802538165433096*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Comb1", "*", 
  RowBox[{"E", "^", 
   RowBox[{"(", 
    RowBox[{"I", "*", "\[Beta]"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.801324026396198*^9, 3.8013240267622585`*^9}, {
  3.801324070938238*^9, 3.8013240766970916`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "\[Beta]"}]], "}"}], ",", 
   RowBox[{"{", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Beta]"}]], "}"}], ",", 
   RowBox[{"{", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Beta]"}]], "}"}], ",", 
   RowBox[{"{", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "\[Beta]"}]], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8013240271514425`*^9, 3.8013240769839325`*^9, 3.8014989640390186`*^9, 
   3.8021020384855676`*^9, 3.8025333324306355`*^9, {3.8025381405050297`*^9, 
   3.80253816670457*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Comb2", "*", 
  RowBox[{"E", "^", 
   RowBox[{"(", 
    RowBox[{"I", "*", "\[Beta]"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.801324204034955*^9, 3.80132421030858*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "\[Beta]"}]], "}"}], ",", 
   RowBox[{"{", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Beta]"}]], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Beta]"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "\[Beta]"}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.801324205168269*^9, 3.801324211104124*^9}, 
   3.8021020394216576`*^9, 3.8025333332105637`*^9, {3.80253814157095*^9, 
   3.802538168195315*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MatrixExp", "[", 
     RowBox[{"I", "*", "\[Gamma]", "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Ket", "[", 
         RowBox[{"Sx", ",", "Id"}], "]"}], "+", 
        RowBox[{"Ket", "[", 
         RowBox[{"Id", ",", "Sx"}], "]"}]}], ")"}]}], "]"}], ".", "Comb1"}], "//",
    "FullSimplify"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8013207990531564`*^9, 3.8013208277622485`*^9}, {
  3.8013211135788507`*^9, 3.801321205687664*^9}, {3.8013212634425726`*^9, 
  3.8013212665865707`*^9}, {3.8013212982260485`*^9, 3.801321300521668*^9}, {
  3.801321362138101*^9, 3.8013213634745817`*^9}, {3.801321408338727*^9, 
  3.801321409738589*^9}, {3.801323969844121*^9, 3.801324009198006*^9}, {
  3.8013242161968665`*^9, 3.8013242335788164`*^9}, {3.8013243406595106`*^9, 
  3.801324393026807*^9}, {3.8013568659416127`*^9, 3.8013569106629157`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{
   RowBox[{"MatrixExp", "[", 
    RowBox[{"\[ImaginaryI]", " ", "\[Gamma]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"Id", ",", "Sx"}], "]"}], "+", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"Sx", ",", "Id"}], "]"}]}], ")"}]}], "]"}], ".", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"{", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "\[Beta]"}]], "}"}], 
     ",", 
     RowBox[{"{", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "\[Beta]"}]], "}"}], 
     ",", 
     RowBox[{"{", "1", "}"}]}], "}"}]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.8013569110910845`*^9, {3.8021020411868095`*^9, 3.8021020497234*^9}, 
   3.8025333343598433`*^9, {3.80253814296509*^9, 3.802538169158968*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"PLUS", " ", "=", " ", 
   RowBox[{"U1", " ", "+", " ", "D1"}]}], ";", 
  RowBox[{"MINUS", "=", 
   RowBox[{"U1", "-", "D1"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.801356014241355*^9, 3.8013560352696323`*^9}, {
  3.8013565998692236`*^9, 3.8013566162362647`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Sz", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ";", 
  RowBox[{"Sx", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}], "}"}]}], ";", 
  RowBox[{"Id", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8013563525814033`*^9, 3.8013564123890247`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"r1", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"E", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "I"}], "*", "\[Beta]"}], ")"}]}], "*", 
    RowBox[{
     RowBox[{"MatrixExp", "[", 
      RowBox[{"I", "*", "\[Gamma]", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Ket", "[", 
          RowBox[{"Sx", ",", "Id"}], "]"}], "+", 
         RowBox[{"Ket", "[", 
          RowBox[{"Id", ",", "Sx"}], "]"}]}], ")"}]}], "]"}], ".", 
     RowBox[{"MatrixExp", "[", 
      RowBox[{"I", "*", "\[Beta]", "*", 
       RowBox[{"Ket", "[", 
        RowBox[{"Sz", ",", "Sz"}], "]"}]}], "]"}], ".", 
     RowBox[{"Ket", "[", 
      RowBox[{"PLUS", ",", "PLUS"}], "]"}]}]}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.8013561504014*^9, 3.8013562535331416`*^9}, {
  3.801356337485583*^9, 3.801356417715351*^9}, {3.80135652950156*^9, 
  3.8013566309427357`*^9}, {3.801356665246191*^9, 3.801356667668828*^9}, {
  3.8013570073345385`*^9, 3.801357031877695*^9}, {3.8013571148373938`*^9, 
  3.8013571204608574`*^9}, {3.801357154725381*^9, 3.801357155029529*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Gamma]"}], "]"}], "+", 
     RowBox[{"\[ImaginaryI]", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "\[Beta]"}]], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "\[Gamma]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "\[Beta]"}]], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[Gamma]"}], "]"}]}], "+", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "\[Gamma]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "\[Beta]"}]], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[Gamma]"}], "]"}]}], "+", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "\[Gamma]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Gamma]"}], "]"}], "+", 
     RowBox[{"\[ImaginaryI]", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "\[Beta]"}]], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "\[Gamma]"}], "]"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.80135615571345*^9, {3.8013562210765486`*^9, 3.801356242316039*^9}, {
   3.8013564135645056`*^9, 3.801356418202009*^9}, 3.8013566685973473`*^9, {
   3.801357010525981*^9, 3.801357037205678*^9}, {3.8013571207960243`*^9, 
   3.8013571556345234`*^9}, 3.8014989681293435`*^9, 3.802102047441693*^9, 
   3.802533336857695*^9, 3.8025381758532543`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"r2", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", "2"}], ")"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"E", "^", 
          RowBox[{"(", 
           RowBox[{"2", "I", "*", "\[Gamma]"}], ")"}]}], 
         RowBox[{"Ket", "[", 
          RowBox[{"PLUS", ",", "PLUS"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"E", "^", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "I", "*", "\[Gamma]"}], ")"}]}], 
         RowBox[{"Ket", "[", 
          RowBox[{"MINUS", ",", "MINUS"}], "]"}]}]}], ")"}], " ", "+", 
      RowBox[{
       RowBox[{"E", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "I", "*", "\[Beta]"}], ")"}]}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"E", "^", 
           RowBox[{"(", 
            RowBox[{"2", "I", "*", "\[Gamma]"}], ")"}]}], 
          RowBox[{"Ket", "[", 
           RowBox[{"PLUS", ",", "PLUS"}], "]"}]}], "-", 
         RowBox[{
          RowBox[{"E", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "I", "*", "\[Gamma]"}], ")"}]}], 
          RowBox[{"Ket", "[", 
           RowBox[{"MINUS", ",", "MINUS"}], "]"}]}]}], ")"}]}]}], ")"}]}], "//",
    "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.8013570344359217`*^9, 3.8013570351569557`*^9}, {
  3.8013571576921606`*^9, 3.80135716173728*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Gamma]"}], "]"}], "+", 
     RowBox[{"\[ImaginaryI]", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "\[Beta]"}]], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "\[Gamma]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "\[Beta]"}]], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[Gamma]"}], "]"}]}], "+", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "\[Gamma]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "\[Beta]"}]], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[Gamma]"}], "]"}]}], "+", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "\[Gamma]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Gamma]"}], "]"}], "+", 
     RowBox[{"\[ImaginaryI]", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "\[Beta]"}]], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "\[Gamma]"}], "]"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.801357137131791*^9, 3.8013571622161283`*^9}, 
   3.8014989693589177`*^9, 3.802102048516926*^9, 3.8025333378294535`*^9, 
   3.802538177169752*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"r1", "-", "r2"}]], "Input",
 CellChangeTimes->{{3.8013571655636*^9, 3.8013571666355753`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.801357167056408*^9, 3.802102051979903*^9, 
  3.802533339115016*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Comb5", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", "2"}], ")"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"E", "^", 
          RowBox[{"(", 
           RowBox[{"2", "I", "*", "\[Gamma]"}], ")"}]}], 
         RowBox[{"Ket", "[", 
          RowBox[{"PLUS", ",", "PLUS"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"E", "^", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "I", "*", "\[Gamma]"}], ")"}]}], 
         RowBox[{"Ket", "[", 
          RowBox[{"MINUS", ",", "MINUS"}], "]"}]}]}], ")"}], " ", "+", 
      RowBox[{
       RowBox[{"E", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "I", "*", "\[Beta]"}], ")"}]}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"E", "^", 
           RowBox[{"(", 
            RowBox[{"2", "I", "*", "\[Gamma]"}], ")"}]}], 
          RowBox[{"Ket", "[", 
           RowBox[{"PLUS", ",", "PLUS"}], "]"}]}], "-", 
         RowBox[{
          RowBox[{"E", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "I", "*", "\[Gamma]"}], ")"}]}], 
          RowBox[{"Ket", "[", 
           RowBox[{"MINUS", ",", "MINUS"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.801357236150005*^9, 3.8013572444704638`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Comb6", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", "2"}], ")"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"E", "^", 
          RowBox[{"(", 
           RowBox[{"2", "I", "*", "\[Gamma]"}], ")"}]}], 
         RowBox[{"Ket", "[", 
          RowBox[{"PLUS", ",", "PLUS"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"E", "^", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "I", "*", "\[Gamma]"}], ")"}]}], 
         RowBox[{"Ket", "[", 
          RowBox[{"MINUS", ",", "MINUS"}], "]"}]}]}], ")"}], " ", "-", 
      RowBox[{
       RowBox[{"E", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "I", "*", "\[Beta]"}], ")"}]}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"E", "^", 
           RowBox[{"(", 
            RowBox[{"2", "I", "*", "\[Gamma]"}], ")"}]}], 
          RowBox[{"Ket", "[", 
           RowBox[{"PLUS", ",", "PLUS"}], "]"}]}], "-", 
         RowBox[{
          RowBox[{"E", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "I", "*", "\[Gamma]"}], ")"}]}], 
          RowBox[{"Ket", "[", 
           RowBox[{"MINUS", ",", "MINUS"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8013572495011845`*^9, 3.801357253973069*^9}, {
  3.8013662912094784`*^9, 3.801366315553297*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Ket", "[", 
    RowBox[{
     RowBox[{"U1", "+", 
      RowBox[{
       RowBox[{"E", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "I", "*", "\[Gamma]"}], ")"}]}], "D1"}]}], ",", 
     "Comb5"}], "]"}], " ", "+", 
   RowBox[{"Ket", "[", " ", 
    RowBox[{
     RowBox[{"U1", "-", 
      RowBox[{
       RowBox[{"E", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "I", "*", "\[Gamma]"}], ")"}]}], "D1"}]}], ",", 
     "Comb6"}], "]"}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.8013574140870795`*^9, 3.8013574654359593`*^9}, {
  3.801357503989315*^9, 3.801357507740445*^9}, {3.8013590853637924`*^9, 
  3.8013590881714673`*^9}, {3.801359126043724*^9, 3.801359126690017*^9}, {
  3.801366166585871*^9, 3.801366186265312*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Gamma]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "\[Gamma]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "\[Gamma]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Gamma]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{"\[Beta]", "+", 
         RowBox[{"2", " ", "\[Gamma]"}]}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Gamma]"}]]}], ")"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{"\[Beta]", "+", 
         RowBox[{"2", " ", "\[Gamma]"}]}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Gamma]"}]]}], ")"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{"\[Beta]", "+", 
         RowBox[{"2", " ", "\[Gamma]"}]}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Gamma]"}]]}], ")"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{"\[Beta]", "+", 
         RowBox[{"2", " ", "\[Gamma]"}]}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Gamma]"}]]}], ")"}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8013574563673363`*^9, 3.8013574621475334`*^9}, {
   3.801359119057968*^9, 3.8013591278526044`*^9}, {3.8013661771331835`*^9, 
   3.8013661889960313`*^9}, {3.8013662938910513`*^9, 3.801366318048875*^9}, {
   3.8013672556675224`*^9, 3.8013672825230722`*^9}, 3.8021020557222643`*^9, 
   3.8025333441427126`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Ket", "[", 
    RowBox[{
     RowBox[{"U1", "+", 
      RowBox[{
       RowBox[{"E", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"0", "I", "*", "\[Gamma]"}], "+", 
          RowBox[{"2", "I", "*", "\[Beta]"}]}], ")"}]}], "D1"}]}], ",", 
     "Comb5"}], "]"}], "+", 
   RowBox[{"Ket", "[", " ", 
    RowBox[{
     RowBox[{"U1", "-", 
      RowBox[{
       RowBox[{"E", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"0", "I", "*", "\[Gamma]"}], "+", 
          RowBox[{"2", "I", "*", "\[Beta]"}]}], ")"}]}], "D1"}]}], ",", 
     "Comb6"}], "]"}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.801366195352955*^9, 3.80136619629642*^9}, {
  3.8013663336965375`*^9, 3.8013663482651854`*^9}, {3.8013671607931995`*^9, 
  3.8013671826002245`*^9}, {3.801367219888239*^9, 3.8013673135439787`*^9}, {
  3.8013679143926144`*^9, 3.801367986287321*^9}, {3.8013680430501328`*^9, 
  3.801368103192111*^9}, {3.8013681333517723`*^9, 3.8013681838238544`*^9}, {
  3.801368465865286*^9, 3.801368478479912*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Gamma]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "\[Gamma]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "\[Gamma]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Gamma]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "\[Gamma]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Gamma]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Gamma]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "\[Gamma]"}], "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8013661974434586`*^9, {3.8013663007562284`*^9, 3.8013663492340183`*^9}, {
   3.801367230475774*^9, 3.801367313922103*^9}, {3.8013679179742393`*^9, 
   3.8013679900188856`*^9}, 3.8013680439102793`*^9, 3.8013680746229553`*^9, {
   3.8013681243575706`*^9, 3.8013681570044165`*^9}, 3.801368190773854*^9, {
   3.8013684702728*^9, 3.801368478846268*^9}, 3.802102056769064*^9, 
   3.802533345036869*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"E", "^", 
     RowBox[{"(", 
      RowBox[{"2", "I", "*", "\[Gamma]"}], ")"}]}], 
    RowBox[{"Ket", "[", 
     RowBox[{
      RowBox[{"Ket", "[", 
       RowBox[{"PLUS", ",", "PLUS"}], "]"}], ",", "PLUS"}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"E", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "I", "*", "\[Gamma]"}], ")"}]}], 
    RowBox[{"Ket", "[", 
     RowBox[{
      RowBox[{"Ket", "[", 
       RowBox[{"MINUS", ",", "MINUS"}], "]"}], ",", "MINUS"}], "]"}]}]}], "//",
   "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.8013705070180416`*^9, 3.801370553198154*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Gamma]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "\[Gamma]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "\[Gamma]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Gamma]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "\[Gamma]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Gamma]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Gamma]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "\[Gamma]"}], "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.801370548515459*^9, 3.801370553633806*^9}, 
   3.802102057993004*^9, 3.8025333460709076`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Inverse", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.801405025155483*^9, 3.801405048175714*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.801405048771699*^9, 3.8021020593642893`*^9, 
  3.802533346959305*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CNOT", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.801498974587363*^9, 3.801498998831936*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8014989939584737`*^9, 3.801498999343792*^9}, 
   3.8021020606066837`*^9, 3.8025333479193525`*^9, 3.802538183378027*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CNOT", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8014990006861362`*^9, 3.8014990043382826`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0"},
     {"0", "1", "0", "0"},
     {"0", "0", "0", "1"},
     {"0", "0", "1", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.801499004586914*^9, 3.8021020633829284`*^9, 
  3.802533348807588*^9, 3.802538184802514*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"CNOT", ".", 
   RowBox[{"Ket", "[", 
    RowBox[{"Sz", ",", "Sz"}], "]"}], ".", "CNOT"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.801499006519808*^9, 3.8014990288997984`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0"},
     {"0", 
      RowBox[{"-", "1"}], "0", "0"},
     {"0", "0", "1", "0"},
     {"0", "0", "0", 
      RowBox[{"-", "1"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8014990213824987`*^9, 3.801499029382679*^9}, 
   3.8021020643896112`*^9, 3.8025333496760426`*^9, 3.802538187599524*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CNOT", ".", 
    RowBox[{"Ket", "[", 
     RowBox[{"Id", ",", "Sz"}], "]"}], ".", "CNOT"}], "-", 
   RowBox[{"Ket", "[", 
    RowBox[{"Sz", ",", "Sz"}], "]"}]}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8014991060030613`*^9, 3.801499142232539*^9}, {
  3.801521368692697*^9, 3.8015213727724133`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.801499108777162*^9, 3.8014991426318283`*^9}, 
   3.801521373353896*^9, 3.802102065934888*^9, 3.8025333504818535`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"CNOT", ".", 
   RowBox[{"Ket", "[", 
    RowBox[{"Id", ",", " ", 
     RowBox[{"MatrixExp", "[", 
      RowBox[{"I", "*", "\[Beta]", "*", "Sz"}], "]"}]}], "]"}], ".", "CNOT"}],
   "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8014992438261905`*^9, 3.801499277878202*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Beta]"}]], "0", "0", "0"},
     {"0", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Beta]"}]], "0", "0"},
     {"0", "0", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Beta]"}]], "0"},
     {"0", "0", "0", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Beta]"}]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8014992721805267`*^9, 3.8014992782592926`*^9}, 
   3.8021020675124054`*^9, 3.802533351408151*^9, 3.802538190391058*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ket", "[", 
  RowBox[{
   RowBox[{"Ket", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"c", "*", "U1"}], "+", 
      RowBox[{"d", "*", "D1"}]}], ",", 
     RowBox[{"U1", "+", "D1"}]}], "]"}], ",", 
   RowBox[{"Ket", "[", 
    RowBox[{
     RowBox[{"U1", "+", "D1"}], ",", 
     RowBox[{
      RowBox[{"a", "*", "U1"}], "+", 
      RowBox[{"b", "*", "D1"}]}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8015000006747417`*^9, 3.80150001487949*^9}, {
  3.8015000694796424`*^9, 3.801500116344925*^9}, {3.8015015006558833`*^9, 
  3.801501507014846*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", " ", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", " ", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", " ", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", " ", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", " ", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", " ", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", " ", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", " ", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", " ", "d"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", " ", "d"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", " ", "d"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", " ", "d"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", " ", "d"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", " ", "d"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", " ", "d"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", " ", "d"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.80150011673209*^9, 3.8015015072963486`*^9, 
  3.802102068936065*^9, 3.802533352463379*^9, 3.8025381916856313`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ent", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", " ", "c"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"b", " ", "c"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", " ", "c"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "b"}], " ", "c"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", " ", "c"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"b", " ", "c"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "a"}], " ", "c"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"b", " ", "c"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", " ", "d"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"b", " ", "d"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "a"}], " ", "d"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"b", " ", "d"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", " ", "d"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"b", " ", "d"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", " ", "d"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "b"}], " ", "d"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8015018576885667`*^9, 3.8015018901755266`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", " ", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", " ", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", " ", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "b"}], " ", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", " ", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", " ", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "a"}], " ", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", " ", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", " ", "d"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", " ", "d"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "a"}], " ", "d"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", " ", "d"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", " ", "d"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", " ", "d"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", " ", "d"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "b"}], " ", "d"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.80150188227415*^9, 3.8015018905387025`*^9}, 
   3.8021020700721474`*^9, 3.8025333535426245`*^9, 3.8025381930213003`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"CNOT", ".", 
   RowBox[{"Ket", "[", 
    RowBox[{"Id", ",", 
     RowBox[{"MatrixExp", "[", 
      RowBox[{"I", "*", "\[Beta]", "*", "Sz"}], "]"}]}], "]"}], ".", "CNOT"}],
   "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8015215070994544`*^9, 3.8015215094226294`*^9}, {
  3.8015215905150766`*^9, 3.8015216165555973`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Beta]"}]], "0", "0", "0"},
     {"0", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Beta]"}]], "0", "0"},
     {"0", "0", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Beta]"}]], "0"},
     {"0", "0", "0", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Beta]"}]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8015216034220066`*^9, 3.8015216168045273`*^9}, 
   3.802102071281873*^9, 3.8025333548425922`*^9, 3.802538194887266*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Psi", "=", 
   RowBox[{
    RowBox[{"a", "*", "U1"}], "+", 
    RowBox[{"b", "*", "D1"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.801529693160011*^9, 3.801529720920391*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ket", "[", 
  RowBox[{
   RowBox[{"Ket", "[", 
    RowBox[{"PLUS", ",", "PLUS"}], "]"}], ",", "Psi"}], "]"}]], "Input",
 CellChangeTimes->{{3.8015297274590287`*^9, 3.801529746018334*^9}, {
  3.8015351300063677`*^9, 3.801535136206829*^9}, {3.8015377492300463`*^9, 
  3.8015377565054846`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "a", "}"}], ",", 
   RowBox[{"{", "b", "}"}], ",", 
   RowBox[{"{", "a", "}"}], ",", 
   RowBox[{"{", "b", "}"}], ",", 
   RowBox[{"{", "a", "}"}], ",", 
   RowBox[{"{", "b", "}"}], ",", 
   RowBox[{"{", "a", "}"}], ",", 
   RowBox[{"{", "b", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8015297466695614`*^9, 3.8015351435258284`*^9, 
  3.8015377569011602`*^9, 3.80210207377416*^9, 3.8025333568674417`*^9, 
  3.8025381978117104`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"MatrixExp", "[", 
   RowBox[{"I", "*", "\[Beta]", "*", "Sx"}], "]"}], ".", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "a", "}"}], ",", 
    RowBox[{"{", "b", "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8015769974636464`*^9, 3.8015770129813375`*^9}, {
  3.8015772405152025`*^9, 3.8015772895710278`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", " ", 
      RowBox[{"Cos", "[", "\[Beta]", "]"}]}], "+", 
     RowBox[{"\[ImaginaryI]", " ", "b", " ", 
      RowBox[{"Sin", "[", "\[Beta]", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"b", " ", 
      RowBox[{"Cos", "[", "\[Beta]", "]"}]}], "+", 
     RowBox[{"\[ImaginaryI]", " ", "a", " ", 
      RowBox[{"Sin", "[", "\[Beta]", "]"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8015770137804785`*^9, 3.801577247544995*^9, {3.8015772791402454`*^9, 
   3.8015772908106976`*^9}, 3.8021020749631205`*^9, 3.8025333580344653`*^9, 
   3.8025381990042315`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Det", "[", 
   RowBox[{"MatrixExp", "[", 
    RowBox[{
     RowBox[{"Log", "[", "t", "]"}], "*", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "/", "2"}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"1", "/", "4"}]}], "}"}]}], "}"}]}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8016885945662975`*^9, 3.801688629846553*^9}, {
  3.801688821823933*^9, 3.8016888235985427`*^9}}],

Cell[BoxData[
 SuperscriptBox["t", 
  RowBox[{"3", "/", "4"}]]], "Output",
 CellChangeTimes->{{3.80168862245669*^9, 3.8016886301072073`*^9}, 
   3.8016888248487473`*^9, 3.802102076239756*^9, 3.8025333589754705`*^9, 
   3.8025382005759106`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Exp", "[", 
  RowBox[{
   RowBox[{"-", "2"}], "*", "I", "*", 
   RowBox[{"Pi", "/", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.801757117716057*^9, 3.8017571499179153`*^9}}],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{{3.8017571236470795`*^9, 3.8017571504227076`*^9}, 
   3.8021020770920887`*^9, 3.802533361615655*^9, 3.8025382027143297`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MatrixExp", "[", 
    RowBox[{"I", "*", "\[Beta]", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Ket", "[", 
        RowBox[{"Id", ",", "Sx"}], "]"}], "+", 
       RowBox[{"Ket", "[", 
        RowBox[{"Sx", ",", "Id"}], "]"}]}], ")"}]}], "]"}], ".", "CNOT"}], "//",
   "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8017868952053213`*^9, 3.8017869205727644`*^9}, {
  3.8018234999461823`*^9, 3.8018235074927297`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Beta]"}], "]"}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Beta]"}], "]"}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Beta]"}], "]"}]}]},
     {
      RowBox[{
       FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Beta]"}], "]"}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Beta]"}], "]"}]}], ")"}]}]},
     {
      RowBox[{
       FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Beta]"}], "]"}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Beta]"}], "]"}]}], ")"}]}]},
     {
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Beta]"}], "]"}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Beta]"}], "]"}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Beta]"}], "]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8017869110114574`*^9, 3.801786921023431*^9}, 
   3.8018235080886774`*^9, 3.802102078218618*^9, 3.8025333626881905`*^9, 
   3.802538204027019*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"CNOT", ".", 
   RowBox[{"MatrixExp", "[", 
    RowBox[{"I", "*", "\[Beta]", "*", 
     RowBox[{"Ket", "[", 
      RowBox[{"Id", ",", "Sz"}], "]"}]}], "]"}], ".", "CNOT"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8018229285990143`*^9, 3.8018229602678127`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Beta]"}]], "0", "0", "0"},
     {"0", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Beta]"}]], "0", "0"},
     {"0", "0", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Beta]"}]], "0"},
     {"0", "0", "0", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Beta]"}]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8018229377826357`*^9, 3.801822960645374*^9}, 
   3.8021020796475554`*^9, 3.8025333639712696`*^9, 3.8025382056446667`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"MatrixExp", "[", 
   RowBox[{"I", "*", "\[Beta]", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Ket", "[", 
       RowBox[{"Id", ",", 
        RowBox[{"Ket", "[", 
         RowBox[{"Sz", ",", "Sz"}], "]"}]}], "]"}], " ", "+", " ", 
      RowBox[{"Ket", "[", 
       RowBox[{"Sz", ",", 
        RowBox[{"Ket", "[", 
         RowBox[{"Id", ",", "Sz"}], "]"}]}], "]"}], "+", 
      RowBox[{"Ket", "[", 
       RowBox[{"Sz", ",", 
        RowBox[{"Ket", "[", 
         RowBox[{"Sz", ",", "Id"}], "]"}]}], "]"}]}], ")"}]}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.801826137669289*^9, 3.8018261714433208`*^9}, {
  3.8018262056342144`*^9, 3.8018262343711076`*^9}, {3.801826837155637*^9, 
  3.801826897676858*^9}, {3.8018270329792523`*^9, 3.8018270526990185`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Beta]"}]], "0", "0", "0", 
      "0", "0", "0", "0"},
     {"0", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Beta]"}]], "0", "0", "0", "0",
       "0", "0"},
     {"0", "0", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Beta]"}]], "0", "0", "0", "0",
       "0"},
     {"0", "0", "0", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Beta]"}]], "0", "0", "0", "0"},
     {"0", "0", "0", "0", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Beta]"}]], "0", "0", "0"},
     {"0", "0", "0", "0", "0", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Beta]"}]], "0", "0"},
     {"0", "0", "0", "0", "0", "0", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Beta]"}]], "0"},
     {"0", "0", "0", "0", "0", "0", "0", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Beta]"}]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8018261568839755`*^9, 3.8018261610527763`*^9}, 
   3.801826234856258*^9, {3.801826901644598*^9, 3.8018269029160595`*^9}, 
   3.801827053107151*^9, 3.80210208082702*^9, 3.8025333649899564`*^9, 
   3.8025382071258173`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Ket", "[", 
    RowBox[{"CNOT", ",", "Id"}], "]"}], "+", 
   RowBox[{"Ket", "[", 
    RowBox[{"Id", ",", "CNOT"}], "]"}]}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.801827237001976*^9, 3.801827250017394*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "2", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "1", "1", "0", "0", "0", "0"},
     {"0", "0", "1", "1", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "1", "0", "1", "0"},
     {"0", "0", "0", "0", "0", "1", "0", "1"},
     {"0", "0", "0", "0", "1", "0", "0", "1"},
     {"0", "0", "0", "0", "0", "1", "1", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8018272463414917`*^9, 3.801827250346301*^9}, 
   3.8021020825430946`*^9, 3.80253336595833*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ket", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"c", "*", "U1"}], "+", 
    RowBox[{"d", "*", "D1"}]}], ",", 
   RowBox[{
    RowBox[{"a", "*", "U1"}], "+", 
    RowBox[{"b", "*", "D1"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8018669933770914`*^9, 3.8018670092148037`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", " ", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", " ", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", " ", "d"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", " ", "d"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8018670099476943`*^9, 3.8021020840778284`*^9, 
  3.8025333667821627`*^9, 3.8025382098775625`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MatrixExp", "[", 
     RowBox[{"I", "*", "\[Gamma]", "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Ket", "[", 
         RowBox[{"Id", ",", "Sx"}], "]"}], "+", 
        RowBox[{"Ket", "[", 
         RowBox[{"Sx", ",", "Id"}], "]"}]}], ")"}]}], "]"}], ".", 
    RowBox[{"MatrixExp", "[", 
     RowBox[{"I", "*", "\[Beta]", "*", 
      RowBox[{"Ket", "[", 
       RowBox[{"Sz", ",", "Sz"}], "]"}]}], "]"}], ".", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", "1", "}"}]}], "}"}]}], "//", "MatrixForm"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.801830862565541*^9, 3.8018308908329105`*^9}, {
  3.8018669251747465`*^9, 3.8018669708958592`*^9}, {3.8021036065355244`*^9, 
  3.802103647542301*^9}, {3.8025382213491607`*^9, 3.8025382644679985`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Beta]", "-", 
         RowBox[{"2", " ", "\[Gamma]"}]}], "]"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Beta]", "+", 
          RowBox[{"2", " ", "\[Gamma]"}]}], "]"}]}]}]},
     {
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Beta]", "+", 
         RowBox[{"2", " ", "\[Gamma]"}]}], "]"}], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Beta]", "-", 
          RowBox[{"2", " ", "\[Gamma]"}]}], "]"}]}]}]},
     {
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Beta]", "+", 
         RowBox[{"2", " ", "\[Gamma]"}]}], "]"}], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Beta]", "-", 
          RowBox[{"2", " ", "\[Gamma]"}]}], "]"}]}]}]},
     {
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Beta]", "-", 
         RowBox[{"2", " ", "\[Gamma]"}]}], "]"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Beta]", "+", 
          RowBox[{"2", " ", "\[Gamma]"}]}], "]"}]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.80183087772335*^9, 3.8018308912061543`*^9}, {
   3.8018669263108053`*^9, 3.801866937851266*^9}, 3.801866971304865*^9, 
   3.802102085331678*^9, 3.8021036070336466`*^9, {3.8021036378904867`*^9, 
   3.8021036479930944`*^9}, 3.8025333682387276`*^9, {3.802538211268803*^9, 
   3.8025382648679695`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"test", "=", 
   RowBox[{
    RowBox[{"MatrixExp", "[", 
     RowBox[{"I", "*", "\[Gamma]", "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Ket", "[", 
         RowBox[{"Id", ",", "Sx"}], "]"}], "+", 
        RowBox[{"Ket", "[", 
         RowBox[{"Sx", ",", "Id"}], "]"}]}], ")"}]}], "]"}], ".", 
    RowBox[{"MatrixExp", "[", 
     RowBox[{"I", "*", "\[Beta]", "*", 
      RowBox[{"Ket", "[", 
       RowBox[{"Sz", ",", "Sz"}], "]"}]}], "]"}], ".", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", "1", "}"}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8025382987975593`*^9, 3.80253830699641*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"gs", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"1", "-", 
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["g", "2"]}]}]]}], 
       RowBox[{"2", " ", "g"}]]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"1", "-", 
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["g", "2"]}]}]]}], 
       RowBox[{"2", " ", "g"}]]}], ",", "1"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8025383098921037`*^9, 3.8025383383365116`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Abs", "[", 
   RowBox[{"gs", ".", "test"}], "]"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.8025384889263296`*^9, 3.802538502283474*^9}, {
  3.802538681427142*^9, 3.8025387085031123`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"Im", "[", "\[Beta]", "]"}]], " ", 
   RowBox[{"Abs", "[", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Beta]"}]], " ", "g"}], 
         "+", 
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["g", "2"]}]}]]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Gamma]"}], "]"}]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "g"}], "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Beta]"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["g", "2"]}]}]]}], ")"}]}]}], ")"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Gamma]"}], "]"}]}]}], "g"], "]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.802538490047331*^9, 3.8025385026797104`*^9}, {
  3.8025386845817523`*^9, 3.802538708852857*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Beta]"}]], " ", "g"}], 
        "+", 
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["g", "2"]}]}]]}], ")"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[Gamma]"}], "]"}]}], "+", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "g"}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Beta]"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["g", "2"]}]}]]}], ")"}]}]}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "\[Gamma]"}], "]"}]}]}], ")"}], "*", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "\[Beta]"}]], " ", 
         "g"}], "+", 
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["g", "2"]}]}]]}], ")"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[Gamma]"}], "]"}]}], "-", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "g"}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "\[Beta]"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["g", "2"]}]}]]}], ")"}]}]}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "\[Gamma]"}], "]"}]}]}], ")"}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.8025387418862753`*^9, 3.8025387868188243`*^9}}],

Cell[BoxData[
 RowBox[{"2", "+", 
  RowBox[{"8", " ", 
   SuperscriptBox["g", "2"]}], "-", 
  RowBox[{"2", " ", 
   SqrtBox[
    RowBox[{"1", "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["g", "2"]}]}]]}], "+", 
  RowBox[{"4", " ", "g", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SqrtBox[
      RowBox[{"1", "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["g", "2"]}]}]]}], ")"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Beta]"}], "]"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SqrtBox[
      RowBox[{"1", "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["g", "2"]}]}]]}], ")"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", "\[Beta]"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"4", " ", "\[Gamma]"}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.802538759467081*^9, 3.8025387885609765`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"2", "+", "8", "-", 
    RowBox[{"2", " ", 
     SqrtBox[
      RowBox[{"1", "+", "4", " "}]]}], "+", 
    RowBox[{"4", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SqrtBox[
        RowBox[{"1", "+", "4"}]]}], ")"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Beta]"}], "]"}]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SqrtBox[
        RowBox[{"1", "+", "4"}]]}], ")"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "\[Beta]"}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"4", " ", "\[Gamma]"}], "]"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]", ",", 
     RowBox[{
      RowBox[{"-", "Pi"}], "/", "2"}], ",", 
     RowBox[{"Pi", "/", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Gamma]", ",", 
     RowBox[{
      RowBox[{"-", "Pi"}], "/", "2"}], ",", 
     RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8025475881593313`*^9, 3.8025476787914915`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyEvXVclsn3Po7dgYKNImF398FuXXPttWtdC3NtRddcO9buxG5FBwPzscXE
QMRAUEBQMb/P/WaueWaOH3+//ed5ee3h3HOfOXNqzsydv/uglr2SOjk5tcvk
5JTM/nt+bqocX/InCPye/B7Y76L/M5qWoWjluzPjFb7Qb02S2KIxVHdWsw77
38covOrKRvX2zE3mkzrL8w95j0YqPOR957qRB519EvmEKzxf1jqxnlNySfoQ
haeOX51jZaX8ErcpPOPT8GRpP3r6OMn/gLf+fPnK8Rgv0BPwaa0m17HoJX+F
F7uZbo7FX45H4fNLr3XxVuOJVLiPy7E+Ufbxy/dV+NHc37Pvs7+vlI/Cw2lK
yriiik7hN+uc+p881fikXLsszbDsvCZn/BbaMKBbxtRXlZyBb6/S6/KOsCiC
nIG/mnw8xfF2yZWcga/+fLja4oQsSs7A1wdd3xHcK4+SM/AhMYOz+zf0UHIG
zuUM3LPWx1J9N3orOQPv0fP0taY1vJScgafxzhbePmV+JWfgW+tVKTKWcio5
A2/Ub9CfIzdnUnIGnrVUfNXnS74rOQMv4z+s6mVNzpDfpVepvXU5Aw+cVyXl
wsIrlZzxu3mzb7smsaFKzsCH1LhKK9c4KTkDr9AhLiSFm7OSM/CT3fqd2/Yy
l5Iz8KR9X+1c+yS/kjNwLmfgCy5PWO6bsYCSM/A22Uac7vHNIWfg1eM/LloX
55Az8OevSs1Jlye3kjNw75euG/u0cFZyBp4rKvnjNe+dfCBn4Oc6jN6lyxly
2tujeZ8LmpyBZx/TIE9f3zD198D/XTwrl++BBCVn/PadFl+5XMZ0Ss7AOxR3
vtGidTYlZ+AxYU9ejc2WT8kZ+MNMyVufTu2wG8C5nIEf9ewZ1yLcS8kZeLXg
KqU/h3soOQNvm/1W+Y978yo5A39Vx22eeO6q5Ay8eFTSG4XqplVyBh457XtC
6dWflD4Df/KkzIBLP9mNcDHkRyJu2o1wMbD5vWdl7HxMuxEuLg27sr6w/bmm
3QgXwwIisgTax2najXCR5N+1RxzvFaLwV8N39rLkYNqNcJGs4wTnlna5mXYj
/Bd2I1zMv/eqgjUvpt0IF8vWf55gzaNpN8LF7kO1mznmPVLhvy3tUK6sXU9M
u2F/7rQPI4YcUHZB4S4Rixr1tuuhaTfCRb46iXpr6nOIWNA9Uc9NfQ4REfnP
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
X2XrAuO5UqLF3/q6wK/HXXNd4LlnukVd1NcF8BJN/nmgrwvgph22KXrYbWb/
ia8LzHPm9Nna6utCyomO1DTXBex2n7IFwhdr6wL43a/thL4uwGfifHNd4HeK
rWCIvi5AvzHJcmNdgP+C6qPKFtbWBXCfSr4ZD2nrQj03cKuxLvD/a8a6TdDX
BeiHsHUBethDjBN41KJXC69r6wJ8YLdBp/JRaeeZ3yf4Beb3Cf6F+X2Cn4I+
oF4yqcDxbr18w9S6wG9P32lf9qs83abqK+0+pHe3zrlDb0E/c0GV81a8h+eh
fvbXrMTzuRgP4o01u1I8qmiPo8xzka9F7cyJ50xBjzgkaefQdC/teTH0E3U1
XrfBPAT0CAmc0M0xHtA/f554jhj8QR/rv7GFc7e77Hx3gHjVKnE/DvR4zuCZ
L5pY44E8EddE7xlYto8mT8jJ1imo+yFNnqAfJWKS6vLE76OVTgd0eYJ+67vE
8/sYD+idXIs4V9LkiTpivXWm/BF3Ffi7Wd1KP8ufmpY15Y94rMmRN3N0+aO+
yOUPvW3Y6e+zuvxBn+ORKX/Qu44Lf5TZLn9V75Dxz9BWw+61POG41wZ6WK16
x0LWPQBYj/i7Dp+P9En1h8JVHHV49Ob6+wO9VHwIPpVK1/297GpHnA0+12aP
bp8m0nHvHurEGD+Tg9JD0EP/PY8knqfGOKD/HtR21l/2eB5yQHySY9vbkF6b
37Dz168FmxdV9ysx5NoSK+9g8yWeuwa5WDj4oD7N9EHFOfPrXM3W2/Fc1W/c
aL0xfhVXuGw9e0zPR7BeoJ9sXQinAX8OLOOQs6oPDL+5TaS2yxnjgR4F1r7U
xpFP2RQftl4Uffbn/iWt+WXrS+QZNqKupicq/0sVHfu3Q0/iFT3WL1tfotvQ
DJ7WfEFP8Nz9VzK0a30inMuBYDfMeMOfQI/3xbjAn70vsfErenP8QSrPgByY
vSLIk70vsXlR9gTzgvfCfgXsJ7PDxPUf9ofpj6r3Qn8wTsQhTA9V3xrzC6qu
Cz1n/oKwLth6JOaPVDzD1p3qK2HrV8UPWL/MnxKzJ6oOAHvC7Bgxf6r8O+wV
87/E7J6aN9PuKftGzL+r94BdNePkBPG0+vOrB+a8UfYRcqpRcGnklKOO+wrw
d4XnbSzp3eaukificdhz0AMvUeZO86nul1XeCD53+xRpUsAep8n9SGVvI+aF
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
s+wD6PG+ezJ4F2rWPKvC8dyugVUHV5iVVekbnlu8kE9X6zsO0Cs895o7eYzM
llLh4BNQe9T1LusdeSVwxCdmPTNEoE6FfyMeP+U9rLHlR8z9giCRvLrTej1P
h53IuClwmZWn49943zZB8/wq5SnA5GwTiK+g53ju8PSnGgw94Mh/8dz7sVe2
PtHyYvB5dXD/fWtfBnqO5zrNm3Vo88fa7H1tAnGgWQ+3UTvXznmTTHLED8gz
MB4zTgiilNfF6mla/KDizNYZL6XX4gfweZuh0OGyWvwAPnnH5HArrMUPiNcQ
35rrwkYtBm3uO9oRP6h49Wh0+s56PIDnYh5Nvx9EHwYdyavHA8pOD7t3WI8H
wMfjVuWRejwAPoM3n+yoxwMYP+J5U89t1Fu8qmfFA/DvoMe+iSnPEEJ+wewG
IR9hdomwXphdolwpHlb5WZ4htGz1zJ29Nf+OeB/rl+2f0lsf07/jubAPzC5R
m7R1z0Rr/h3PTXhwdKju3/Hcq3WHH9X9O557s7jp3/Fc//p5rgdr/h3P7dF7
2T7dv+O57tUjVuj+Hc/tVfO37bp/x3OP3zX9O/gUyF/aX/fvmEfsA5p6FULI
T5k9JOSzzN4S7Dyzt3T9I937Wa9CaEDFJBd1/67606TfYfu/lPSM6d/xXPg1
Zm/p36nbk+bU/DuemyNuTlHdv+O5PZKl3av7dzz34zrTv+O5E3vc8xip+Xc8
97LHj8O6f8dzc7dYcUP373ju4Om9Itdo/h3PbbDS9O/gc7po9c+6f0edEHEO
i5NpoJctxEPz78jPEEexOJzqpjH9O94715rgR7p/V/dPyLiOxcmU51DCKd2/
g497rAjX/Ttw1FVYXEpm34uKJwnxOYsn6fTkY//q/h3vi/ifxat0OpPp3/Fc
2/rJc3X/juciH2HxJA1Mu3W97t/BZ+CAVln+0Pw7cNSXWPxG6IOC3UA9DHmi
Oqcn8zCXsY1u6f4d+hXXMVOg7t/xvg/Pmv4d9KiPYRx4LvJxjB/PdX4/Jq/e
dwE+rz5VX1NP8+94rtOnbYZ/x/9HHY/1MZKZV6p+P0J+bfajvhepDjYstt1Z
3Uug4ueOtkYfP//p+G4L9lePpK81eOpRfh7wtZi6Mc0i61wh63cV6Ldnfb8C
ffvmPniAGFbhP69MOR3nUoG38/JdsKjiU7ZfH0DX/d1XNtjyhPEPpnVNN/fR
3wt4lleD4vX3wn7TTLfrf/n9/F60o/CWjPp7oX6DcxysvkFDSp+qoo8f+JG2
70surKjO46i8EvOL8QB3zzfsab+CZ9m+23uBejv8Eeihn5AL8PnFim2LuOzN
9sveC+xTYDywWzgfZJ7/ihbrc26/nsEe75n7fdEC+zUYD/jgfBPGA/3ZfzPU
1ap7m+e5okX2owO3WPGYuX8XLbAvBj2AXZz/LnUBiw/kCxzzaNYVQ0XlUrUu
WPzBR/URSfmY9cBQkXnZ0DPpGjj2AUE/PVPivODfyIOwX2zqs00gXgV/0GP/
3dRzm0B8jnmBnBDnm/fy3SeMR9VZpJ6jzwfzAnrkKZgX1VfA9AR80DeF8cDe
43ylWacKJcjN3BcIJfSVqfhY8sH5UIwH6xHza9ZPQgnzaO4vhBL69zC/8CfQ
N8wjcNgxs98vmqCH4IN5m8/0BPRYF+CP/4/1a/YNvif0tZp9X/GEOqfZX/ee
0Cds9kfFE+rAWM/wA8N27+t9ePALJX/gzO+oOq3pd4KVP3HvVzvtuIMOOQNn
flPpKfwm1jmew/y7qpvBv7N9AcHiCsUH8Ym5nxIjEG9Ab0DP4iiV7yKOYvsC
gsVvig/iQHNfJkaYcZ2631uwuFTZGcSl+HvYGRYPqzoP4mHQgz+LtxV/xNuQ
M/iweF7RIy8AjrgJcT7kDD4sH1H0Zj6i7gkXLM9S6wB5FuJyyIHld6r+g/wO
9ODP8kfFH/kj5h18WH6q6JHnAsd7IW/FvIMPy68VPc+vYT9YPUHFP6gnmH4k
SLB6hfIjZr0iWNEXe/ExfOxBLxVv47msDqPiFNRhTH8UJFidx1FHknUe8161
IFEorv+Oo4P5vaxBBNy0M0HE6lqqzmPWtYJV3Ir3Mu1MELG6nPInqMsx/SdW
P1R5PeqHbN+ZWN1S8UH9k+k/oZ7J9I1YnVbloajTsn1nYvVhxQd1ZqZvZNaN
1Xe7iNW9lf9C3Rv2BP6L1dtVHop6O+jBn9XzFX/U85n9J7ZfoOix78D8AmEf
gdl/Yvsdit7c71D+kNg+jtJr7ONAjpAD2z9S+Rn2j0AP/mx/SvHH/hTzR8T2
vxQ99tGYnyLsizF/RGz/TtHz/TvEI2x/U+W/2N+EnQHO9k9VfGLunwYresQJ
sD94LttHVvEL9pHx/sDZPrWKc7BPDbmDHnFO4vufEm8fD9vY9OJHkTakSVHn
3F4+XU6e8PcL+0DAJ6eqazuWLprlj5Gi2rKmLg3t+aNZJ48UkRn3115sz9ck
HzEqptiPNrfeCCcfW8eca0NZvhlOuc6892yg8QHeoFrZ0IUan8T/bx+3y2Sv
HGsd35ODvGs+LF1o8WDHvanA22fOXn/sBVd232aQGD9jf9LN+WAPHfdR1QkN
CHZ5+UPxV/p23+QPvGUWkz/kXKJwgYo6f+A3HxUsk9XO3+z7TaCvJ/+Mtb5D
CvuDfqRGJT+dbOit7u9VdYkPT6e1tu7pxTpV53ePFe5o9c9j/iD/GnmXTt46
/amaV8gzZma1c1umO86JQW5x9913pa6ekd+XIqKqFzxi9aWwvmvx5euKV1ad
kPU/i9vTN67U6pOKvlbCwjNWfZLdWyIW/tibaU4uN9bvekNkvNjtmH5fCvis
H/DfHqvOzPqKxf0fsVe0+raiP7IoZptV32b3GlHIHfN9UTdq2+7lV/19sZ5q
tXucrpP2vqqf7nj7W/r7gt57y/on+vuqfCfJPuN91f0hZ0pv098XfKrcubBF
f1/QL79afan+vqBv//LZHOt9WZ+5OHDn27HU69L4mHp1X4wo3TXpnL6O+3hx
bjtXquhCtTR7iP5WnySuc/se4XiAaLLJre+Rdu5K/8HnnzauTazvdJh+2V+4
rFw3qUUSjgeIs7Z3cT6ZUqnxQ26fbpnjV/6xjDl+rJdW63Lt1seP9XJhgFuO
ftr41b361QZt0ccPPvXdAmmVNn7wKX163qDftPGDz/e/tn0k+/jZ+WUa36Ja
tkONkvBzvlSlo1uuhxfzs3v8PtLpG5fvxS/9zvuXqOuhfemK1E2r9Bnj6Xj9
YvH1nR33MwMPjLr95FxaJ3Zf30ea+mLZ4xkNPZS/VudRkk1vPDZbPqW34FOv
0cis7nXV92oVPrZI+9A7Ofn+r7/YWyfFh/nE75f2F4VziGU92rqz/Qt/cahl
9o0PfB3fbQE+of+yYotypFL88dwFH8eUXaDxB379pvcDnb869z+52q77Gn/g
Rcd+K7DQzv/qqpQHj3+LV/n+9vE+wVPrXKFgw04miMDwN8Nq3XDyAQ76EOl/
j/imeTy6/ztF3/9P5yENR2fwOSfrv8DHJ7uRe3qebAoHn2B5b/Pt//F/puiP
nwmd8edYN5+zxvm7BHFp9+CFFV/l9zn1v39fVPibPD0ndSyO+5O3VgOOexiu
JNKrugRt9282You3zyXDPieIyUNff7b4A+d9YncTx6nol3/1XzLAPs6Lsi4M
/IVH8Roz7O8LHHyayfuxjyfKTdHvCdsys7FdbuY5uwQR9PVqljp2+V9LnC+F
L2404OO12LeEecS6mZ7d9cDd3VvUPAL/S/aJQQ7A/87o/8+95AXU+/J+JPBH
/JM06Nvu8cGhij/wQT+Cm72zxSl9AJ6nxewBobVSqHkH3uBTio8Ho5zVvAO/
vfd7Qv5VOdW8Ax+a0HrAmv7uah6B+6brODz3Ry81fuCfXKZuiJjsqeYL+PF0
C+tfv+yu5kWNs8Sn7h0b51LzAvyfu7W6vVuRxcfMfyNFQNKkIRvPp2TrKFz4
3tnju4w+kLlewsW0/MOXbLLTQz7Ad1dt/8Dib66LcFFtU1C4NR5Tb8PFyHRF
Jy1u7cn0M1zkKXukuiUfvK/aV2z+aqIlT1MPw0XhSZWGWfI35zdErM360bNQ
n+9sfkPEVX/bsvafMzD5hwjqtGXVhuYeTP4hYn66jMueV3Vj/G2iaKroAm7j
vzD+NhG4fUTfPo3T+Zj6YxO91i5/l2e3K9Mfmyglv2tgjscmRhT2/3DWn4/H
Jmreybu588K8TB/sfHo3HxU3IxvTB5twlt9xwPjh3/cNPT3rh10/MH7go/1a
H04+0EmNH/i8LSHjGmn2EHi5rD/8LXuI8QP/Lyrt9HveDn0GfqL+8/6pknio
8QMv1LV+Zt3+AC8l+TP509OLQ+rM1Ow88LSynsPkTDmlHJicqc2Ld9V0+8n7
Z5g8qZicL6ZvlHrOhD9uaPYKeBrPxL4Xpm80f4PTv7q94v0VbD1SiazPXcdp
9gr4jLcngqM0ewU8z8lbw59q9gp4MbleYK+AF5LrC/YKeF65Htn6pWPXIv7V
7RXwfa5bb+r2StGXrDlVt1fAK0n7AHsF3F/aEzNfDqfJ0v4we04nN5XZslSz
V8ADpX1j9pxmSnvI7Dm5S/vJ7DOdvHZsuW6vgA+W9pzZZ7ou7T+zz1RH+gvm
7yj9huExBTV7BTzH0Kr9dXsF/MmMjxt0ewW8+ta2u3V7hTrD9ZG+B3R7BTy2
SEyEbq+AL3nwqY6bZq+At5R+n8UhtCHgy3PdXgHPuiy0p26vgKctHuOh2yvg
V2QchfEjnl8l4wQW19Gqb/9NT6HZK+CHZRzC4jeKkPEMi8doioyX8F6KXsZj
LL6i7xELKuh2DPgRGe+xOIrGyLiRxUUUIONSvC9+x3bPu6Rz0E31vq7svAPe
C/ul+J4axn9F8vk9IsfYztMc9s2VnSPAODdJPpXld+gwjn9zF7mztHesWNZq
lVfVoevVeNQ6+zvxvBueO0fSJz11yTNbWod9Az3OA4L/sjIr3r5cHSVqvv77
5ZlDjxVdAbnPflqef8T84vd5cqcL41c6qflFHair/J4gxrNE8j/wrEfzmwUc
cigo+Q+X50wxj4ck/wnJJ0T2jc+v5OMp+U+X33PE+GV9RswbNePwms1xavzY
r5/aeXG+UxeSKf2s+L/85ZUY2cq7YPYamdT48bty65UI3Z+6SP41O+ZcfOAf
h/3ZhO99FH3Upl2R/Gr85SX/AglxIsXyPGr8QZL/36Wd+ur+NDEPfizO1flt
ePfP39T4kbfVvFf3zsKLDnkWkPQZ/Y+3qNbZsd49Jf2Erft86992yCeRz3Vx
/Z+qIc8iHPantqz/uB5fXr342PRKPol58C3x8MXwqX8mOPIsP1kXGiG/a4zx
eEj+M2qfqVlsjWM8tST/CyuKnvr82U3Jp7vk3/NO/pebyFXJZ7Lk/4/8TrTp
X1aKqTfLLJsQFa3G/8k5Mc+t7unhfidXMmY/D4rpP35E/jPa2REvyToJvteM
8d9zTuTfuNuJ+fe+O+Y3RvLP1DFJ9lttHPM7SvLPa6sxaIbIpcafOB7H98pN
+2mPy5olT99Vsyf/sv5njDMz+iYkH2VP5G+fgH59dXsym/UhYzw5JJ9Y+b4Y
T+J+yAP6bdaI2RU1e3JZ8vPpZtqTCEm/4GX3gro9wS/usQH/xHrMc2odUvBZ
oGZP+sp+jEryvD/mK1jKdaFnvjS6Pakn68c15XelMZ5Pkn+/0f/20e1JH8n/
kzy/j/nCb91qFfP00+xJfck/h/zuM8Yv68CUq3yFsNWaPUFfx9CJd9sHavbk
9z0nM51NFUGTdo7Pk02zJxfkcybJ9Y7x/y35Xzq1YbduT15L/lvWNflHtyft
Jf+xjRrUTanZE/wukfYK4//2eejjqxNj6MDgqeV1e3JQ1nWqFfh7sm5Pvkv6
FykOttftCeg9Jy5bpduTGuOan4jNHk/nFg3vFKbZE9RXh555sFy3J7s6LQsq
XCaOipQas0+3J6i7VpTf4cV4SPKPTxpQWrcnHyX/4GWzFuj2ZLfkP2dOnmO6
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
r8Gb9np0VxCfjNzAH9ybuik41yA3fvfQc5P+d2H2LWa/aH+j9Cr6EL266sz5
J18K6UPwJ8XvRL4h+PcLy6U/HtKHdh9btO/K7SF9CJ4k/ij0A3ijJ75tuSek
D8E/3jp2fFgfgq8QLxb5ueAjTnZpFtaHFg8zqM3J2iF9CL5TvFvsI/Afl999
Z1gfYkfq6nxU0/EPzH4yqg/xf86Ln62Gaz/3yag+BIevDH0ITv4I7em/l3jh
Frr2p1Kj+hAcnjT0ITj5LLS3uG7x0SW79p9dG9WH4PCzkacDTj5OmsPX7ovq
Q//+gj4E3zI9qg8Z5yLx8vVx7T+cHtWH4PDUZTreBvKPaE//14gP8Lhrn3tz
VB+anJOi+hCcfCjamx8uHsKVrn32vKg+BIev75zjkSCfK8vhbYQrX8b8z5sG
jL0z0G/Lpd/Ar2mQMTms38Dz/Li0baDfmEdw/Enqo9s7b5vSuQ+E9Bh45SPZ
6fVCegw8d1ZG92IxPcb4zU+WH0v8s9UZmF/ghcFvfGf38MYPoHcZ7qvRe8vF
H8J7t/Hd6T2I/rnHfrPmosJB/7qvtvPFhQrxdzHes8yeXljyp77l3Qr84Idx
/Y8+sfoMj3TN2BHTk/ixxiuv8wj7ArzVtdv3B3oM/9Z4MHQ+4l3bx+H4d7q1
eqeDnxe5lV390cWgf/rBjpDPQpwT7ZM2DJq8bVWCL5j25OPQv78H477L+A+l
5y1eXO3Rt9w70X6z7BTyZ51j75A/OPYX+du+1viRP/gc3RMifzvPSj7IH/wr
3XMiNx+fs9C9A17SOyDyYV211vwiB/CZWifIjX3BeQH5gLfSuYbzPn5+Q+1H
8jrBq0T3o+G/n4vvR+6NwZtJb5DHDe70huF5pTeOu/eRW/U+Iv4owzcWiftj
vR2+RXgfh38gfKF7B3lD7yDixTK8dYG4H1jL4S2F13B4mvBslz8Lb88ql/cK
z88Jl98KLxD3UeDwDnGPBA5PEfdy4PAanY3zL9k+qiH+Ja1LwweKv536Q+B7
xOPEOrT4bflLc+J8U7bvzohvarXWpfmx4m+n3gM4vFXwe4BftijiNybirIrF
/UZ4+fHH2ssfJh8HvHnUH07wWckfhi8e/D758+T/gjt/3vAr5c8fd/eoJ3SP
yn2IxTkXiq5bu/8sFF234G8Xiq5b8A90v8r9CTjnl1oOv+eq6LoF7yScdWJx
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
hH+hcxnt6W+p9AbtTB5qz9856R/+/yT9rp2jJAc/Tv7do/ou/j04cjD+Tfal
7JHd/wpPkV2jPev6Qdlf2ls9dtlx1hnrutWGko2DevSsJ/Bnau6vdHfdBK+9
1XVaH20PPqJ+vD3zxHdzn2/3qi6OkX3Hv5uofqx+pPB0+VeMj3/X6OVtT41L
qWRyo32r4d/NDerzsp/tvU/jN7454RPk1/E99N9papHVxc8UMHnSftpvJYuF
684jJ+5/LJ+fe0idLxgn31FU+8XqP3Hu0b5DXqyX86ojY3lcwvPrfQ05+/go
xsn/n1IzKmfwcnWicuY7OuwaXD8sZ/OPeuSJyBk8bUNUzhY/0zUqZ/5d53rv
tC0RkjPtH8oqVTYsZ9bd+zqf8u/Bd+qca3kjjhfF3l81L+XkN+Z0T+J5RYbL
LzW+VOFj5Mfau5HG08b51fz/Qfoui7/UeNIlB/+eRZ1iftd4dyV/q3+jfm7T
fLk69Skvat1aXKnG2UPr3OJd1J76xa6ufUqa9pfFe6mfetqP4LSnrjHzwfh9
XWlwX1eaecGO83uGuzrjzOd5+S20B8+n98poneXFzU6oznK0bvLiZjVUN/k/
37mFIg==
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFnXXcFcUXxu+79+69d/NVlDQAkxIEO1ARUOxAFGzEbmzsLmxQUTAQO8EW
u7u7MDDBxEIU/T1fnvHz+2PvnDs7O7s7uztz4jnndN3toK0PjCqVyq95pVJV
+XGzUllbxBsqx6aVyh6quymrVO5NKpXLWiqVcY1K5X7RU0RfKbpdvVJpq21q
XKkMVvvnVfZSeba23XXsjTp2Ee1vo+0W7ftJfR+s7Qod/53OcaDoWSqPrVUq
p6tuvo7ZV/9PFX2y+j9Y9ATRF4p+R/RE0ZeIjtRfi7ar1ecRqj9JN7GuylN0
3p3Ux2Sdt6b9VW3Xqs0n6n9si+9nD51zfW1/iD5cdYdpW1P0UjqmVN9flpXK
uaLHiO7TWqlcr/s9Xm2O0f8jVf6utmtp266oVFZUP7dr7H5R+1jn30Tt1xa9
mNr+oH6669hzdcxZ+r+/rmOO2l+t//uK/lr0JaIP0XHXqLyCc6tuP23j9P8A
lftqi0SfqvvaWee8Rn3vqfYnq+4Etd9T/bypNifq/w061/4q91b9m6KfFf2M
6Md1zOU69nZdb1uNw6LaHtK+T9XmEZUPqc3Xoh8V/Yjo1dS+rcrVdS/Pip6s
Yx/WsWuJ7qj6tVX/hdq/qvav6P+6ok/QNczXdR2q6+mu/l+kX7V/TPv7q/2p
2veu6t6iX9W3Vzlb4/O9+l1T7TdXuam2VUVvonIZtWlVmw117DKqW0rb8zp+
Q+3rLXoDlXfqvEfw/NTuep33Y9Wfrf9TRF+j7UzRE1Requ1Y0RMZq5qf5b+i
/9F2mbal1c9Jqjte/byt/Se0eKzna9/f2i7W9q/ub2Nt12vfFvp/pOjDtc3W
daysYzZWOUf3eIjqflJ5hJ7XpurjCt3H3mo/Q/Xn6NgDte88lWfrXPfyPujY
O/T/IP3/Te0zlQ/one0rehOV/+i93kn7Z+n/raJ3Fj1b9IM6bjrjpv/D1eeu
KnfUsRfpXrYRvZXobVS/pejNRV+m+mGitxb9sI5bVXQ79XOt+jxW20zRO+ma
F1X5Fu+atrai31Y5Qte+itrr0Mr9OnblFu/7XP2vo31vqayp3EP1P6j+Lv3f
jTHUAWfqvJuJ3lj0SaI3Fb2R6G+bfs+/5l1WuaW2RbRvoNp8qvIjtVlWdTNE
t9H2sf63Vbm4yq4a64W1b4q+u910fSvonF+r3FZ9DVebbdVmF+1fXXR77btD
9duL3k71t4jeWvSWog/RufqI7i56YdHrMA+IflH3uD7n0rGviR4kegnRF6vN
eqLXZl4SvYLobswJotcSvbroMaL7i15D9HV69her3Ejv8O2qP0v1p+l/t8Rz
0RmiB6aen5ZUuVTid+9Y1XfQPSa6h0m6x06ic9FXie6hPtto/1f6dhZSfcpc
qvr9mFO0raTrPEDlHJUra5uiPo/T/6N1TKn2r6t9wbejZ36Q6n9Rm45qs5fo
3dRmcdGjmXtEj9L2s/Y3VQ5I/a10UnmJruFU1a2o+9pa4zmE71L/Mx27ouge
ok8V3U90L9E3qc3GoofwXHT8YurzA5W7ph7jD1XeoOvZQG2+1P8ddY0DResW
K69o/F/Wtq3+T0v8fZ+ufhbVPXzEO6OyF2uM6jbW9bTT/1bVT9aYdBZdMt/y
nqhcT9uP6vNKtR+r9huofUN9b6r6m9XvA7q/efr/gOh71eYutVlDbe7W/2G6
vuN17L28R6JPFH0P75roE0TvqoudrPbXqhyu73Zwxc9pL/2/TeUUlQeqHKT6
XZgn1OY40bcwVtr3u+ra61x/6/wddT3D1e8o1V/P3FZ6nt5BdafpmLqOPUT0
06L3KnwPvVU+qvEZqvrHVN4T+TmuqjY76F42UD+91f8Vid/nQfp/TuJ5YGXR
26nNqip7qM0ioltEd+fedS13Vj2PtE38XX2laz0t8TywInOL6iZU/bxHaAxv
q/p57yj6gaq/t6qu7xHWMpW7Zp7fjhK9v+5tOt+KyrMSz2eb6v8lib/B9Rg7
HXdN1d/ehzrmKdF1lYdrHE5lTlKbZ9R+hO75WZXtSj/Ltiq3YE1U/aq65j6q
68H6yhipr51UnqHjT1e7v7S/Y6vXwB1Vf7rqx2pc9xZ9r+gVUh+3itptrj73
Ff2rypfV54ux//dVm4NVrqY2F+raHtFxGzCXqv+rdI0PqrxAfR6gNg9r33M6
bh/R94n+ITH9I9+Q6leo+rpvZM2p+hvrrn4PqpgHG6m+rlX5iMq9mVfVtpv2
76T/l6t+uso9C69b3VX+qvN24Fmo3SKl1542peehTSLzRTvq/2WsP6X5po0j
83A76P8E+D6VPVjbKub94OW2VJtDKuZbNhe9n+irdL4/9H8ZlVdo+17nnlSY
X9uI95o1IvBCm+n/onofqurvY/XfVLtnVN9QuZjqU9V/rvpVNY4daKvzD9Cx
6zEXcd3q+wK1X5w1TNtS2rrrnuoak/NUX4NH0PGv6Jwvq4/TddzlNc/72zJv
qP5AnWvD0msfa+CWTa+JazG3lV7rWA8vrZo3Zt6fXPXax7y/cek5jbntLPV/
bc1rwAj130n1h6n/T5teR2eonKK+e2n/59p3pNoeLfpP0Xer/bGsyWo/Xn0d
KHpP9X1J6ue+i+g/dPxR6uc3lUezdqqv9VRO17GnqM3NjLnaHy56P9671M9r
N9YLnatV252sf7rOjvBC6quDynbaHlf9Xvq/p7a5OuZvxkH0PJWvJp4H74AP
Tzz3TWMdVD9L6Ngn9f/ruvnM41Ruq/O207W10bFfNj2nz2QdbpqH2V7HdtI1
rwMPrvINXffuavMS87b+F9r/ha55Q/V/k+p35jpV31D9p6pvD78tegV9s5cn
Xh+2gR9W/erq8wz1t2TmefhElQ/rmobwLqvcpPS6w/pzCHOj6FNU7qdtXeYl
lR/r+Bd0zrQwPzYAfl/lp8wZ2pbnfKxLarOs6FGi+4leTPtG1Pz9Lix6I9Hb
8C0wf4s+R3Qb1W+oc7+le1tR5Z/wuswrupdhNc9RrWqzqe5rLvKG7ut70b+L
/lX0XNGR9v8Lj6fjc9F1Hd9PdCm6KbrCWql+/kGe03nW0raQ9u3Cu6/6jqK3
Vpuayhb4do3JszrsGfVxEXylttHa94XOOVPbJO2bqfaviH4J/k39faPtCfV1
Rmn+ah/dx9NV010rnu93EN1HdCz6lsj82dc6bqT+j2B9Ut2OrCNq01J4rflb
78Ao9dVNdbdpzG8P60kb/Z+Xez78TWWLytt0/FYtPu+KkfnL23Xt80VvInp6
WH866tiN6j4P/Myxuoah2jeHuQJ5Ve0Haxymqd+erPc6f5J4bmmonKjycm2r
ad8VKq9T+zVE36X2a8KDq/041inV99D/LqxbOtdpOudbqvtEdYtpW0ftblD9
Oyo3Lb0OX6nycV1zVccPZV3KPH636NgXVbdSZJ7+Al3zypH5+Ddq5rm3E313
3e/8lir/0v6bee9UPzXIERurHKtj+0bmxadG5vd4LtvU/Q0i98JLHggPrv+7
5+YPT9C17Kt961c8F++U+/s9QPU76f8qqh/Bu1s3r7GYxuqo0v3zXXP9yAI8
yzNL0wejT9AxdyHPqNyhYV6VNWAX9b+B6tbTt1DXsXdElm3gV3dpCedTm+76
X1N5v8qDW8xX7d/wtS+pa9ioNF8zSeWjNctRW6jdY6L/jczPbKH9y6n9omof
p5UFCpCpOvf9upf19HdblftnvrZZ2r9Xw/NA16bnqr3VR3/m1tw897Fq21R9
/8hy+JjSPBjzD+/4PuE9XyQ3r/6D+jw689hC767++4netO41cFTg36LU61uH
ptcw1rK/ddybeqZvaGvRvg+1b1GVC6nMdXym7TXWuqbnoUxlqbqi7nlnvP7P
V/9/65xDdf91tamq7hOVnbUtp31v6hx3sLarHMg7qba/6J5mq49pqj9X5bqq
XxJeQPVn6/hv4OH1/wLRf7Gu8e6oze3Ii6xROveuNc8/K8Wef7ifk0RvW/O8
96fojbQ9rjE4Qsf8xFyd+71lPkEmWVFtL9H/N5hr0A2Ifkp0o27++Gkdn6hs
1q2Tgu/6l7ba7tcY3qM+5qjvzXTv81Q3F3439nzLPAhPt7y2P/T/Hb4dbVV4
/dhzYyx6gu6xwXuo8m/18yPPVP0cpzYD1eZPrlX1X7LWN8zvPavtN/2/JPc3
uqOu4Wv1cY62kfr/cHjnmQfuE31v1fPbaLX7nmldc+T2OraP2qQql+KZin5b
+5YVPTc237Oc6Paq/yjM6dzT7+ilVN9J24ex11Dk9e9591OvS4Xu5eqm17hB
Kq9TX9dqGwwPn3j9alG5pPpYgvVQ/dR1b73URX/0eZn1Ezvq2g7LLG/dI7qr
2v4ee02a1PQ62Z7z6P/p8G8t5rd/UbmEtn117LesG7pfFA/LqNgMuUBtL656
jp4W1hTm+Qh9gdqs3bT8Mit8szXV9xQ9TOXVyNBVz9e3IPNV/Qweq3r+Zz26
LPd475ZZT7in6LV1/MiGdX7wH4dmphm3H5vWZ36v8rHIesiqjqnUzKfdIPrJ
yHxag++haXnzfZX3ZObr4O8Wjs1TIUt+V7VeFH1rF+27WOV5jIHoq1rM38Or
w7Ojo4U/h09H5zq8tP4TPeiI0nosdIff6Hq+1nZpi3V1yLHIsMc3rVd7Tn0+
1rTe7gXRzZp5v1v0f00976kqb2LdbJpPfFz0MfD82hKOV5tndI/HaP+DmXlO
eM99S/Oi8KRPJpat79GxjyeWuZFh+oueLvpe0XlsPhNZe3pifRuyU+fYMjDy
7yuJeVhk50ea5j2fEP1JYr0m8uAepfln+OiHEuvYblT9r03r8d5V+Vrk+aq9
tm+1r6PKzio31/Uvhz5OfQzV+9dT7W/Ve7Gl6pdX/RZam57S8W+q/ev6f7Lo
95kn+MZFfyj6PXQ0KtvBL+g6PkJWFP0i+iXRT/NeiP4r8bxS0XFvMIaqf4r7
1TnfEV3yPCLrTlvZNA5lbN3uO7q2U+GrdW3D0J/Ca6rcStsA0VuqvBZ9DToD
XfsyseVbZFvkM3SV6PEPRb7UFrdYVvtO22TeD13T6ypfQ1ei45di/DQmQ0Qv
LXpTjcMGuuZZ8HSsAYnny9/gV9XmF5XrqM1Pov8RvW6r147JvJ8qf1LbTrwD
8EnwaVXzSD9wHS3mn17SsTeqfF/lKg3rLBdDr5lbv/e57u88Xe+VkeXlE3WP
q/FOih6rNhlyuo7dH50yPLPoLyLzachgPzB3avsWvkv9DEOnpP+fsq6pbiPm
3bpl9PNV/lC37H6Byi+0r4vabKbyEOb7yOcYInpDeA7t+65u/cF5dY8bc9uG
Kt/LPOcNRgZS2w8i86KHaQyX5X3QtV+m+hsjz3U13ec80bfq3m8L50InsBoy
OqUOeUjn2FDl9iq3qLsOffJW6mvDFutId9I4LKFj5uu8B/OcRS8NPyh6u6r3
XYT+qWo+dl/V76NtSda73HPtzjp2+8Lj9Ifo81XfVvQ80Qei39DWleeh8mqV
XZDL9Vy6xrYZHA8fW/X4jFObqyLLGn0alsE7oh9T/z1UF6vvvqrX7VRW188J
qu/HOsX6Eng52kX6v1KL9dUrqL1OUVlN7ZeLrJdCzq/m1mO/ozZfRtZ9w89P
Qk6pmp8foGNZctbXsVPU/02R14tTCvOPI3WPKzWsE+ik61ytYR3zFqKHqv3W
Nb97SW4d5kc618CG5c0l1GZww7rkJZuWa3jW6Ex/DPoi9Eaz+dZUt1XmOQee
ZQuVvSLrwNApTMzNI+yeWcbpGVl/fVFpuq79X0XWq7J2b8/7rOM+5nvRvawC
r6g2FxWWIfaCd9X/AS3Wx/ZvLHgFKwPg8RrWbyyua14jtvyInmsbvasH8U0l
5kUxJHIPc0S/Hf7/Xjd/N0Hlu7HbD1THf+j/q6q/rO75AR72R2Rw9bUd76LK
37TvZbW5VOWPkb9xeMqf4Y9VP07lWUGGuxt5KbVsxffVnjax9Xcrqc3hkfk8
5iX4r+9UbluYj7sH3ZLavx5bN3eJzr8KvGfk7xg++SH1+4XqLmAsWVNV3z7o
r9oWtu0cqn6Kqunh8PTq7zp0VWrzmeofjnz8ifA5+j+QY6vW3WEjvF/j+xDf
jcoN1ObdyN/IRmEu4Rp+1rO4C5lO4/NS03PXeay5Os8ukdeP2SrHRbYzTUvN
e/P+/Kw2LwSd45y6ecLxKrtXzatO1/9VRR8dWR7oondpJR0/TPP28DAmyBKb
5OYt/2Je1/Ef67jJdetDePefRFeiNmlkHnu7wNc/pL62Ev1h5HbsZ35+Su1/
qluffZHKbtqW1/YH9uLI8wN89ngdOzLoJSaoXF3Xc4zol5uePy9R+VzdfNGe
KjfNrTNEVhoZZI4ndA0/aQzvrFie6V31O/A4a03Q4w7Anqvjn1PdxSq3Ljw+
d6Bfafo5DFT5q/a9BP+msre2FbR11Hay+vko8vz4r/7PUJtrkI81nkeqbuPc
48z1vBaOp59Yz7Ql9dz4qvpfRfTHzJXwh/BmFct3F4Wx+hdblvq6sMV2xo65
9bmX8f7ntiVdgE5G7XdR+1F1y6fYireCf0U+RDek62gtXH8AcoDabBjZJnqp
xmi3im3us1gbItue31GbB0SfBr9SN5+5G/eOfRl+Ap6lajv+UPQJurdv0J2q
fL/q46i/T/dwH2sYMnXduuEfRHfJjRG4Qdd/i+iXRD8t+s6GeeQV1OYBXfNz
8H6sR5F5P3SgSwZ95DHMWTrXczx3/Z/aMF/ZC94bOwTzv/q+vWFbTE/V99L/
u9T2V43DmeqnS9W2mPGl7Qsrav9C8DAat3VZe2quh3+9u2Geeoz6GZabx27R
tf2pNs+qzX0tnh/Wj2y3BmOAXfocladp20jH/qjzJjpXV5VD9d11LIwROBq7
WW5cwNXoVdBNqP0+KhdX/fgWYx568D1rW1jbfvDMOtfl2je+4fFeR9e2RWTZ
4uCKbXnYyS9W+YSO2RFZm/dR2wGi9637P/Xf6NildR23qd+lVH5b9bMGn3Gt
rmG69vfVNT+v9nuq/V7IiLnlF3ALvFfcy67ad0TD94ued6/cuIozMvMyhwZ+
5mDtW0Pl1mBMcuM0GJ99Uuusllb7J+uWd0aqbNV2ia5tzcg2wKPUfmPte7lu
WWA/1oTwjvGu8d1cpG0H/X+2bhlqD5VHNnxcF2wy6meM2myi/wel1if31Hk3
zK1rRaZeKehrn9e+v1jnkHdULontQ/u+VPl16WdwLfysjl0CmUL114teDDlR
5U3IyciluZ83Y4X9l/e8je5rOt9oavwINk2+i6XV/sHCaxjzGPw/8xTzFfz/
1NTr15lq+3vp+WuuruE57VtWfT5PqW2u+vla5dWpZax52DtSfy98Cw/r+M3U
5vrCPNgDeqdPKsxLvIQNBrur+r8TPXNpHQm6EviYf3Pr/0YFPnwiPGJhXnRP
1sLC8zLzIbwFvN91qj9U5YPwnKq7uvA3W6jP+wrznzuqzRzsgdq6qP4Zlcvp
3J+ju1F5jf7/ojZTVN6o7S/4ucLrEM8LPfvrmeU18Cff65hZem4bqPw4t3w7
g3HLbYP4Q+Xc3PbNXQtjptBFo5P+K7fuGh32e7nxIe+r7J9ZRkNW2yYzv/Il
cwPzS6CPz607OIHjctuHjlI5J7ft8x8du3VmrBGYo1VEnyT6c86vfk4JMuB1
ok8M9awh8NnYHX7Mba/ahXvMba+dJ/rJ1PYL1u2FM+vkX9T+n3X/n+ld/Uh1
L2SWc8G3zFL9VxqfQSpHYb8P7XcXPapq203HzLpR7DkrZv5+XlH9W7nlzLdV
nqT2G4huT5+57Wo7i15Ic8cNyC3q/+HUdhN4n8NE7x36OUb0IPgQtX8b+Y/1
Tu/WDF3vRPQZOr5/bptFK3qamp/vhcxl6Nz0/g/UeWbFHkP0h283LKODSUIn
8J7qrtT/pbg//X+BNS5zHx8iU8TGprym+ud1zPnMq5orBhfGKa1XeF1Al3Ky
9h2o826s8w7SefcubTe7UWWR+nt/Gt1t7LUGXcwiseV/1ra2PMOq1793G76u
U9R+edW9HFnvwHvxc4v5wmV0fUtr+03HbZBbN/gbOuzSmIHBqpun/e+o7STm
vMjjyBjybG9SeSb3WLVOFfn/mLr3g73ZP7cu4hX1+XLmcUtVnqg2V4kerHH4
Tueera0fPGPN78/ZFeO23hI9AXm4dD3v1zqF7Y9rqDygNAbtZpWPqY/dItuc
ji6NC8Jugq4Ae8p16ucknffqivU2o3PrXGYg4+v/LRXrpuFvsd2jh/2wYX0D
+Ly3MtNF5u9+quhz6n73bxa9ErqczP3wLs1S/TXw/mpzet2yBjqRVyJfG/e1
h+iPW3xNfPefib6+4vdwZGQd0Lq59RsLofvNzItCH1Nal4Ke/Ijc+pFvM2Pi
Pmrx+J5f+n1m3vo86FJOVvlm5GNp805kfcZtPFNd360qh+i5vIg+R/vOVPl9
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

          "]], Polygon3DBox[CompressedData["
1:eJwtnXeg1EQXxbO7b5PsZjdPBFTsvYEFQcRGF5WuKKgoAgKCFHuhKV3hQxQV
FcQCFlTsCDZsKGJHESui2BHsXbF858fJH3lvJlMySSYz95577t2d+p157PB8
EARnRUFQo/9PVIOgfjEIXs0FwYJKEOwaB8EIFbxVCILdSkHwSzkILla949Wo
kcpzSRBcofwE5Y9X/gW130XtT1P+eaUvVr/j1H6F2u+i9nWU/0v1R+rcacp3
T4PgIqX7Kb1TbRCs47/aX6M6W6nu3jpuVvn1ap+o7CsdO6h8ksqfVFlzje9F
pWeqzjCVzdL4xuvaz+kYr/G8pDHsrvpv6H5eVPrgMAjmqe5s9VdR/fd11FP5
Syq/WH19rfyuyk9Wn0+r/8vU3zj19YyOi9XfR6ozV+1PUvu1Sm+m+39IdU9X
eUuVX6D2t9R4zOcrvaXq9Fd6jcrnKH2DjjdVv5/O9VL5uRrT7UrfqXHtrvtf
oXORrj9Gde7j/nRoCMFtqnOhyproeS1T/hz111TpfXSuhdKjVN5f6Rs1nk4q
v0TnjtV4eqrOGJUNUNnO6r+n/g9V2RU6N0TpA1X+qupfqHPNlN6o6/2tZ3Gt
yoer/DflWyndUkenkst7KD1OY6yjgf2pNq009kZqH+l6x6vOMSo/SM/nDd3r
9bq/r5Xvo2tcq/R9Kv+Y8Sj/otrN1Lm1yvdQ/mL1t5v6b6v8GPW/mfIdVP9w
5X/SmH5U2b+63lOMS+duV9ucrtFR6Q46juXaOtor3VTXf11lL6vNnso3UP4Z
5Y9S+WHKf63+vlTZhzrqKX2AzrVV2Ye65nYay766n5LuJ1H5QcqfqzpnKn2I
yr/X2K5T/grlJ+l5n6/0OUp/rrH9oWOU+rmT96/xtUp8vaOZt3r+7RLfT0fl
d1S+TcnX3qA+R+p5XKM27yjfVde8SNdarWNbpffReGKN5wjVb67yD3TNsar/
la67Vc7n2qtsr+w7vlF/zlH+P43nHNU7Tu0bqv0MlW/Qs3hK+bP0PBIdJ6nu
h8rPVnoWz0ztT9C5E9T+U11/d+XHqLyb2n+l/D68K+WPUb6oexihNmN17jjl
h2n8N/BudM3dVPZH5G+T+dNZ/RVU97rsfXVXvkZ1uurclmrfVe0PUXpF4Dpn
qnxPtddwg9nKn6V8qOd3rfITdf0eqv+38q8rP0L5TsqvVZ2t9Swnspap7W8q
X670eSo/UuXf6lzT2N9rK+XPVLqvyr/WRfZV2xdVvouutTzv9WCc8l+p7Az1
WdK9N1SdT5TfQscTKt+o/l/jXal+R/V3ts4NUv4XlTdW3WfVfkv194LKR6vs
V9V/gfmkfHvVX6rybVW+Fe9E5TcyZqWfVvk5yhf0fJrqumt0/Z31Lrsp3175
p1if9H+KjrNU/3vVra+yZvp/eY2/oa66/u1q87j6fJI5ruu9q+N2pQfp/Wyh
+rHqzFD7M1W/r9J3q3xn5V9WnbuU/kv9lZQeo3N/x66/Vte+UvkS34vq3KXy
oepvq1rvB4uVv0Tln6hsG56p0n11rovq/Ko+IqVH6NzvSr9Pn8qPVP5PpVez
Zune92FOqL/H1N8TKv9H45ujex2me/klcJ/bqu9XVG9PpW/SuUuV7qfyH5Re
qnMNVL5Vyel1en5H6fpHqny+8neyPrIeKH+P8r8qf5fyo3SN7mp/De9dz26t
xnOKyvZXWQON51GN5zGN5y+N5wbV3VH9v6b2I3TuQt6lyl9Vfged3071ty85
fxbPSOUvqZ/dlX+T71fpHRO330n1tlf9l3VuD+XfV/l4pbuozULl79IYjov9
THm2LZnnqv+8xjCVD0T5bXj++n+87vVynSso/ababKO2bXWuoLqz9QyOUHqw
xv+H0vfwDHStnjpXo/IxzAGV3aVjtNIHlTy/ztElXlf9B1S/m+qfpPpF1e+t
8fWjb9VZqLKbVae98sPU/m+lX9d4B6usI9+g6r+p/FDl8+rjZt37Wq0Xq5Tf
TP201vi/ZDxqv0jn6uvaHyjfueA5wlxZT17lZ+rcN0r/y/NU2f+yZ5BnT1dy
Wnb/5HkWQzSeU5kvGsN05UOlt9X1alhjWMuzc6+pv8bcCzKF0gdrXBpmMF/t
R/Auda6Ryu/RucuZyzrXo+hviO/hkMjPbp7ydZT/R3WOUfluNX5nC9XZg7re
r8pfrbH8wDtW+Xmq/1Ps/W97lU9X+Rklry9b6v3trmf5qup3U/mjfDs6t0D1
V+r4lPVa59Yo/bieZ13196L6eEzpD2OXXaWjrP6+ZY8oek38SX2+pPexn/ra
XvU2Z/4pf2r27OsqP17XHKL81yqvp/w7Ol8pWgZ8QGPJ6dz56uck9dGY9VX1
anTts7M16WC1/071W6n8frUNVH+Z/v+r+1ug8b2HTKjyS1T0kPpbrj72Ut1t
1LaO6q7S/89V1kv9fYqsp/o51X825/WU9XkC34r6O11lU8izP6r+Xrxb1RkY
+Nwg5XdX/tTAMulA5d/VkfK96Fw91gKNKa/88+rzTta/smXNXnmvn4+ofDOV
91F+kdJ7qP07ulZdHY+xH5QtO56s8iYVy7vIzgPVJlbZJ7HvZY6OtOT9ayvV
XaM2r6l8Q+y5faeuPy9y/iyVDc/m+7V8b8q3U/4d3r2e/XgdA9THYbreQVqz
WqrsbWTTWl+Px94ie353qvxB9bFI/S/Vtecrf7/yDyt/UMXzBX3gsGw+vYd8
xbeh8neVrlWbBSofqEqHq/4PGvNI9AeNoYmu96PqXIh8ms1n2tD2AuV/oW/V
Ga26/dX+ULVvo+vvpLKq+qlV2d/6f2ngNfdplf9WtmzBnjCo4v75Vu5Rn/N5
tsofXvA3wLdwh/q7Q+cX5Pz8N9O5V5BNVGe10l/FXnuGZnP6IdXZiu879PMa
p3NXBl6DWYuX69i1YJ1oROjnyvNlTjI3L9ExJfCaztp+mY51Oe9J7E2/lj23
e7Cn6VqH8s2rr7mqcwOytsa7l+p15RtX+RqVbx/4mzyJ96myD1T/fR2N+ZYi
p5vp+LtkGWCV0keWLRuwxrPWLw0sfz+k/Erl99P/rip/TXO2ZTGT8ZTeP2uP
DPOr7u8/9Z/XtX/SucNV9obqtEF/Yv1Xuqw+t1a9bXR0U/kvyCvI5qpzmPIH
q/yjonWEHuw/atOuaJ2nl9J7pV4PWBeO1Xi21v9Zyp+i8ueQD3TPd+jZPaCj
N9+Gymeq/GT2dJV3Uf7dwGPoqnRnHVso/WDRz5M9nr1+qu7hvtAyNbL1tcp/
qPQuFT9/3sNxun5n5X9RvqXyPdivK5bvkfO711pHQ1fbJtPf9tT4v1V5c5Uf
o/LGytdRv2dqTIs03is1hs2Vr6ujg+ocpWN44HNHK53T0ULtnwisn7RSfiPX
U/+nqM4tOn5Xfg/9/4c1X8/scPRT1X9Z6aM0vp+Vb6F2x+v6b+l677BfqHwL
pRvxTpQvss8rXUf1m6GL63meqvGtVB8dipaRGih/ho5eqv+UyjdXel/dT43a
3qY6odJtUD6Vb6k+TtX/H9TfXNW9jP1f6Uaq81/R77CgdLuyrz0IHVP/52hM
9UO/I94Vz4Rnc0/R+hPPb6Guf4/SPXU/HVV+fuA2nZR+R+PtXrSOdrjGd0Bq
WfYx1T9B9afpGf6g/G1q87/Y85kFrBz6m7iBOaX2u+j/n6FlZ8qGqc4M/d9H
/eV57tyP0iVdYw76DWNUvsq+mLdMcZPONVD761S3C/I37wr5V8/jBOZo4u9j
M9Xflz1RdfuULAshYyBr/Kn7maq6DdT+96qfD2tBI9U/UfV/0rnxKq/L91/1
fELX3FvlJ6j8X/VxpsoKOv5R+ncdADg5Hb8pfb3GfIDaHKg2BdZLjekBZBW1
X6qyLTS+7ZTeXkd35rCOjwKfO7bsc5R9ojHUV90HlL9X5TPYR/S8r1Mf+6r/
Juo/z/6oMU5DN1Gdb5W/SMetGss1eibH69p/qHwKa4nqhyqLde4G9EldY4H6
2qPsvXS5ypep396qf7aeVx3VWa/6/+jcfyp7Uvnv1CZQm6uQJ3T+RqX/Vf0Z
yu+FPEN95a/gfSu/ser73Rr5XW176Vqn6ty5NV7zv1f9m9VHR5U1Vr6Pxvaz
yieq/XZ8j0r/puNS5TdHp1N6+7K/jf7KL1e7NjwDje939MZa68zoznUyfXqO
+m+qsmaq01f9f6fjLrWdorbPquwGHfujk6q8yret9meo7e/K/4TsWvFcYA+b
pvRNfGOq307lp6uv2XyjYCY54xXtdISqn2ff0nhmqbwFsnXO+AGYG9gbmBF4
Hs+QZ9lG5Zup/BudG6yyX5XfUPIaz1r/Ifov+5mewWT2E5UHqt9X+QuY38r+
p3wf5c9Xfifl/1B+JOu5+ruJb0Tjzel616j93tRX3d4l6yLI8Mjyf6v+Q6q7
REd/1d+27G/zNNV/QeP4SWP9WXUXK/+N8v9WrCv0Up1+qr+d6s9T+niVP6vy
1sh4OWOUrdCNyl4LKuhTzG2NZ4Lyc3mfaj838V50hMq3Vd8R85P9Fvk09LrL
+ss3zvPYqPY704/OJchSiXWlbirfo+J9hf2FOcj3tEb3fJryx2lMA1T3zMT9
c51Wel8PsG+EXrNZu+cnvvejld+R+a1r7I1OofyefGu6p7f1/HqrzvNqd7P6
/6HGGMQuSjdU/X+K3kPz7L26ThuVNVf7uqzlOneM2jVHptO1NkfmUNnLBY/v
PfWxo8ruVp1E4/uL+0WuV50tVHe1yk9V351y3l8OALMqeo/eyLqaeO9uh0yv
+qfr/e0U+/r1lP9U7Qep/jS1r6/092p/dOD+66t8XuJ7a6/8dhXri8jSY1W/
lrWC56P0C2AySt+icz/q/u/VuSdor/Eeq3EcrD66KH2Xyv8G21J/dyp9ZtV4
Lbjteayn4MfoqmpzoO53L5X/p74XscaovzdVvrPafqbjSuQ5lTcAq1L5k7r+
O8gjar9n3uvvwaxBKt9Rx9MqX4pOp/TdGt+zJcsRyBOHqv5tyt+h+n+q/BHW
PPCasrExdKITlb9HfQzhXvh+lX9fx4Vg2WrzoMoeUR/rwUID6yN3Jl6rOqj+
Tqr7hMp/Vvkd6v9xpe9KjMV2VPnOKn9M575X+YmB8a0bNZ7v0K2Uv0HpvVPL
K8gtR+n5zNa5DTXG0LZV+m2dr4/8nPf+cKvO/cJ4lJ+n9O9q3wysmz2rYhkT
WZM97E9d+0flR6n92arTtNYyJbIla9J36PYa750q/0Ll76ivW3R0UvoAneus
dEXltyo9UefuS73HsNfMZj1Q2V5l2yZW6P5fQ7fXuXmB1wDWAnQSdJOmGvMz
KvtMxwbVXalzrcH6VaeX6h6lNscrPVnP6EuV36j8pNjyST2VX8DzS/yNMJc/
1DuarPzXVesXH4TWdy7WueFqX1b57kovVPvRGtclOrel2t6feq9gz5ivsfcs
Gwv4MLB8eJ/ydyv9idr8mFoHRBc8BMwx8TPgWXCPZ4JPY0MoGjP9LfR6uDN6
TWD56F21+UTXnliwvLVSx4fKN1N/hyh9N/i7rvU09hTlX9GxSul9Vd4s8fiQ
XbcAny1bhkKWYs8fzvenY4naP6U2h/A9g5vnLHNtp/QU9XER3zZ4LFiJ6vdk
HVf5MexVen4761qNdCzj3bD/6H6W5fy+9lCdz5QfhT6ldK3GcKHyN6v9Wvbr
qrGYc3TuObC80P23UvkA1f1AY/hIfc1Ex0DXQsdX+h72jFrX75jNt4Gqf4H6
GKT6/QuWp8ex/iv/MOuV0qHqnMJ+GVgfYc1j7XtT9Uchm2XrL+vTINU9UMfH
RcucFc2nL1TnfpV9rTrvqe6XGs9Qld+ia+yo9Bc6hig/W/ntlf5GY/4u529g
R6XXVa2fvqf2VY3/K+WHqf5tqrOb0p9XjW1fq3wD9o6qbS9/Kn+s0t/qGIl+
mPN8aqbxrS1aZvxPfabKn6f89YH1qw2hZU1kzrtU1rRk/Ig162Wd/xKcE/lK
xxdK90TmU/of8CHd71g9n2eVPg9cWOMdExuLZ008Fz0kw5eW6twF7EPqo1xj
jBqsuin4jPIPMWfV1+Wp8Qiwgq+VfkP/K8zdvPFXMN2NsfFtsF70/1fyxsAv
Cq3fU3db5S9gzVH7zXKuAz57q+7x4oL3gEN07Qk692re9pl3Vff82GMFI78V
W1qGdy/TuZGx7Q/YYniHZfV1vY6LwDLV397o5zriGuMZ7PcPR94bNte5Q7GN
6ain9BZq/4HSL6i/XQq2eWH7QqdEt/wz01fmqc4qlb2LjYb1nzUVvIw9Selm
YKY1xujB6qelxp/AotZh24pty2CPBfNpWPVY5+eMX4AX19T4HYEFYg/BlsGc
S8rG9H+Ljf+D9Q9T+sm8bSrYVqYi7wc+N1xl98WeG/epzyN0va8TY7M38v5Z
WzUmDERg0Xyfw3TuepV9gw6CPUltflP6dh2d1Vf32Fj6rTw/lZ2nOnPyXuNZ
6x+KjWU/q/IjVf50bNshMgMyQXNd76+8sXLkoXPU/gblR+n+vtOzOD62vFRU
m4eV7hl7/QiRIZT+TvVnKX2ArldR+vyK7+VH5dfr+lNi7zWMZ13k9veyV6pN
e13/ZJ37JvC5E8CLE9vTwRbBz5nDzGW+h6ZKn8gzzNv+ckrk8d2t/EYd7UKv
UaxVfcDp1P7U2HnWsOHsQzo2Ikvo3ECVDYidBvME+xys/BN8SzpaoC9WjB1e
V7D+Nh6MK3CdM2LbLFqULI9jy3gytu0LGYE9/7mSbT3gw89nNo3/Ytu8sXUM
Bm/U2C5Sv1+ktrlge1nCN6R6M8APCpaJ3lP/08vGIn8vWB5ukth2N1jv6zPl
t9LxpfLj1MeMxDoKugoY30K1f6lsW0KvGuNlW2CvVv7fwPvTHRrjezX+hu5U
+kFspkp/pmOh0t9UzF3gnaMfL9C5NSr7SMc9St+i460af5NzlW5U9fd3YMnf
2xK16aS2kc7tg26L3KX8uTpWqWzPkrFuMO6X9Pw2V53VyvdU/hJ0VfTtnLFi
7Fn9wWRyPoc+Bd7aVfW76HiqYrsg9sGNBa/Xz2AvZO9VfqnSW6v/9QVj7lep
7zrKv1+wzQzb2eOq06FgmXlPlc0ru+9R4MkVz0nmJtcE392SPUjpk9R+XNk2
xD9i2wOxLYIhgCWA8T6IvRZ8Xe0n6L1/mdqGUyyZw4Bt5xCla/WsCmBmSn+O
nYe9vmh5b0VkLsjmOfNL0A93r/Gavkr553TtqerrLeWfj20j/Tk2fo3tdEnJ
thv4B08q/XrJfI0YjFTpj0u2P2+j4xOl52pMowtew/fTvS4FfynY5ovtt3HV
+1fzkvenFsrvUOM9u7nSB8HHUX6JxnOwrj8qtLzVROfWKH24yrdT+gGdO1Dl
b6mfkq79VNF4Sjv1+Tbyq9LrU3+vvKuJOX+P2G3Zm1izse8tj2w7SnO2h/xY
sS3r1oLxFb5X5PPncrZXg9d2VPp+lf9V8XqJ/vRKznyLlyLbknnG6N+NE9tK
Tuf5VI3xgvX+re/3erV/o2zb8oAa48V9NKar+DZzxn/PUp3ZqvuV8h+r7UeJ
bXGcO5vvXXUmsV/njA+0ic0VqJuzPHelzk1Gl84ZT+qtNtPoT8dVSu9cMlcJ
G9Ey9Gnwd6UvVfktSreOzXWqzRlvfT2x7fk6nRuKPhjbNgDm0S02J2J8ttfD
lSgr/wX4T974/jC1PxDsErxJ+V4VY9fPaAw1uv+TKy47lfUYXVf5K5TvjwxW
NV60j9L76vgFW5bOrVTboTnLl9WqZU10/mF6tsNCYxM3qnxFaMziPvDmDMsY
HFq3vBoZJ/Sezt5+S2arGFLxvb5He/W/e8n2W/o/IzLmC/a7Hfu/0gND655T
cub7VDSeN1S/m+qP0HhOD617/i/n9WtAaKzj0pzxNewhPKv2yp8EXsL+mbeO
gq5So/xn6uuyTD8erXNtlZ+ufD/lc7reEwXvwRvRN2NzV75nT0aWQ2cteA9F
/yoo/zS2ocB4OJyU0dm7hKsCBwP7BnYOuBlb6v4XF7wnn6T+Bldsa9hf8/co
ZCMdj6m8Bd8Ue2NsLs0GFeVV//rQ3BFsLuhj14XmYoFhY4+ZFZrbUqPj99D2
sJl5zynm1szQ3JY/1P/PofldPWvMAYEL8qfq3Kvr76/yROnBKp+mshW6hwNV
3jv03s0e/YzSfSt+duikYxLLr2cH5sAhb18dmnuGjeHH0N883z4yzy9KXxOa
24JNCPvyjAxr30n570Pj1QdwbR1/lYxnH4Q9Rcd/Sg/VMaPGNi9sXyeH5rL9
of6fUroPMn3eOhe6V29kaKUjjWExMkzVto79VX8weHzVWBYcrrMy+Qo8+1vw
lkyeAStZDz6h9BWxbTPfIzPGlk/BQjYgMyr9KToC8o3O3a53cVjJfIyxgeXx
drGx/k+z9QJ8E37GqsB8C3iO8B1vBqOOLW+1U9k61Z8LrhebmzJLdRpn6w99
/aRjvtI9kMMDy3A9lJ+u8Xyi9E1Kl2vNL4RrCIZdV+P7rGJd/g7WJOX/VPsd
+HZU50rmNPqC8qtZf7l2bC7MHF2/ia7/c8Vrfyt0cqXvjs09uEPlhzNfY7eF
8wf3j/xSXesH6jBfdLyf95rbNja/DK4ZNo7Ny37ejAXOHty9L3SNKcjO6mNx
2TLpkIzzg6z6d+S1mz6vUdv9YtvawSPgg54WGisEP2H9hreDLfmZnPmc+8a2
5YM/wA8D795TY2mo43ul+4bGKkflbI+EY/gHWFDJ3MNLNYYOGssM1TldY20Y
mwuL/Ry+JvgSssbzOg5QWb/QWPKYnPFZeJjwMe9W+W6x+ZvrCubYwrVFx0PX
uz0y1ovNDdvbP4Hx7IdLli0/17FI6XtLliU/QQaA26HxPZ7J7+OVjjX+5cie
gfFR8C2wko9C2+K/qpg7A/7+S2LeFbZ2OFzwMeBoBBrr8oy7AccDPta7obkf
X1fMnWHO/6X2jWLbuuEXwA/ZL7Fs/rrqJOrrjsS6ITr+OLXdA8xS6a/Zc8Db
1efpse9hTMX2M/g6qwPziQbo3JXZ/YG1YD9C1nlaR+PYHEf4NatCcx/r6Zpr
0N1zxt+w98OFwIaJ/adu1dgcmPO5ZX/zfPsbc/4+mMPM5Sj7PtCR0ZXZw3ZV
+uyy5Xnk+v019l91zd113/epvwfLlimQLdDB6ifWudG94XiC997DHCqYU3Sv
0ker7YO8Sx3jwGrhR0TmGH+l9pckXis2yQDsJyrbRmUvqP5M1T9G+eeVfk7H
VWAvZesX6Bn71RpPn6l7G4YMCJYI/hNY5t9D6VcjYzPIzJ+VzF9g/weT+ACs
OTaOgcw4sWLbEfY4rn9tyfYPsG10ltllr0usT8wP1kbsAcgWYEJwi67QNV9T
25uQYzS+Y+HIKf+ijlk6N0fHyzU+d0PJ+DfYNTrGlWp/jc4tq/E9X83egXzB
+qr0vupvgv4/VONnOl7p8zM+AbyC9rVe81n7x+es336T2Pa1XHXuKXtOMjcf
5R4S8zereWOmy1T+aGSuKTI/sj/fIN8inGb4Tp8k3mvACM7lW9O5R1S2WMfU
UvZdsfeB1yr9mo4QW7SOV5V+Xv2Xi5bpVyq/IDI3HJ0D3WOq+nxe+QQZSunn
Iret0fGKyu/Tuf0L5rTdXzEfNkV/Z85gj488lkU6LlP9SyvGr8CxvtHca6v7
vIe5Cj+AtUfnFyh/ivJfZPsVttp7de5ilf+CfUh9zte5BWXvmeyd03PGcxqp
rJ7KFqr+RGwNiW3XcFTgqmCvxrbdWPmFyo/V+3wceYa1rdb4DbbbZ3TuipIx
HrAexnxwYjx+hdJbgufoWuPV/knVna66e9fa/optdQ/1f6/6f1vnk6Kf8Sql
Lyyby9A6s2+ckdn7sfsfWesxMbZfVbdlhqf+AZ6jfBvln0qsG6GTHVY1n6Zp
0Zg72DsyOrI6nPouSt+m5zU38jcGP+jZ2Ny24apTKVsuRz6Hg9yoZPsGtgt8
JJap/2WxfRfOLppDhQ4J1gk/Ct3yIfBjZDHWA5WfldlHsZN2qLUMhizGGLG/
wH/AFg8nbrHa36r+7o3M0cDfAz7Ee8g6KscxAQwPLA+8cF+lV8S2fcNxgesC
X5u9F07Xbej3Kv9Y6VbYI8vmD+1dNCcRbiIyILIgnP7jSn5HvKv1Sreo9R7N
Xk0b7EF/a4yXF21Dx5b+fGLdcy+1b1v1M+JZ4VdymNovr9q/Az+Pw2ttX0UX
guMKl3qQ+rmpaExnvuo8qXNLNN5U4/5N/Z/H2lc0xvMQ2A/4U9EcsRdV543E
9gbsDu1qjae3Y29XvSNqLfMh+3GNbcr2ocCXApn9r8gyObL56zr2UdmbYMhK
b18wHsF9cr98P5MyjAhsFr4g2FFdnTu5sIkmsel7hd+56VsNrHtuVjK/E5ti
rdK36lydgm1+N1VtD7xZfZ2HTqrrv6LyvthilD9N+VcrtnUcrnz/stdI1sqG
+t9J9/eI/i/j/eh/x1pzC58ser3CtwV75E3q/1y1n1o2XxJ5B4zkY/W9b9VY
16PYTJhvanMi8yuwvw62o6VFr7dw/V9KbH/ADtEWbmHGF4A3cLTykyvG2uuo
z0e4N+UrBdtIZ1XNN8WXBx0SXRKZDNmMd7wDtkl0iLzX2EeV755YXkZu/gBd
UGNowH6iY03JPh/wp+FR4wsCjxXbbXPwmcg+Mi2Vviu078zsirHdY3RultLb
xvb1gI/RMrKNtLHSd4S2nYIpgy2fkLP8D2f389jvmHcNZ/bj2PfEvW0d2xYN
/6QJsj/2cZVdrvxs3Uu7qr+Vx5Vvrvr1dY/Ti+bQ7BCbFwwX8UiVH4FsENs3
Bv5JW+XngOcxfj2fkWXzJ65R2VDlJyjfV0fvgjlSv6nuy2VjKWvz5rPg/4Lt
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
eez0/wd7nG5K
          "]], Polygon3DBox[CompressedData["
1:eJwt13e0VsUVBfCL5T0e74GGkkRUugSVZIUivUiRTkB6E9RFsAFSlN6k10eR
JoJKBCEGITQhFGODEIogCItABFSkakJipyW/sy5/7PXN2bP3mTNz752Zr+Tj
z7bpe1OSJOvgVuibnSQ98iRJ18wkuRkKi8fnS5I++vZmJMkMXOcCSTIpB583
ST4R305fnW5y/iTZcUuSzM1KktkwUTyNtqJ2JRhwc5LkyjUCv5FuCq4Ff0ua
HNx+/aVwI3BtcF/JudK4k437De5r8VPwW9waXFHaSXSNcStwk3Cl6ZqI18mX
ZUKHaHbi+tK1VfMYk+1ONw+3nK4fVOVdj7ubdjLdZNwQcxpEkx+Ki5tCGe3W
NGf1nRLfR1vPfIrCcNw03Lfa67U3as/XXgDPaffCPcafCb8Uf6C+4uo7K987
uD5yFVFfdfWVsq79cePpxuAGiheIF8vxgvhjmKP9qJrP6TsgfhhG8dYWN6Lt
ynsoJ/X0pPsX/qB4hnGqGbN6rLP1Xqq+cdDbGuyhm87biaY77Ve4buJGvD1i
XDlfw31G15h/Jt10eEC7CgyRb6Fcu+leovuUriE+N3Tmu9szXyxeCFPFbfEj
5S+dlT77x3E7jdNZ+5QxT8ILNPfIdztdWbq+5jNK/D5tMet3Bvc5vCseCZuM
MS3eCxguvqCeymppqZY8chTinYobiNuPWxhrZYyjuJXiIXzL5OjP+zfccWNU
9JtXLc/RrdYuj7tE9x1vP9w7tHfgTuCOwzbxj8YpwNMAJnounczrIu9GY7xE
syvqpJvF31TcBFap6QRfK9xAudfF3OgG8O2AUrzt/GbIOYBmr3ZZXAe/BXHP
4y5rb7dGW+V5Vfs1yKe9RO7RtEXkrSq+m7acvop8H6q9mHgevhFdF7rxdPPF
+WEZbgLuDlxN8Qa+KjxX1JfEu8p7ELecpj9ukZqfMbfW5jzS3GvRVOHtyLse
n817mO5jWBtrx1+WvwLdX/UVFefyLhH/DIrIMVP8Is13cm/jWylfT7r75XxI
GZ2NXQhXXlw/3jVr8HdxHdp64jWQIfc+8W54S/y1fDV52/LeSvsL3lL4771/
S8TbjL3cuB1hghpyQ4f7hq6GsTeIW0NVfQVpCvIe4y0X7x9/B5oMfG21DIv3
EebghtKtM49x4jEwWLyLrhvvl/KfhrF059S3Vv7JWel+GfvmCPyj+pfCOeOO
Vsscuv/q30L3qnG7R220OeZ7JNYY9yRuuDG68HXJTL/tIrz3wlXtsaHRNzLm
Kt+feEv4zcV34Z0NzeVqBuvpz/Mt0t9CzT/x/QgTaC7hDqr5qLiZvi3y9clJ
z4gjcjXD9xXfqb6L+mfjtuCW4Q7LeZLuOO5OqCU+lpPuKz/QfA/jjfEQnDfG
NFitlvrx3uIuxP4Fa3CHcA1wX2ak50KcD3VwR+EzY0zElYq9TVzXGE9Yy8ry
X8SdwU3hLW6uxaAB7whc3qiP72BWerbEGfMKb7b6NvH2jPXjy6Q7QbeH7ha6
1XQns9Nz47T8xaCuuDjvGv2l49uGebxToSRfiVjrONPoLsB/eC/xlYQG4u6x
D+ivIK4YZx7fyZx0T7+qjiux7+AawpmM9AyNs3Qv72B4Ur52uAK8peLMl489
qR3fTDwnviM3ztXTdM3lG4Z7HlcH93acAbghuM+z0+dwDtcCNxw35sZ3uQXX
BDcUdz3OKeO2inuF+V3LSffF2B9n0d1G9xPfWBhA1wlXkPa+OPfpcnAHxE3p
nhafz0n3hvnxXcp3TlzfOMdiH4/nay3exLXkL8F7lXcO7xRch7i/8NYXvxvf
Ok0b3Ghct3i3cK/E3UC+FeKa8LpvrF/cU+I9ku9w7BlQLZ4l3S7zrSZfJWtZ
Ir5Tv+RJPZr60ByXTfuFXF+o9y7P/j2CAvFu4EbCy/Qr+c7Ge6WWObj/yXlG
/If4jsxps7g3jJKvOqyiaRTnm75FNKVx++WpQVNVrjKxJn7/GPPITJ9zPO9R
xt5sTtPVUjnWle6RfOk98Nfi30DjuC/Am3GWwxU1LZBgGNSwBlVpWsXzFdej
+wfNYLhJklXy/zO+N5pKNL146+Sk51mca2vjjqivPV9d2M7XNd4r4z9BUwe3
LSM9j+JcGpCdnplxdi7ibcf7u7hDZKf3gqfF+WLvCF3cu3gOxHmL60b3Mu4y
73txxuMew/XGHcW9Efsz7mHcXGMcxr2OGxZ3PlzHuBdq35uV7vE9aWriNsnf
PiP9JorGdyrfIfHWrHRPXkp3Gn9RfVPxZaNmcS3ezXF2Q13eZ3CFrE01a1TS
Wv2ebmjcdXF/4f1Qvh0wl682bM1Iz7z4xorR1c5J1zfW+STvsbifxv7Cuz3u
mPAi3w/qO8L3fla6FivUtxh3TfuDOGd4n6JrdeObjj32V7EG4n9np3tr7LHX
cZfE+3g/xV2P89fYg3iX4efGPpI3vW/HvXtWvvQ8+DbOTxhH1x4/Tn898Xr6
t/newpWn24vLhdHx3wB6GaOc+J74psSlb+xDsfa38ZYRT9f3Z+9dGb+LcI/Q
faL9Bs39mel7He/39Ox0zWPth+JniD/CnyKo4rewcQYXSL/N+EZPW5eP6J7F
TVTfJmu6IZ5PnHniq3SF+YqLZ9Jfi/sGvoJ57MPNj3XgfTDumcYcBHfpWxEf
Iu7nsV/QzOXNI57Bv8fzWGLchsZpgdsZz438Mm8m7cC4r8W5QreabgJdO1xe
6EFXlqYkT1bcL41zUu4H4i4M83H/B111z94=
          "]], 
         Polygon3DBox[{{2809, 1751, 1975, 3690, 2717, 2718}, {2718, 2717, 
          3691, 1977, 1978, 3692}, {2711, 2710, 3679, 1952, 1953, 3680}, {
          2803, 1748, 1962, 3685, 2708, 2709}, {2720, 2719, 3682, 1957, 1958, 
          3683}, {2709, 2708, 3686, 1964, 1965, 3687}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ktIVVEYxfHPXpaVNg3CNGdRDqSwa/ZSugiGqIMGGpYakQY5saiJGEE5
ixoUpPa4lk5yptUohOs0REuzlyZUc3tYI+l3CO4+67/WPnux976nuK2r8WJO
RIwav9ZEJPyV7gGn8iK28S1rI1rxTnwGt+NS3I7P4kP49ZaIc/wJfFnWTKdk
nbJOPIcv4dvmrvI9eAj34V78FN/D1/EwHk72Yc0Nfhy/lE3S1c32YX8p+Rt+
GRcax9dH3N8Q8Vb2G/fjWTxA5+ggfUfr9GzH8/gBfU9Pb4q4sC6iSE+F3g+y
kY0RP/hiI63voXc/yv/gR/gTfkw/0wxdoA26d+BFPES/0FbdXbpL9BzUvST7
iXcZ096f4U/KsziL+/BzPIazzt+Y3A2ewPX4Ln5i/iZ9JauTZfgrfA2+hTtw
Gl/DTfg87sa1+IU1VXwlHsNH8V7cZr6QNrnftP/+r/0V8N+Tu+WfOUO1M+XL
quhWeoyqiCPUsjhM1UQldezI9xjQn7J+JblbuWuNb7hcltGZkuXKDlC/KPdw
xbGfmo59VEWUUcsiT+cdwe6c/9/rP7svVeI=
       "]]}, 
     {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwVzUcyA3AUx/EXJSS6G1hwBUdgWJgxwyQZkoylkigxyo4j2ChrB1DuoGz1
egEWLJBkxcfiO7/y/u//+mbK46VERBQxlY5Ya49Yx0RbxDGd7Yg4TEYc8W/I
y+/013yeX0B/V8SV3Tn+Cz/4RnhXSUWU+WvzEp20l9BXOyNudNMY4nfRoL+V
8xiW99Cou5PP6Jbc49Y534Qs7s3G/rN+g24i48YpXXRv0E632Yn8gYLukzZj
mV/BgPmDf5b4KuqoIenNjv0aVuVHbyo06/8Ws7r+SVfACL+PVv2zXMSofICU
7kW+oNtyr3uXfBo5vJrl/PkHeXI3kQ==
       "]], Line3DBox[CompressedData["
1:eJwVz7kuBFAYxfFvGoUZS+IJVARR8wgSBRqFJWZIdKgIgliDIJbEzguIF/EE
NPalQWLfl98U/5x7zj33+3KLM90NXYmI6EE6N+I1FfGG5mTEKl1DVX5EsiDi
MC/imf/EC1p11mmvfC8nooV/59v4D5pEiXd9fD+Ozb+V3WVn8Pc0hVKdQX4I
JzoD9As/+MaW/Xl6I86jONUZpjXybaTtHecncOZujJaZ2Siv8+5cdkCLZD/0
Fxl3G3QT1Wak3B1l9/KJ7F7aobNFJ/l9/2vn//g0H8h3LvduynkaF/Y8yB6z
O/gnWoAKnVl+Dpc6M/QPCXsDOyjUW5At4kpnntbKd9Fp7zK/gmt3S7TSzCZ5
vXc3sgz+AemfRkY=
       "]], Line3DBox[CompressedData["
1:eJwVz7suhFEUhuHPaYxzZhxbpcINqDRKCq3DCCEIM4RCQqEjUUjcgMMVKHAT
4wqMEaXjPXgUb9b3rr3X2v8/vlqbr7Ykmcdad1LvTUo9SXtfsiDPFJNN3srb
UJa30SG/oN6fnGFLr8AbqMgls/eF5Iiv8Gt3Puw/4bPyDT75KZ8YSAbd+eI7
atPZkFrFoj1L2JXf9I/lYflKXUYF0+Zrep12FTEi76NLfsWzuXPs6XXzJtbl
stkp/cb/P+ht6N3K377jgs/Jd/jhl3zSO6Pu/PID9d3ZmHqIR7ue8IA/BBcq
VA==
       "]], 
      Line3DBox[{2660, 3276, 3538, 2841, 2934, 3168, 3789, 3704, 2933, 2842, 
       3643, 3790, 2936, 2923, 3644, 3804, 2661, 1721, 2662, 3809, 2937, 3091,
        2798, 2938, 3810, 2843, 2941, 3169, 3170, 2940, 3721, 3869, 2844, 
       3550, 3171, 3172, 2943, 3708, 3846, 2845, 2945, 3173, 3791, 3705, 2944,
        2846, 3645, 3792, 2947, 2930, 3646, 3807, 2663, 3647, 3760, 2664, 
       3811, 2948, 3093, 2799, 2949, 3812, 2847, 2952, 3174, 3175, 2951, 3722,
        3870, 2848, 3551, 3256, 3257, 3255}], Line3DBox[CompressedData["
1:eJwNzklKAnAUx/HXSsgpSN1r86ReoZXgJhK6QBtp0iZoUbpoIQhGiyjaFNQN
6h4F6QVC0EO06rP48hv+7z3+xf12ozUTEQ1czkZ8pyKqyYhkOqJCh5mILt71
byjoy/o+tjCW87iwO09z6OkLZv/s7eDc2x79xLO3M7majXjiH3Eq1+VNfgNt
eWp2nb/FGjruJcy0vN3wq7oHukJ/zHbwKr9gzh+W9V0sYdvery6LE/tpmsG1
t5z5ZiLiWL/rxgfu9Udyxd4dP8ChXJMX+QUcyBOzJf4KRYzc/HLvHzr6JlI=

       "]], Line3DBox[CompressedData["
1:eJwV0MkuRFEUheGtrUQbJqrKgKqRvn8DiTCjCPPCwISRvitTEtFGSp8oT8AL
CeE1fHew8q+z1tk7595ccaOwXhURa7TVEPHUGFFoinjGqdaITVl1S0Q/ncqG
8Qz7cFq/ra/hB+hc3oNz8lm8aY7Y0dfyF7oOez/4AjXpdnVFnHfOmUnrL91L
yx75PX2G/6FSKmIZr/RZfNGXcdRche9MvO4Lx7AN983/2V1xnnfnHWfcP5DX
yQfpWjaSvBUn5YdU7zxEd7Le5L1mFvDWziN9ii/rMnZ+8ovUrjvWreCSc95M
Vn/vXpfslS/pu/lfepCvJt+JOXxL/nnydnPvfJ4f133jRPLv8MT8P3vtLoc=

       "]], Line3DBox[CompressedData["
1:eJwVzUkyg2EUheFrlj4GjCQhwtgeLAEDQgwsgB3o+2hGmtJUNFXRzLWb0CVL
UBZh4jF46/vPe+5/b3lmbmS2IyKmsZ+KaGUi2rhPRwxmI34wnI+o5yL29BW5
gYF/zOX5TuSwqz/lz3GGin7Mv1ldBjv6mvcV/bo7N+rclPyCMnfLbXOT8jP6
uBtui+u261P+QpNb8i4iwW/q530v4FpXcv8bQ8mIDV3B9wmK6DVzYPcv0khh
3cyh7hhHKJkZtTepS2BNX/U+oai7cmOVm5AfUeAuuRVuXH5AD3fBLXNddr3L
H2hwbTdaeJP/AMKSMMY=
       "]], Line3DBox[CompressedData["
1:eJwVz8kuRFEUheFdAwba6GNopqvSVHkR8QCaRBkIL4G5IGZSVCndSCKRlO4p
JJoBj6Dvg+8O/qy91trnnHu7JudH51IRMYHlmoiruohrHNZGnNBCfUS2MeJB
V+G7+Wn0JPBbtIicnUc7m+amhogWNKPXzgr9xbbuyU6JHrm/T/cnf5atIW8u
ol/+wq9jnC8hLXvlb+gC3+G9W3MGM3jTjdEq+SJdwrE3zmjZe5fVEafmtDmP
DAb4XbqHEefe3bFjbnV/O9owaGeVhv5A92Fnn1bcPaRLyT9lG5hN/hHD8i++
gCm+jKzsm79Lvo3vdO7enMMFfnTn9B897zpG
       "]], Line3DBox[CompressedData["
1:eJwVz0srRAEYxvHHTsZlp9laMEK5fA8bG1YjEwrF0t6wo4Tkmti6RorG7VOw
MdZ8B8pvFv/e9/k/p/ec01VZGltsSjKKs5ak3pp84aaQDLclP+3JBk51g/IQ
evV/XAUnfM2zI/aJjmTBPObmzTc86o7kOfsrHuRDecr+gpJb19wBtyYX3fjk
rrhVc7k52det2Ku45Ad8w7dn17Gn65P70aP/5Saxy983/sE+7uasucPNmM+4
023L0/Yn3MpbctleQ7dbF9wmV5U73fjgzrlS4114l/8BB5cuNQ==
       "]], Line3DBox[CompressedData["
1:eJwV0Ekyg1EUxfGrHWhiqFdlC4iQaIMNqGIBRgxQ1kRJoimUvguVBLEGIzMW
ofl9g3/dc88993vve8Nr28tbDRGxg922iGxnRA6P7RH7HREFzKUiOrsivvgT
mMEknmSK5kf0vExKpsyb0q9jGmnzcf4xfYIfZ4yoo+i2M6aOy2Rkzuhz/Mqc
qj3mfehFARm5S/41/mQuknP4RVSce6u/Q9A3yR1984pesdegfqp9vHmzPKq8
Eu8Aed/oMvvmz2IJc3iROTS/pz9aI2r6BXoDi8l7mGXtPdBlNJqnk39Cf3Ln
5B4yOZlnuoImmSd1wHwIgyghK1fjv6JZpqpu8g9Q19f172ih35L3Tc6lV+21
qnve5B8dfDqz
       "]], Line3DBox[CompressedData["
1:eJwVzT0yQ3EUhvEjRcgXa7AIhNyOIT4LdqBLJDfL0NHYggopFDoziRkMxney
gZRJZA1+KZ45z/vec/538bh1mM5ExBEu8xGDYsRSIaJaiqjxOtYXIl50m7ot
LPM3bPMhfucjzvCq25FH6PCK24zbWd7Wdc0re3PmrZzya+TkO7lsd4Xn8Y6R
b2XzEyfeauCDj/WnfJVfmE2k2HD/pdv11h7W+A/2+Rg9d+f41h3If3jiidtB
NuJefpZv7BTMrtzibRTlRznxjwovoYeJb4nZn+575wEd/AO1nzF2
       "]], 
      Line3DBox[{2726, 3299, 3542, 2877, 3031, 3183, 3797, 3706, 3030, 2878, 
       3651, 3798, 3033, 3020, 3652, 3818, 2727, 3759, 2830, 2728, 3823, 3034,
        3133, 2831, 3035, 3824, 2879, 3039, 3184, 3185, 3038, 3728, 3871, 
       2880, 3566, 3186, 3187, 3041, 2186, 2881, 3043, 3188, 3799, 3707, 3042,
        2882, 3653, 3800, 3045, 3027, 3654, 3821, 2729, 1771, 2730, 3826, 
       3046, 3135, 2832, 3047, 3827, 2883, 3050, 3189, 3190, 3049, 3729, 3872,
        2884, 3567, 3268, 3269, 3267}], Line3DBox[CompressedData["
1:eJwVzzlOQmEUxfFLZQSHNbgRtBFRUeCB0LsAlRVoqQtwFTI4YY+bcIgmFpiQ
KCqJ9v6+4p9zz/nu8N7K/mF2kIuIDHf5iPeFiGYhoroY0aDPSxEnGMj7aMsz
+QfqmPEtDM026R4m8jW907mIW3nH/D1m8ht+dTniR/2Na77K19JNXPF/enfV
Y+zgzK55PZfeTtUV2Tndpk96j9Hju2i4vyV/wybW0630zRiYr9E6Xr0V9b+k
fzDf93ZER/iS9fii2an6E12+wpfVG7jgf/WW1I/pDh7sHdv5D38cNS4=
       "]], 
      Line3DBox[{2744, 3058, 3159, 3059, 3915, 2743, 1478, 1559, 1541, 3917, 
       2745, 1482, 1521, 2620, 1322, 2746, 1484, 3137, 3779, 1088, 2747, 1164,
        3875, 3138, 810, 2748, 1111, 2411, 1167, 813, 1342, 2561, 820, 1406, 
       1097, 2749, 3830, 3064, 3160, 3065, 3918, 2750, 1489, 1560, 1546, 3920,
        2751, 1493, 1522, 2621, 1332, 2752, 1495, 3139, 3780, 1099, 2753, 
       1169, 3876, 3140, 815, 2754, 1121, 1172, 818, 1347, 2563, 823, 1408, 
       1108, 2755}], Line3DBox[CompressedData["
1:eJwVzkdKBGEQhuESV47pAAo6xgMYbmAcdSEoRgQPoGC8g9mNJ3JGpydfwrA1
ggmfXrxU1ftV19/Z7d3FnaaI2EIjE3HVFnGN39aIzfaIV2y0RNRl6/pGOmPB
zlBHxDAGUZNX+TpqmJcvd0YMyPpRlR+rCeZkP+5XuCNzETnumytzh+Z7zHLj
6hhKfLd7T9wzvuxeqhfI8In8TH+OT9maf3jBqn8vylb0lXTGjJ0bN5t916dm
0/fsJLIySpi2syTvlfXgTn6QVkzJPrxR4PbNBUxy71ye2zPnMcGNqiO45bvc
e+Ae8Wb3VD3Bn/4f+Rk7jw==
       "]]}, 
     {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwVzjFLAmAQh/FrMXPQOXGJCIKaqg9goKRQSyVODdXUUjk5+AFaAgdHh6ag
iHSKILFAaxKCEIIGx8aGxrZ+Dg93/+e4e9+Fo7Pd05mI2MNaImJ5NuJ8LqKG
a3kpE7Gu3iQjblEyv1fvuCI6+i6q/CgdkbXX5ctIcsd45x/lCjLylpvzqYgX
+QB5fYnbVLMYcod4sHc5vas/QU++kp+80cOY27BXU/v+8IyB+UBN8198HUP5
FR9mYzcKdid8Azlugk/+W77Aorxtf8VffuQmCvodrqiu4pdr4c1ewu19roI/
ro1/bOUuYg==
       "]], Line3DBox[CompressedData["
1:eJwNzr0rxXEUB+APg+ul+BtMYrHcJMnOIgaZ72igXBQpb4vFZjR4LTaTDNdL
kcK1mGU0XG+FySDP8PQ553vO+fVrL02NTtYlGabYkHQWkummpMwMc8zS5b1F
LtHRlizLNVYZNFuRx+6HGNc/tSan6jHm9d1utu3ssMsB+/Q2JyNmC3b29Nf2
S5y43/BWVU9Q0R/qK3bOOOfP26W84MisT97S43t38oEqV2b38tl36s0W5aO3
mvsX9Trf+gGzmr1X3vjkg37/+GP+rv6yu8mN20Jj8qve4h+pOzMm
       "]], 
      Line3DBox[{1589, 1835, 1702, 3831, 1590, 1836, 2436, 2438, 3880, 2439, 
       2443, 2442, 1866, 2440, 1713, 3743, 1611, 1721, 1623, 3761, 1915, 2470,
        2472, 2473, 2474, 2340, 3763, 1916, 2338, 1733, 1635, 3767, 1934, 
       2592, 1741, 1643, 3773, 1962, 1748, 3839, 1650, 1963, 2510, 2512, 3895,
        2513, 2517, 2516, 1988, 2514, 1759, 3755, 1661, 1767, 3759, 1673, 
       3777, 2037, 2544, 2546, 2547, 2548, 2382, 3779, 2038, 2380, 1779, 1685,
        3783, 2056, 2610, 1787, 1693}], Line3DBox[CompressedData["
1:eJwVzj8vg3EUxfFrQTuwMEgHefIkNUiVNKIxmJX6E9KQjg3FgFfQbgYTW4cu
EoOl5VWwGuykfQPSidHHcPI995x7n9+TNK4PrsYiokZr4xGFiYgl6kxFzE1G
FPmbTMQydmUz2Yh5+Sxuy251VXzQVd2f8AP+FBN7Z/hk5xxzblJZw5xMR7Rk
Kd/GJuZ1iZ1D3TreybfwHo+xQpt0pO/J+vTorUV3z/y7b7z8vyfL21uRL+Cr
7EP3hj1d239+8t/8F5bsDXBkHtkb8gV3q/ILc+q9H9kO/4uXWNaV7NR0G5gx
72MW67hHu/QH3CoopQ==
       "]], Line3DBox[CompressedData["
1:eJwVz71KwmEUx/EjgfmXXhRqCQrMNAQbKgsbHRzFaNC9IsHALqHaa6mlIaKg
oTGXbqE7qDWiC2hOhz4OX77n+Z3zvBUOzw4GqYjooJ6O2JyO2MLdXMRSJmJb
fZVE1Phe1uLAtawyH5FSt+xL+ATfZrLcR9lMjhvmMtmIvPpIVsKaszf4GBfy
RP+Se9ZVrOuPnLUqL+JG701+yxW9sd6j+gnP6qrsVf1hZsgvsndewKes7g2L
6nNvXeYv/JpZ4R/sT97ETXM595Umf5C1sevsLp/iT57XH/HAuoM9/Sn7avId
zFgHz/KD+/4B3GUj7w==
       "]], Line3DBox[CompressedData["
1:eJwVzksrxHEYxfFnZspl3GJhFmKyUsptMVNTNnYsWRmUXEvJeAdW7AyWLJU3
wEK8BpGkWLiUkowtsvP5L76d85zfeZ5+vYuVqY1URCygVBfR3BjRgueGiFe8
oL0toosW6iOq3vrNRX5UlqZlPLVGZOhsgnwOa3y3bt5OD9bNS/JzLOPWzpZs
lT/GCvr0LpIOHbF7yR/obNJBWYVmsxFD/DA+zV+oJTf0PtwsyIv4lv3iBzm3
BuipzoO3kvmMH5N10jvU7OboPbblO3jj87oTdsbxbt6VX6GKRzt/sn3+BHuY
1LumKf+8oU04wrT8kHbIy/wMUsggjXn8A/R6MTA=
       "]], Line3DBox[CompressedData["
1:eJwVzjkvhGEUhuEjYRbFzIgt0fkVEiNjhJYRnUkGmcaWjMKuRGLpMKGyhcQf
EP9BtEIh0VkKtYrEpbhzn+d93vd8X3d1YazWEBFV9CYihlMRI8hjFI3ZiBL3
JCOy6Ygc3uV2btW1cUnXwZ0om8v610zEOFfkCt9hAvNywrsp8yUmUXM2zUnn
M7wpz/EsCqjLH/Y9mY/NJ1g0p9xf4n6sYBlXulVeQxEbaHJvnW91ef/Yh9//
d9ylK/C9rsgDeDRv6798c4uf5R1+wC7e5H2+xh4+5QNO23XIP3KdjzCIDL7t
euEcWnCKZvfPeAgXOMcN/gDNKC/k
       "]], Line3DBox[CompressedData["
1:eJwNziFIg1EUhuFjUaegoHmKReMsgmEWB/vBss2gWBQGRl0RdNFsMmk0GGTD
oCsDQZ3BDRloGGNgMi6ZFgWf8HLO9957zr1L5cr28VhElJAdj1ifiDhNRZzh
Tl6ejdhQa5MRdRSdP6j3XIJHfQP7fHcmIm2uwRcwzVXwxT/Je5iXt+xMT0W0
5ANs6nNYQFs+RNPMtbuf+iM8y7dyy/439Lk1e07UF++/4sP5u/rNVdHWdzDg
e+YTcz/8ORa5IQb8UL7AilywM+Mfv/Il8voil6irGHFX6Jibs3uH28Ufd4N/
UxMvRw==
       "]], Line3DBox[CompressedData["
1:eJwVzq1PwmEUxfFL8S3gmH+B2WLFDf0X8BctbgYiZhULg0bwLUg0+xrUzc3N
AIrMYlUEN6ObUUWD8iF8d+55zrl3z/TKalJMRUQe8yMR2dGItfGIdWygn47Y
pCXMyTJ0CzOTEdt0D7tYlO3Qjv65O3kse3vlr81LqPCz9g71jnCMM5wiOxGR
yKo6J/y9fgFX9uveHs1F3PAXfEOniVuEvRa9w6UsR5+H//XeoT108SB7oW/u
lPHEf7j3bq7hj1+w86nzhW/84gc5//uX94eZ7j7adqfG7JkPMACAwjaM
       "]], 
      Line3DBox[{1599, 1851, 1705, 3833, 1600, 1852, 2453, 2455, 3884, 2456, 
       2460, 2459, 1874, 2457, 1717, 3745, 1617, 3760, 1725, 1627, 3762, 1926,
        2481, 2483, 2484, 2485, 2346, 3764, 1927, 2344, 1737, 1639, 3770, 
       1946, 2596, 1745, 1647, 3776, 1975, 1751, 3841, 1653, 1976, 2527, 2529,
        3899, 2530, 2534, 2533, 1996, 2531, 1763, 3757, 1667, 1771, 1677, 
       3778, 2048, 2555, 2557, 2558, 2559, 2388, 3780, 2049, 2386, 1783, 1689,
        3786, 2068, 2614, 1791, 1698}], Line3DBox[CompressedData["
1:eJwVzr0uw2EcxfEfEm8Dk3aRoGmTdpEQSROiZcbg3xKNTSIxiBK9BIPeQBMv
XSQGi8Hm5Ra4BgmThqFjY/AxnHzPc855/s9/Zq+eHPVFxBatDkYsD0WU6GIs
YnI4osy3RiJWsC1LjUZMy9NYkV3qqnijS9w/5j/4E8zY9fhT/sGugVPu5eT7
zpnxiHNZgW/iAeZ1OZuqbgmv5Bt4jTVcpzXa0T/KnujWG7PuPfPvvvGCd7K8
3by8gK+yT90b3uvO/OsX3+U7uGD3jb82PzjnTlF26Jz1Vj9f4QewjotYtNnW
lXHiv8cU7mJCm/QHZnoo3A==
       "]], 
      Line3DBox[{1602, 1857, 1858, 3738, 2077, 1859, 2461, 1860, 3742, 1877, 
       1796, 2462, 3885, 1797, 1619, 1804, 1906, 3812, 1805, 1910, 991, 3554, 
       1384, 990, 1150, 1011, 3558, 1388, 1010, 1459, 3600, 1458, 2488, 1950, 
       2090, 3837, 1957, 1958, 3750, 2095, 1981, 2535, 1982, 3754, 1999, 1816,
        2536, 3900, 1817, 1669, 1824, 2028, 3827, 1825, 2032, 1103, 3569, 
       1407, 1102, 1170, 1121, 1411, 1120, 1507, 3623, 1506, 2562, 2072, 
       1699}], Line3DBox[CompressedData["
1:eJwVzs8rw3EYB/BHtB8UtR2EWttZiblw2GWLAzflhLJdMVHyP+DqRyEHxb9A
FP+AwnEuCgcXzBEHrx1evZ/P+/s8a4Xa6ky9LSJqVBIRmXRElpdUxBuvZHoi
cnIiGXHi25D3pLmkS8hFnrsjkrLaoq+xYc7ZLbjJs+m9pL9gmUc3W7q6+ZQV
Bu1dyUtZdHttPrazLkd0a7KrM6LsW9F7lC/dN03O7b773TH9OD+6P37pczMs
b1o7vpW8b81lXb9s8OF2QD6xrd/h05y3O+1miqb3rv6OPRpuOuQBZ+wza+9e
tvuvD7KXI+b0hzKrnzcvkCRNiir/3tAyfQ==
       "]], Line3DBox[CompressedData["
1:eJwVzrErxHEYx/FHcTj8LNLJxGgTf4HDnW5ycZOkm0yYJITJogxGs0kyyajO
hFI6ieFshDKIG0x4Gd59vs/78/yefn3lxeJCQ0SUsZ+K+MZsa8RPCyF7OyN+
vff4DwykIwpcE7drfsdnc0Q9ieiX2+YnFPR3XI3LujOCVb6GxI2sGxN2bvRb
8hKbWNY/oEPfbq/CVeysyws31uSSfkhf/d8136OOL3Tz8/wVhu2/cG/o4l/l
HH+OjNvj3I7bM+YzrHg/++dETplPkfPNNVfmetzLIM8fI+XGmL6kK8kTTGNU
d4g29xvtHHE5O0W54ftJOag/wK13FY+oIa3/Awp5Nsk=
       "]], Line3DBox[CompressedData["
1:eJwV0D8ohXEYxfFHcS/iXiml3MVitBosBt7Q7Q4oBkkY/RksFvJns7CwGi0G
KYvJQjKwuMSEAYtroSjK5x2+nfc5z3lOv972qYWh+aqImMZeJuIXk3UR1cig
kI+oobv8T3TWR5R4+dqIbXMFf9mIr1xEB900v6Fof8d75SXu+7DKf0ReR6+O
QZlb+3V6iTUs2T+kGftGuTPehcwKvdexTBfty2ku9fCDb7S6meVfoUv2nfeB
Fn6FzvDPUdA7wNvRO2E+xYbvF+9tpmPmE/S7uebN8Qr62lDiHyGro0dHIjOe
3tBjjCKxP0BD+u/kDnklmRG6pWOYdtvvo0mmbL7BM56Qk/kHRCU2dw==
       "]]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJxcfXdczu/3fyhCZFWysrL3SNZ9Etl7Ze/RMLOyC5Gdlb1CshLSkO4TMgqV
ESK0S9vM7ndOnev9/fy8/7kf75dX1+tcZz2f53ndo960+cNnltTR0RljqKNT
il7XDyosLFzZ5qaBVd2pXY8+1Ww485cu5MH6W9PPrx+RhpuTl5VxG5EGH4zv
X90REw6Xj60dvsU9DbeffRxHr1CqpElvs2GB0LVVRTfTXWn4ZeuLC/QKA0r0
X1sQfBWcDhT9P96sV/Tv0F+ul/Yv+nvsuLtovf/WScsreh42ul70fMiQ53bt
XWSfVqf4PxdlZ7mDTU7yfXefd/u7gf5O//fRvJ10/3CrKcN43ZHDfF/xc8q0
yY/h9buVj9vAdnSad7LIrigceJztaRxQ/iJfv9arZ9E+RvTpM5mv1y2X85rX
cco/NoLX2fq+e0gdWif599VK7JcXb45dYz8tGJ+/ZDs9t0zd2mRnkibOtHaR
vR5dfxTZOTnP5XjWz1zYVPXYn0dWZzUjZvYsObZMDNiM3VM5weEJmm+52h9f
ZkO3HfqbHTxiYdj67vtbrU5Hk73HC0b2SYWvxlPaD/e5BY0HLftUr38mmnsY
BnUvTISvx9c+y/kcCD1G1bq29FIWrrP1L3v+8nvQj261pZzxdbCbOOL8vohs
bOSbUC5w4hsI65g6xvV6ALTNbLxkSdlcrDq9ltuSi8+hs+7sq7c/aKHVo9xw
shOVn3UPpSTYkp3vq3QMfO3wBBL/ZD0gO1EzYJflHLKzsNedvmQndPw722ZU
n1Q8GPvpLds56WipWLITNi02SSQ7Ue+pTftcsrPD9CPHyU7oHrRsENmJJ/PK
7mE7hwxz3092QpV454lkJ76oVNWI7bT402Ii2Qlbquo1XnrxOdoObnbrFtnZ
12NCJvtz4pQyARFWZ7WlP7rhaLLTY3H4446j8qDnsti8PdlbtPcNfkS31omE
oTpTNT0cToG1e1C/t9XS8GpAibt5ddMhdXDy9D+rc/DBVpMzn51jMaxKoM/q
bw/AuNGqHlavcnFm4YlCi5QobLNy7+EHj25CG5OEszUhDz+d6zmvfJkILN31
/DKrUYGQl7rF8PnSPNyft/uJZ7NwrORfzvn+wkB4UqXOtLwDedi2zVZ/ky8h
mLHXZdySPqFw9vHNRLJT+VmnwYPswa3Izj/vWk4OdjiFzokh0+KrpUGb537d
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
RfuL31aw/jm8XTXL0TRXmmKza2x/qO7XBVy/pcqt3MX90PXmeTvuh74bG7H9
0L1bD7YfSq3LN6xL9t8O8Egn+2HpVbd7ZD+YDj3Rg+fKjdtvjmDeEqS39UkM
9f8yc97e434+p41ZIOvO98326fNrL71Gd3mOW+Cc8IT31X3ilgLmVwsX3fdh
vFh08UkQzznXTzZbwq+lG355y/Pd1uuFfuzHvr9S4vj10ZJ5HdieeYdWLuL7
yp6pH8iv0xM6+/J8pPMot2tFyv8u+0tX5fz/tnSVWwzlT4OFN3/ynJa0o/c5
tiewu90Jnu+WDzWy5DhuqjE1iOO4NW62Hvexxe95jrqt5j6daecKi+ap4Gkt
X4cSrv2If1I0HwUsSDFhXNtVK+USz41VCscW8nzW+OHvErx+0hlLQ8a7QoM6
ix+Tfz54PdjakPbbb+RVthuW25RfzK9T+z22Y/ubRawr8vuz8nZFcYjb6ZTF
+XPj26Gi+6z/9GA/QY/rUxrw/ZceXJxN+wWnu5XfjaZ6md1R/znXy83dBaXY
npOnXK/ya4npu6bznNi9Qb11HPddI266cdw/LrHtzHE/WtrrbCHlz8K3XkVz
Yn0Hmy+c/3PTv3dk3ePpsdelWd++NvB3Fuse8VGLJ3F/uO7yKzuA6mvXwsfW
XF/t48794n5SPwHrVqB+MvrB3itcjzeevndlXPvY5mhzD8K104b2FtyHfRrm
xXJfGtitdfwI6kvNZmycPIjq2iNyim8o4WZs2Z8lKhFu6r7Juc+4OT2wqS7r
JEkmAz25Hm9GjFvB+kPZgMDrQwiXq2bmd/5DuNw9adIhxuUtlVo8e0P13uPu
1XCu98RKUfaOVC9evR/mUf/Bts3bGBhQ/2mw4dh+xv2ZgT2D/0dX0bGyrtG1
6LzMe/sM5kWXBo2+spT68+LLppe4vzV88XkQ6y01sj7OYF2oZ9nOb7kufmeE
T+H+E9O3sTv5B0fGeh9n/1xoVLriY+pXFj894wyoX1VMCHjI/vG8vcyNcSr8
9qw3OwmnrEd3sGT/7Kh6Jpv7XrN5V4LIP7Dmt3Nb9k+tadH+5B94kW3uZUg4
eMb4+QL2T90vp4azPlP5yvq+rCNtq/Igmuvd8UKNCPIPhCb5xP8mnA0x3Pzr
O/lnYsHmlonUT2wGLe/N/SRqis0N7icnH/dOIHyBxXr2/coRvuhUG+Laj/zT
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
vI51bugurke9ls2jOD9LjpzTnPNza70NyzhvR13bl8Z1mrRqyT6+7pI06Djf
P1lbP5Tv779qu2GRDn91UzDf79Ih6DTf7zRowxm+X/geCt9DxffOaHZ58b4q
Lno9bDvtK2ZVSG+2p+XL/u/YD1+PvTtsQH54MfBKLtu/RvtBh3FkqQk0/kV+
m2iWFs37Fb6KwldR8VXhySA8GRRPPt2yqTf7Ib3C6RL0XLC9vbEvP9d1bnAK
+y1va7lu9FwYvHH/fn5uvSsDq3F/nle9IOIn+Xls30pt+bnC80F4PiieX274
8HQ+pxseA4FNKD/Dargs5nyovXDnTcbftALXKowvg3LbenL+xLh/3sE4u7N/
uyGMI03AtBHnW/qptI/Ml6Zi3aXMH7yOhxhwfjYO7TKJz/tafJ+2k8/j3L9n
N+T6cjKs+JvP70xcAwbQczFugtE3fm5nzIpiXBtdZexD1tMelBnpx8+t6Xzu
DONXudX+zRnff8WV/8745XjidG2ui4F5zXswT6sws8945mkFJVJr8Dl7lbh5
FbiO/jaqcdmSnrtqgmkIn5vKK2xr/uACn2/2ybQN4uvyCrV/HA0Z9X/X//t3
dV39vVpPrSPPRXkuqOeKnSh2grJT9oWyL1D7Ej+g+AGUH8RvKH4D5TfRYVB0
GFA6jPgfxP+o/C/xAokXqnhJfEHiiyq+kg8g+YAqHyR/QPIHVf6IDgaig6HS
wSQ/UfITVX5KPqPkM6p8lvxHyX9U+S/1BVJfoOpL6hGkHkHVo9QvSP2Cql/p
Ayh9AFUfkL4B0jdA9Q3pMyh9BlWfkb4E0pdA9SU5l0E5l0F1LiP9DaW/oepv
0g9R+iGqfij9E6V/ouqfcq6Ecq6E6lxJzrNAzrNAnWdJfwbpz6D6s/RzkH4O
qp9L/wfp/6D6v5zHgZzHgTqPE3xBwRdQ+CJ4hIJHoPBI8AsFv0Dhl+AdCt6B
wjvBRxR8BIWPgrMgOIsKZwWXQXAZFS4LjoPgOCocF9wHwX1UuC88AYQnoOIJ
Yzc4nv6f9zO7HBzYLKMz8Y38EZcmMY/V+I1a2It43cvaz6KY19XRM5zKfC9t
gHeN3sRvL74vaMjXF9k1m8v3m83rNqYH3b88vVYJvr7m+gMHvn+9VbYv0P1L
630/z9e7b3cr+T+f23KZsyTiGPMcuY7/Xpd1UNZBtY48F+S5oJ4rdqLYicpO
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
ziY6HoiOh//oeCA6HiodT3RLEN0S/9EtQXRLVLrl5+uT3Bgvnqevy+S5bMXz
tUO53ybuMI9iXP4VYWVKuAwNSufMZtz5HrqjFfdnc5tj27mfZP+Yt2Qe3d9H
0+sl41SwVes4xvHJ307vWkX3R3xsuJLnrIHfOnZzonxwOHTPmPOh+aFFE3nu
8Pi6MZCuw9O+Zn/4upzXo5zXozqvL9lw8MeIkDx03X6zQ7jpbs08u+HrH60M
A9fWm+OZt4w0P9OyPOHyYJ8W5VkXEtxEwU1UuCk4i4KzGoWz8r4FkPctgHrf
gk796V/puTCmwvjXd0x3awO+7dPj536sNBFYj9pWPqZeOeJLe3tm3alPzxU+
A8JnQPEZ4T8g/Eer+M9GN5/G+3tl4173zhkRdQg/njkZ97lzE3aNWq/H9nu0
c01l3P85f8V4tt95+bledD+EBq9aR/ejkUfLWb3p/kaHZ/xm/497vNuc9/v0
3O22/NzFzranOL51xzroct9bU2Zma+7/cj/K/aDuH3t+00CO7+MzbmeL4lth
5EjOB7EHxB5U9uyON2jG/S2qTVbMXIpvztazvhxH523jDbgPxNbsNnAexXdz
P5193PfkfUoo71NC9T6lJNPi+D6YcXawd6ML2pnTiuO79M/TV74UXzs/9zGV
KL4fVm11ZV1UdDkUXQ6VLic6HoqOp1U6nrxfC+T9WqDer/XepDi+Wxsa3T/T
6ILmUn5xfKNyvbsy3wtwvjbQkOJbdnT/LsyHRS8F0UtB6aWir4Loqxqlr944
2+0Fx7ewxY8O9ym+ZXJq53F8pV5Q6gVUvew60P0zx1czuVv0PYrvsSOvNHy/
1CNIPaKqx45Dq43e2P8uDIupUFk7PBsssuaPc37yBr79OefM3zPveOvvfP7+
9gOzHm7n75m/t+NtHPOEqMN9SjE+WjvapTFP+Lz92oy/ldIwwjrixX7PNKh+
ZV76seBw6OnvW/F1o3Ssab1fh78ffkLI7eb8/fy2p8/3G/AlHVem2+c56aXC
iBa6vU+XD1T2o9gPyv5g/fiCddEf8H5+BLqfToLxve6/fnEiGAoeJuhv35+F
wTa9K2T4vYP2nR8EW8SHg0lhcf+69de7qJ+tlj6WeS3j2IH+d3HlkYUfbg7P
xl2Nru1YTvs9/KjhMP6++qm/r3jw9+pvHVhmVBrtd/6m/m7MB/TLu9kwL/K+
+uMg88Or41fl/6mUBqW/N+hywDMNN3mdfnec9luhw6qf/H34GT3rGvH39ncd
YT+V9+umLdmM9gudsh9VXqSXina35/nwfiW+IPFFFd92t3ye036h0ZLAHNov
Gs1YMPEl7TfdyfLltv1ZcH/uzY+0Xzz4pPXejrTf++EvjjIebMv7eovx4bBD
nHks7VdwEAUHQeGg5CdKfqLKT8lnlHzWqnxu9b2EMX9/+/6/jQv5d0MOrp6Y
kP05EEo6TM7xpHg5PKgVH0n2/9B/9cOG7K/RuHmV0RdycbLV3su3FsfgwZvB
J+2vIPyNj6tTC/LwqVdw1ZJlIqBXwtJw/n77qnZ1KsHrPHyT8Duser8z2gWm
kdlHtgWBp+7ZjCWXsrBkUoen/LskA7pUNOTvaQ+rVb/M9SU5eOnXte3DR75C
99uublOfBcCT/XEdzVvk4c3gLS/bD4rEVeW6Tj1fMQga1B4ziX8XoM2kJjV3
NguHJdbZHvx9+xX2tfOb8i4PTQZMHd2lzknt+ZqhH7c0DwTDsJA/eyOyMbqr
WTL/7km3EQVt+Xvjt5Tb23dgu1zcWjmno+Wc5+hcQ2t6YFUA4Ow63yo55qFm
omU7O7u7+N61uXfBzwAwPL5oM/9OgXu5cWEGX0JAd0+p9vz9/y49n59a/TQP
f4XqVL+me1Dr1bPG0PGfbkCjPp/x++487BNvaZHmjWjyaUXmsrIhir+B8DdU
/E36G0h/A9XfpB+C9EON6oeX++z4Xrd/JpRKaN0EChOh3OkGVvz99q6LJ8VQ
HOHh/rgeD6nuutrUPs+44Gq8UZfiCPlf/v6gOMKo8ds2OFAcjy7R1KA4wmjr
ErMpjljnVIlMjuOfKUMMKY5QGGpTwbTfGY3NgY+tj1IcCys1jqU4wnKr70aX
Lr+HzqM+mHAc29T0/u6/JAdSrvd+QnGE6KzNVziOFm+Xt6E4gk4v39YdBkVC
4PgFRzmOw1rbj+ffTaijv3wBxRFtg0bO5jg+DJ7OcYRD/ZIOURw1T81fJnAc
l17Jz6Q4Qn2HwI43Jr6B343Nc/n3a/pfX9md4ggxZ24spziC9/qSP/dTHMcM
SvxEcQTTlx/WUxxBN6vBLo5j08HW7vw7DlvPNYyq8CUEDe9Hr+ffm9g6fuEZ
iiNsf7r7KcVR43an4YtxFMdDFatqKY6gN3lZzXRvBOPXgx04juU+mU3g30eY
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
mPD94fGmOvzcQ537FuF7cuuFFW9n3NdU6FyM76Ljgeh4qHQ8mStR5kpQc6XM
1yDzNar5+tjZr17DnuRCZxetVb01fnDlbdizKTdj4Lht4mu6jsMKfl6tucYP
636fu3MyXW/9tv3eC5veoL7FsCvJrTLxRMrKfnz+u+TXjl38+YqjeydWy6LX
oISp+fy5Qnm/Pcr77VG9317et4/yvn1Q79v/hcN7zrz5Enc17leyVYNs2DDf
Z2iS2TPI/7N/v93Nl9Ck/qvjLRtk43JXS6cEuh67fH9WzcgkgOV9D1QfkATZ
Fpn2AaOTYGjlTR68L4O198PMaV9z9+2sNpXsXx7h9ID39WBByfZ1aV/rznWL
4X3lNbs0wpv21TB33x0+1w75anS0Ku1r78rb4/nzojamX17x5xbL2DbdPJn2
JZ/jQPkcB6rPcehklPGfSvaXMXU6yPZn3TSxTiY73Z4P0qd9weGqJTrRdbwU
dHZ6Il2X+ILEV6viuzz0p9+81BzIcvgSuTH4pHbshYEvtz59ofR2FL0dlN4u
+YmSnxqVn9VfjWo0PzUHxw06d3pd8EnN9NQpCzbTOnJOAXJOgeqcQj4fhPL5
IFSfD4p8VPka872AuscPM1/Srfd7KPM9Oa9BOa9BdV4jn28C+XwTqM83JY5Y
3pzfP3AxfN8zyh9o2iRwhxG//+HMaw3zsTX3f/xlPmme17Yv8zE5FwM5FwN1
LtbO7WOmF8Urd/3rVI6X2ZxhSfx+BokjSBxBxTFzbu/rbP/FQ2Er2f7B5Zra
sv4T9LbIP9B/zeGN/4+u947r+Xv/x0tGRlbISBkZZYWSkS6bRMree2SvUohC
CVE2RURkhVAqjauMiJDZoJT2tjOi37k61+N9e3363b7987zdzu10Pa5znXPN
cz/nqJ11M5ufLuWz9+QW/X+Cn0EFi5oTP356X+cQPy3uVc4LvjhfUb/2Wbeo
Gf5yXni/GHm/GJT9Yo5XgeNVUOJV3n8H3n9HZf+d43Pk+ByV+JzjfOA430yJ
85kfYH7MFH4Y54OM8wEF58N5CnKeEqXkKSwHZDlEKXJg3BQwbgoV3BSfr0Q+
X4nK+UqWG7LcUJEb48qQcWWo4Mr4fCjw+VBQzofy/ALPLyjzy/MIPI+gzCPj
94Dxe6Dg93i9Ia83VNYb2zFgOwaKHeN1iLwOUVmHrEfAehSl6BHrBbBegKIX
rL/I+mum6C/jWpFxraDgWrnOCVznBKXOyThhYJwwKjhhrgMj14FRqQM/fq+f
ttwmEzU6HR+5Lz8P9M0vOpoG3Ff8DrLfgSp+B9nvgOJ3HBKj5wg64KhpeVLQ
waKmejsHCjrsN4H9Jlbxm8B+ExW/yf4d2b9jFf+O7N9R8e8cVyDHFVFKXMHx
CXJ8gkp8wvEGcryBSrzBcRRwHAVV4ijgOAqUOIrjN+D4zUyJ3zgOBI4DQYkD
Oa4DjutAies4LkWOS6FKXIocl5opcSnHw8jxMFaJh5HjYVTiYY63keNtqBJv
I8fbZkq8zfE8cjyPSjzPeQFyXmCm5AUc5yPH+ajE+ZyPIOcjWCUfQc5HUMlH
OM8CzrOwSp4FnGdFKXkW53fA+R1Uye+A8ztQ8jvOH4HzR6ySPwLnj1FK/sj5
KXB+Ckp+ynkucJ4bpeS5nLcC562g5K2cXwPn11AlvwbOr0HJr7megFxPgCr1
BOR6Aij1BK5XINcroEq9ArleAUq9IvVjjyWk7/u+NPcjfffN2H6I9J3rMMB1
GKxShwGuw6BSh+E6D3CdB6vUeYDrPKjUef4lHc8m+9Cr4QJLsg8O+rX2DAj4
XztyOyjtXNdCrmtBlboWcl0LlLoWjwt4XKiMi+tywHU5rFKXA67LoVKX4/oh
cv0Qq9QPkeuHqNQPuW6JXLc0U+qWXP9Ern+iUv/keiZyPROVeibXaYHrtFCl
TgtcpwWlTsv1YeD6cJRSH+Y6M3CdGZQ6M9eNgevGoNSNue6NXPeGKnVv5Lp3
lFL35no7cr0dq9TbkevtqNTbuZ6PXM+HKvV85Hp+lFLP5/0C5P0CVPYLeN8B
ed8hStl34H0E5H0EVPYReL8Deb8Dq+x3IO93oLLfwfs4wPs4WGUfB3gfx0zZ
x+H9I+D9I6iyfwS8fwTK/hHvTwHvT2GV/Sng/SkzZX+K97+A979A2f/ifTTg
fTQzZR+N98WA98VA2Rfj/Tvg/Tuosn8HvH8Hyv4d728i729Clf1N5P1NUPY3
ef8Uef8UquyfIu+fgrJ/ynECcpwASpzA+8jA+8hYZR8ZeB8ZlX1k3qcG3qfG
KvvUwPvUqOxTc5wDHOegEuescgy6vCq/AF9+6mm1oUM6HAkNuZH07xF4fRtp
K9ohvKjBW9GO098GfH0r2g1GvhzWUuSPE05rH2xh8RE3XU9tGyLyx6e/TOcs
E3ncZ9+hEynfPFro/OuDyNcO5cy/p56WhPERxhE7nQrxwi6josej3sCk9TMP
thZ0oibYntISdOIjf9wIFnR2ff7yfLGgE+yzopDodGn1qYDy1qgdD+dUF3Qm
pA/b6SboPM65+/OJoHN52R+/60KPnkwbNju26y4z+6H/sic2DIE+L6udE+1Q
2qJYTbRHha9ZnUntqo7dF59fk4urHdXGD9yfDQMf5x2vdz8U1oz/5C7a4Uva
3C6iHUvywxtTe6vFkv73notjD7c9G9V5sKR/4amk3/Duue2i3WzFKknf+un9
GKJfcMa00FTQv9Nl9BgNQWeY/85con9Axfu+aMdZQ1rHEv2/C707Zm/KwfR7
08bTPbsp41Pb0/26vXvoeRMevmDlRd99g7MgbHXZKMKTW/1Kai/6g5PF8XF0
H+9izVu96Z7eXT8HXSf8ed9VfZxEfxzYcbFnTcKfF2uHOvt54cGlt0NLvxSg
mpmXrr9pBpxob5FbeNYLX9T2vkjtPVfqrqH23F/n3aq/K8Wpo673Ufm7w8z6
nK1e/zGhoDJHt4BwKZF/CrIcuz+H/NyG/oRLaf709DOq9zqs1FHJ9Ee4qNd9
IdUJNS4ZrSF76D9z3hgTYQeatXuiQXbgR72JDanOXP2h7tNFNg9g0NzlPlSf
1DpWvFN8F2r5Zr+oKN8RtbYkcy59d21Hve+ES1nXdGUz8V18/s2tL+FSoqs7
J1B9MqhmesuP/ojqA6Zn0XeN/o7ZTPbn8uND6uK72C9kZzf67q6OBzSpLuoy
edVm8V1s/GPdTfpu7A85XqctbtbOf3yi7vjJ8Vo7/9InnFXX1B9lDmK8QZM+
utN4w4aGldJ4c7esiEsR4x0XUTSFvrtuj/8bGm9M0LXPRmK81rNmGtN3X27r
Z0Hj/efuPmeuGK/XiN/B9N0fh+R41VWn3XH642OWXCzHmzXsnxHhrMbU2agv
vovmM6fp0Hh9Nnp9pvFqjeuelSzGu/Z58yT67sL3Uek03omdMq6K76JWqdYk
+u5trw2WNN4e3VM0xHdxcorqE/ruu0uHfh9LLEUXu+QfF5ZvN1tYPu6D7qIw
mHJ/8y/RDkNdD+wS7VG22hombUT7H+1DD+gdEf6Fu5t6tKP3RCLz1HY7LMpB
s3rbZnUKzYFGTa52t/51C65vOll/xZscNJx+523XoTlgZD7MN7ZbMGj0aBZL
/8+/uOZo72R6p6Nf0L7Dgg6EJv0eL+jgMYv4T1aCjoH/kA6CDgTe8IsWdDBD
xXYC0el5QfIfHJ3wefOZE1GrmP+AGMn/lKSFY0S72Vbmf67VipP0vfaJfUro
+23WXx1B/Ot/HXmA+F+1ynUi8f8mcNVy4t8soGww8X/Eabcv8T+6tWXNh+K7
7otKiQ7o54QRHdznfuMv8X8u5sVJ4v+PSYU58V87e183ouOQ4jOV+P/0at0e
4n9SwpYw4n/4vJgByd2L8HfztU822KbCQ8NWbT6ei4CLTQ9OF+1Q0mzBKNGO
znF5ZdT+Tr34qaZNASZqT4yxu54BzY8efTQoORLu3B0X2WhUPq6ZPMGw5fJM
OLbx4JiZY2/D0VJL32Wfc9Hh+tGDa1Sz4XhCtHaAfyi0GOWu49U1D2e6X98V
fk3ErbFv6hTvDIeiffeKBX3QbBy3R9BHvUsmLwcL+oE9n70Q9MHwyytNQR8b
zrl7g+jvT9p5TdAHw/4LnQR9/G3+Fol+9267egj6UO9HyzWCPhbsq1lC9L+d
Obb5jEoO/vhrF2nQMBe8p/m9Gud9G1Rtv7YO6CP807MGO8oycmDJjoEt5msG
Q+bk33tEf7hccTJQ9Mex9bVnUv+AtvW6iP7g7O1lL/rjnxpD784T/avtn7qU
6KdbrHlK9L/tKTe0Ev3zj6u0JPoq6QmuRL9GjMlCol/XPNyB6KeaH4sm+rr9
7cKIfvXRLToRff1L0zcRfRsYqEH9l7ovV98bfwUHXNFdtnBSMWSuqO9dPDkZ
/v3L3Ku1NQej2oabN9+aA7/r937qnRcO3xkn9ohxYk3Z/554FJvdSqybIpW7
htpiHXmOeDooeV0QzFmw7niLA4L/yZW/YKU62qks7CYM5PcX6vP7C6p8b/My
jcr/R52ISnqwn+n07F7JB+7+UskX/GN+mlmt7Du4fw7eSHlxAvrnwD6nwb1b
fX8I+UtUKu9HCNjksdAq7UPEjvPyngTzxtNCreKvQO/PESPEeHH52+5DSsV4
6w2ZvIfozljbbSR9p/W/069PCPq3GCdWg3FiLhznbFYbVsmf3hCo5HfbgoJd
xOeduXKcW6bJcR9Tk+ONqvK+Qze+H1svflhPkpfhNvMckl+8YeDPJEGnV9qo
MSR3retrPWkejg2MfeBF/FzQHynGC3cnelwW40WH39FbWojxHvqaV7TFOAVm
LXlcWOvXR5y8beAyXcMcSGCc2C3GiVVjnNhM9RHpu4xTcG3Dsxdr/PoIl3+c
aq0j+tszHmkR45EyGY8UY66Th6bvMdZ5Z8VL50KskRJce7FrAvic1NqoE56F
Ode+dc1rkIcdnUZNPDYAYYhD++3B53KwV+yPlRFrRZ6qsu90v2/BMGR5S2vb
wFx8Pm3K24FzsvHIgBqve16/BYt2rWljcVrEbdu6n7s9Mgt/dppw9MukIOig
ktzROCwfdf6mp6+9/xFvlvtVGC0Ng1n2z7MykpMhyH14vG9KIaztkfxifrWX
MKb1s0GCH+i5avgUwQ+4qHx3OS74OVLTdqngB+5sXOcq+IEZm3eVEz8mpwPM
BD8wtMixQPADoQFbc4mfT/N71Bf8gMuHpuGCHzi7oPYS4iezk289wQ90MXdU
X3f/I/inzh9P/CzccrHesBmFWBZkZfA05APaFcVE2p27B+uW22wj/s2fz1lK
/D8u796B+ucbwhoa7/RFZ4fSeHc46TsT/cOp4/aQfEZ+DzlC8hlk2rVzL8HP
q49XTQV9uFTWY0Z8yAfAWW5xGwT9H8POnCB+HjrdHyzow7jGa14S/bQpztuJ
/+nVw7tW8j9o/XWiv+9K5Ekab5e5B7fReCse3mxC9Ne+MzGc5F2Klz6bZY+1
DRP+MMh2vy6CafN2S2y2ifxrx8DCr0/u4tr+F3cErQiF+L33qT8UqQUHjrEN
A81vE8YeEP0nZ8QtFf3Be0V3D9EfqvfKi6X+wd/cEpoPKcH916agT8NX8GTZ
nPkP7kfDxG83u11rVox2f8+fzvmdDHHwXHV4x1DYUZH1PLVFEZ70X91pZcc0
+Dp4pr3hyP//uxX6/K7BZqfaBYI+7Ln6/s/Jhq+wccjv30T/qsepwYI+ePoH
DhL08av75YVEf836vR8FfRjjp5uxomMaDkyJ3kX0lfcp6vL7FOXKOw4d1ieW
ds1B/gWrTT4bKtbHwahFqhottucg/0LwyQmLrpjdgQ8PXOuSXeBf+Hk7Spvs
Q4dZ0i7wL4z6Z15pH17oG98nuvyLM2439lS1jYP11u3qEl3+Raf4u70CBP0v
amqVdPkXxye8W/gf+v/7zkimv+36N5fLws6vmebsT3ZeRfdmeaGwe9sYt+PB
uJ3hXM/R5vcsWA6gyGF3Uq7RamE/tyW23kH2M+38y3PkL5yr4Ge6cj1KeYfC
o8o7FB9yIkZtE/bqal3Ta9WFvWrvFtCzrbA/3xj3sodxLx6MexnQv6XpXmGv
jp/RXF5N2KuZkzWyyb5tZ3yFNeMrRjG+4qvvhyGRwl7pGIz3eCXs1Z66s5PI
Xhn7vZ9L9mrk8mhTsldW2XctyT6ot5h1nezVV+sTZmSvws8+bdhf2AfWF2R9
wX+sL6xfyPqFfqxfZVIfMVbqI05ifWyQUf4+TdirOWNTZ50R9gqv3PNfIOxV
o1aHOpO9GtGz0RKyV502rnbyEvwMP3f1KNmrNHWtyZX2qn3cSuKH7QOwfQDF
PrA9AbYn4ML2hO0PsP2Bp2x/Whw54z5U2KuGE51ePhP26tU8neFkT9i+YVdp
39CP7RvbQ3SV9hDPsD3sI+0nsv1ExX6G//YPF/Rh0enZaoI+HMzPtLIX9NtL
ew5tpD2HALbnC6X9BwNp/6GM7f8g6S+A/QUo/uLukfYtyV45b365f6KwV6l2
/7zJXqWp9u9H9srR/nnET2Gv3h9v6Uj2R808kPpD7UGjZk4Q9mrs+FPryV5d
is8YQPZK0yJ6jugPLw9OR+p/Uj26aQthr1r2Vm8m7AmoxLVvR/akrU8PL7JX
2S75kVnCXhlXRNUiexLU3NIqTdirMerlw5cLe+UxtiyI7An7fXzG72J0Z79v
4Tm4h6AP7Uz3jT8h7NXLuniH6Nsbt7pK9qpdj2+zBX0sGu69jOgvcf8+X9CH
htUDKpYJezXk44xYoq+8f8FxFCpxFMcJyHECrOM4Qbvp24VkRyIe1g1pLuxK
q4Yn/10W9oTjEOQ4BJ5wHBIm4xnkeAaOczzD8RJyvAQdOF7SkvEY3JTxGG7n
eMyrZtl8smPPrnUNFt9Fxz5148lOcrwHrWW8hx4c782WcSNw3IjjOW7kuBQ4
LkUlDrze/NaoXeFxaBPaI2jSiGJYreP+pcOyt/CYzzvE83mHoVxH2iPfU8M9
8j01MOT31P56vDnoGB4Hf3Sb/xN00Dr8TXwnQWctnyOoWeUcgbF8hw7qyHfo
0IbfoSsN7e2zRyUdZhyM1mlXnIyv21nqtd6aB/v5nuHcnc6V9wwf5vNubTYN
We+pko6vvk57rVucDA9HnTjaUvR34HuA99vMrLwHuJDPAy6a3MgoOPk1tk+4
U71FVBF2ygze0DjzJQyrcj9MHz7/2LnI8mbriDwMsDWrPaVOFpbfmzTlerU7
kCHfE8Rb8j1BtOX3BKO2l1rdSH4NvTwmrhP0YfUi3Y5NBP2q97284nOm72pm
uAv6kDjjtrGgD7O+rc4n+t3ke45wQr7nCG35Pcdlaotfx7cvwOzFTmdTIjLw
3o2ri/xW3od+0eq7ikty8Y9+eb8n/7IwZfWG2m8fh8EJ/eXJPn9ysJum2vku
bXLwe+91Pq/Kb8HDhsceUj3T5NHaMVRXvLXM5hPta/z4XOePoA+/GjeaKOiD
Wbj2/nOCftca6QcEfRj7pHMXQR9Mqi19QPRPR25OFfTBWOvHaUEfrqrpJRF9
jcaV9CEntpI+FNtI+tPWtujZdU0p3ji1o2btIzEYsFel7FnnaOh5YvDWxDMl
2EdDc3bu+hfY59DBiOvXQqHb3TRj0R+szo2uo34kBnSsi22fi/6d9dvuEv0h
rIl5I9EfNm1t3ShQ9B8ztrGtyakSPDnLqGJAeAJMbmnZ7vvwaDjQL+JhC9cS
POWR927WoJcQ45Q93HtyqLAn67TbPizBI5018nYfTgCLvZr1ck7fBk9+jz6j
ynv0xc7aLoI+/Hpju1TQx2/Tx1wg+gGfixMEfbBpEXFM0EfTDf+OEP3jz762
E/Qhpiw7RNDHi/em1yH6Lfk9909V3nPv1fbgw9UfcnHy2UUWPgezIGTbrwYp
JrEQuL3WANUpebj7wbQXd3Znwe6NjW97/wuFq0OtfOca5WGni79OqcdlQZrH
2Mi/D26BHr+frsrvp/vxe82mB/ISBX2I+VSoK+ijQ3rPze+Ifo/V5oI+JFzQ
jhT08cDhMzNPCPqDkzOvCvqwUGuTh6CPB/V8Com+8l55LX6vvBu/f93jnlpd
T2FP/C6e9yZ7cujWdDc9YQeCGf9cwvjnibwvdpnf0a7O72h3Zzpv33aatEPY
k0FdPbLIngSOOj+vo6DTnHHIGxiHvIv39Try+9T/psv3qc8p4x1jtNJd2JM3
s4aPbCnsSZNFF67rCPswkO9nrpv5cizdz3yM72N5PnPo0P3Cnhy0+1CuJexJ
u59f22qL/h34/uSU3/EJdH9yCd9jM+F7Qv2bwp6ssc5bQfYkwW6HnabQd+W8
vxuf97fi8/6v5vbsrSPsSZcpKosnC3vS+dgzvUCh78q70l2rvCt93u1al2vC
nkSpb08hezKiRrFeU0Hfg8/v5/P5fV0+v3940716gj54DHY4KOjDx5d5t4n+
BX73eRy/+6zP7z4/9Gjbn+yJheqYze+EPRkXpveT7MnbLgEtyJ6cK1x/m+zJ
cie9caTv0xrN8yN70qRB4XuyJ+Gqrlf/o+/I+o6KvsPG2LlkT9rfTu0q6MPs
lEPtzgv6n1bsaE/2JPCA7wWyJwEtteomCvpnz669QPZEpVlaItmTra/75BH9
WGmvgO0V3GB7NTxcsxHZk26/6tjVE/YkJiVfl+xDSapxN7Ins19sPpYv7Mn3
Ya9DyJ58qJ/clOxJdMoLh7rCnrQ8/9aH+vdc1dSE7EnuyxujRX94ZjSnHtmT
Gq9XXiN7ct7lyOz+wp6Uzsr/8U3oe5DnOa2Wwp7orhh+f4awJ2nrwyeQvgd9
0t1A9mTFziJzN2FP7oT+Gkj6rrzDe4bf4T3F7/D2rO4QRfYkXv3to37Cnhgf
z91M9uTa8LdtBH2o8be5s6CPBxe/9iP6TbufcSR78mnGgxaCPvYvHmRK9PP5
HVu/Ku/YXmw+assaYU9spjxxOSnsSeeNC6cnC30/wvXAzVXqgVOfX/pC9mT/
slQzsidqHpeekL735ndjNfjd2CXsr88dOrVP0AdPL+tpgj5Oijj5gOyVJ9cD
e3I98BfXA8MWD1SZJ+yJaeKs7mRParb99Yvo7+J3WvdVeae1h5wX/CLnBZ/z
vIQ86vN9tIfQl8beS9r/+oD6JnN2XmsfCmlyfjFezi/q8vxqhxZbdO9WhKNn
9027VfgeZ+iWTLoz/i4UyXUCi+U6EXmIXCffY7t9EPSh/pJWYYI+TDItbkj0
h8n1BsZyvcEDXm8NAg/rCfqQ4BR3PKjwPfg5d3YJE/QX1Le40VM1Bxctepx5
piwHx05ZXPBUIwJK5PrHm3L9401e/3v65NlQ/wFnTrQ9K/o3LzG0ey76Vzu9
+6Rohxnnu3wVdCA5ZvPbZ6L9tdRT8Jd6CqtZT/sEXNpC/TNm9G8s6EC0favd
1F+j91hPkkMDExt1ksPlaz3aEZ8/79eytBDyrJXab0A7IU+DN+Pq0niV+9nY
zqA+25lsvs/tbZX73Bz6+d8mOexqnDj2ppBDvtn3r0S/TmzDhYI+PHENzW8r
5DnkcYwz0e8k/Tg+kH4ct7Af15D9MUr2x+Hcv6uMB3CGjAewHccDjvK76CC/
i0X8XUMZV4CZjCugL8cVv+V4oeJ95XihC493qoxPIEzGJxDI8UlDKTeoLuUG
ASw3ljOynDGK5Wwg4yW0kvESDuR4SU3OI06X84gpPI8878DzDlo87yYyroO/
Mq6DNI7rFsp1BbyuwIrXVT25DvGdXId4htfhV7mesZlczziR17Ny/0k433+S
xnFpOt+XUsr3pQzh+1KaSz2CaVKPYArr0S2pj2Ai9RE6sj7+LVw278aQbPzc
Zs/wQ2eEvd9jmD7ALhJ8K4aGfxB5yNY2hqbNvXIgKe64aejhYAiILXTVcizG
Bqfsdyx2SQSd9UsWtewZrbzjjPyOMyj2oUDaPTwk7R6UsN0Ll3YGB0g7A+ps
Z/qcnDGk3DUf9yc3P/61bSY86lgzy3JREGhJu4pp0q6CYlfvmP420YkqRd1G
i3ouu3UbBrVxuBarEwJHXMYEUDwW6lLXnOIxzT1J7Sheerqo2tyNmwtxctvI
FptapIPL2nOtnG6EQqC05/ijvNKewxG25+7xzR0mJAt7NTrm8Z2uO9FdY8P8
1MBQ6C39AqL0C2DCfiFtxqQn/jdKseuKpo1n7ArEBz//rNrVB6F7fMl9umd4
Ucm1neOjnkfU9c5Kp3uJ12t6DxTyhxt7584V8sf2jQK+mQr5bz1w6IKQP2zo
t9lSyB/PJXU+TPLf86neKiF/CG7/KFvIH8e1DM4g+fO74VCf8zXF/rNfg8vS
r6Hyvvx06UfAQ/oRrMF+JGPDrx5C/uCzo+8NIX+8vEAtmuR/W/pNmC79Jip+
s7/1lz5C/mBpeWC7kD/2/z49jOR/93WWD8WrE/xHzaJ4deoGc0eKh4e/Gm8u
5A+WKz2HCvnj96XrvbcK+d+W/hqaSX+NH9hfb9qfR/KHU2tvjRPyh1JTw7Yk
/5rS78NJ6ffxM/v9h9Zvngr5w5H0d+uF/OHblsjjbkL+TmH+P7Ybp0CMh20D
tV8fIanRwqbtDHPgOd9Pe4Lvp81i3GmW2tq4kykF+GJo+3Pda2dg9iSPcevX
RUAW55WBnFfac15pv8pXL6tFMfY9sfTOgPopmKt16e2ge8HQt+mfOx4zC1Fr
Rd0hNRak48qffpsCM4OU+gw2kvUZVOozBl2rF+wzTsHmrcbEq/z6iGoe9x+1
EXxeeBqRQfdvNzKaXL2T3i3Tbo+KLOn+bWu+P3YV3x+7j3G2Lwaanxf8g16I
Y5LgHwa92qZqK/jvxXnrYc5b9ThvXRzn3FTwDzFtdvwT/MO7Hyviif/gRqsu
Cv7hzZSt8wT/0Dg9cT7xz/Uo2CTrUZDG9ShLj95aO7z8cGazyAMqFsVocTmu
m/H5ZIhnXH0w4+pVGT8c87BjyeegHKxbZF+AS3Lwn/OZtHizIGhkt/Ih1dX1
Frsk+DR8hTM8m7eKvR8NJnuKz5AeBdy4NXxK1HNT04uupVOFHkXIuhzOlnU5
9OK6XGvDybWsvfzg9HbLJYIfuPLwxq4+gp/rWw7eoHcfZnzuUatNUqJpErT4
PbDOO1hWBZ/fnnHRGqd98gSf8ElPp1TwCYPyb7R7KviEvMKrVJ83WlFx6FTD
VzDNbMt2qne1lHVIqCfrkJDEdUjvk9NHf+qagw8vGKyieviL/s6f/q0Xfjmi
sC/Vr7yO1fxIdaR7r8t6Uh3JV8bbqCrjbVTi7ZperskktzbXQ/6S3Gqna04k
fjR+mXyg/9+h27oP0bM7qbOY6uqcd+BemXdgHucdelobx/iIdd7X/OnjbmKd
p1jWKaZ1ont2rDXxVzdwSzfi93sTw6bVbOOggazr4ihZ18XuXNfd/GFY5bse
R/v1D1ZTeWk671JF5b5kWXplfRgXyPowxnN9uCRA20TQBXO/oum0P7Bj1nd1
2hew93SYQO9fLPt42WLrpwemNZ5vHDpAzMvYK/VMqM5msq1TOtX3EisWV5B8
psh8B5rJfAciON8Jul//A83XmPWNftF82dmqNST57GuglUH//9SwvJLezyXX
jxOd1zLvA32Z90F3zvt83/muEfKBMa/XHxXygfn3mg0g+Qy95L6Q+J55NnwQ
jWMP3imnfRMjWYeHUbIODxO4Du/ZckkB7ett3WLzhfb1OhZ/TJ0n5LC1ov1X
Wuepn64X0P6OmtfgIbR+wi5/aOcp7MahB6WHqgu7cWzUNm/SO+shdk3I3/2Y
m3t2g/B3QyfGXCB7e1Hmj2gp80fswvnjAa6TPOQ6SU2uk+ilanTdsaAU/z1K
7fs1LQb8Tn+94jw5Bnpv2navmfDvli/nWi0T/r11mtNa8i9+sePq9Rd6vU/r
hT7p9e38j7kmQo+U+2ONgje/ovtjyzjvPsD3zabwfbPb+L7ZRSFDw+i9gPgZ
51yzz4WYmg1pOYD0t9+u8/Wobvzhm1Enqkt7pr9PITl4X11hLOQAqUmOtkIO
cGbW2Jskh5juW5qS35n7+461kAOuck47SXLYJ/N06C7zdFDy9NZczwnhes5F
rud0HelsJOQAb8+GJn1Ji0GTwDktSQ41J819J+QArYc1LFkq/Gwn6PW9hZCD
XYCh9gphTzSew0SyJ3eyf+8le6KSmPqO/L7fho13Jwq//+/2mMPkd/KS1iQ4
iHhjUIFvo80i3ljY3cif/F1Hk0v4R8Q59yODR34TcY5qvdnHyc8qdaGK6f+3
LrRkWPHOzH65uGq2ds+oV9nQvv7suMFPb8PjIh/fdqtzUN87cPH3SznwYFgT
2+eDguF8d0OPPcLfWX9NqV1d+Lv37Ser0r6SgrveyLhrpT4ztOdGR4oDl+Oe
LhQHmvw1NqY4pHxJ9xx6D+LK8NC1h376RBgsMvtF7550TJ+VTH62yOrWXDFe
uGDovozinKVnjl+l+VX6+30ed4TmV2l/7JUbkHMuJOIct79Y3iZXyAf6+j7L
pXggxnRRJ4rHgmbUfSnkA3lNj3YX8sERL+dGkHy4HgVcj0JDrket61LjnJAP
qH95oSnkg1pmJgtIPta1t90S8gHjFf0mCfmgW8c2bUg+a36/9HYSfjZxgtrY
msLPeql+H0t+Nlx1tC/FY+nTghpSPLZt5502FA9Hynb8INthM7ffknU5fCrr
cnCY63LP5bhwgBwX3OdxKfugyr7oCt4P7Zv0aEB1YTf5N0I+s/EJhst5gaVy
XrAbz8tNWW8EN1lvxL1cb8yR6w2GyPWGi3m99eX9Xf7F6bzPG9XR8izF+d6N
N0ymOD/7Ya3UEBFnqsn1j4Zy/UM7Xv+XuB5Yk+uBSl2xldQvTJf6BedYv4bK
+iTOl/VJOMT1yZtyfrFIzi8M5/n1lvVYvC7rsXCJ67HRUt/xqtR3UPT9mqzr
4nRZ1wXgum7AG5vNFLePztmRskLE7Zpjy2wobiyV9WEslvVhKOP6MK9nfCTX
M17j9bxErlssaHUzcJKI2wN43b4O9/Gg+Hx05xgbis8DXxwzovi8h7SfMFfa
T2zG9rM91z+ryXovKnrNdWwokPYZ1dg+X5d1Y+gg68b4QakbS7sBj6TdQBW2
G2NlnRx2yDo5KnVyK+kvYPC8Sn+Bir84JOvtcFjW2/Eu19u9vfo6Urx9ztd2
jpAbmDne6ERys5R1ezgs6/Y4jev2bPdgt7R7oBYi7d4AqV/wUeoXnGb9OsX3
8R7h+3gL+Tygv/SzOEz6WVzIfnY/1107c93Vme25/YI4X4q3m7XatrcfxdvH
LZoMFvHqKekvMEn6CzzH/oLxG3hM4jdQwW9MknYS50k7idlsJ/9Iu4dTb/m/
bSvi7T5s9/ryfbnWfF9uKJ9/1JdxFBjKOArecRwVwHXdUVzX7cp+2TD60gGK
t4ee9k4Q/IP95gZ1iP8I6ffBQ/p9OM5+n/Eq8G97JV4F1jFexeNqpT/CBtIf
4Q32Rx58PhH4fKIvn0/kuAg5LkIlLuov/S8mS/+Lh9n/LpT+Gp1dA1tNFPH2
SPbXbyRuB/0kbgdjGbcz/VFlnAAeMk6AyxwnrJdxHe7crV+T4u0mHNcVVTnn
OIbPOXJ8CxzfghLfOst4CVJkvCT6yXhpkcQpwVeJU4LNjFPiOA1nyTgNnTlO
4zgQ42UciN84DvSR+2VoIvfL8JqyXybjf+T4H5X4n+NS5LgUUzkuTZX7hvha
7hviQt43fCLzMuwm8zIcyHkZx8PI8TAe5Hh4tMR9YW+J+8K9jPta9qF8Lr2X
FG8/5W71/8TbIyR+DEMlfgydGT/G8TxwPA/ZHM/flHkQ2De+k+gk4u1HnAfV
l3kEuMg8AtZyHuEt9yuhh9yvhDLer4yWeRzUk3kcKHkc5zXAeQ3Ecl5jIPdt
4bLctwW1+3Lf9oPMuyFZ5t2QxXm3l8ybgPMmeM9500mJ0wPG6UEXxuk97trv
S5aItw2jEuZSvH124091irc5X8O+Ml/DyZyv3ZR5LqbIPBcbcp47QNY3sLqs
b4BS3+gu82j0lnk0tuc8+invI7jxPoIv11t+t8ncSPF2nEpThwIRb1eMqZ9J
caaHrOfgGVnPgUlcz5nfvTJvxVMyb8UQzlvt+R7df2GB2nSP7jfeN//C9+7e
53t3e/K9u31lvgzt3xu8zhXxdm/OlxvK/BoMZH4NUzi/Npb1CtCW9QpYzvUK
rrPBq4aVdTYczHW2dFkPgWBZDwFln72I9zuW8X7HF6771d41aTvF2w3UPmkJ
OWD61E3WJIfrsq4I5T6VdUVsz3VFvX2V9QSYIesJMJHrCbGyzoPXZZ0HS7nO
M1LWl9BC1pfgC9eXMmVdC71lXQuUupYR75vU430TBecwR+vTU4q3u/SyyowU
8XbeN4vxQyjexsBQireHd3IdS/H2zzN7n1M86SDrNqAu6zbwZ5+s26zic0a1
q5wzWifrfnhL1v2gO9f9uM4DBmO9triL+LkN13lSZV0RrGVdESK5rthD1hWh
C/evxnVFpV2v3bzZWSLeVuP2BFn/hPGy/onOXP/sJ+uusE/WXTGO666MJwHG
k2AvruvWUFUvpHh7xt0asUI+uFKnQxHF29s/HHpC8bbWDw1TirdbOh3fTPIJ
kvU3DJb1N3zJ9bc/sv4MX2X9GUO4/mwjcUHYQOKCQMEFOUgcEbaROCIoZRzR
GIk7Qm2JO4K3jDsKlvglGC3xS6jglxjvBFkS74R9GO/kI/FR0Ezio1CN8VGH
uzS5mjm5FNfd/hb5zPgh/nx89M2GtNtw9fPQS6IdJrReWf+58UNYfmxGKrUz
zg0Z54azGOfGeDxgPB5EMh7vcva+d+V7S7B88t3F4Zov0MNrY//g5Ghw4nuA
p/I9wFMZB3h5/69C0R8+LkpuLPpD0lrzm0Gi/4muOlrqzvn4oWu9PW61M+Hn
5rH384ruwBY+V2vA52p7M47xY3wbEP0hXqVkiugv8sI6nai/gstUcJo7GJ+p
4EEVfGgo40IZd4qjJe4UzBh3yjhV3CtxqvCdcaqOEteKrhLXCs0Y1+oi8bFw
QuJjUcHHTpJ4WmA8LcYznpbxt7BX4m/xKeNv/76P/0zz5TG/V94jMV+5H/f+
pnl5f668mOZrU8jlvnFivvxvWFezF+2Mo0bGUeMsxlEz3ht6S7w36DPee2vx
Jkuar0dHhqxGMV9JW8elkvxt+V7fFXyv71fGmU/1yZlN8zX1yLRWoj/smq07
ifpHm7a4QvP1Q704aqeYr5dPu57Np/vo+ByiOp9D3Mv4/HaprV7RfL1JfrZX
9MfsC/nVqf9Ul+XnKL4KN/avIeKriPNjDPLoXU7GB6KqxAfiRMYHMs4QNkmc
IWQwzlDJ90tiL9p7/vQxVfJ92Odajepy+g43G4k4IcLGLu6UqaBvKttR81EA
xXURDtzOOGrMlDhqbMk4asZjg5/EY0MF47EVu2cd93D5MfFdxe7NkOMCU2s/
1y3iu0d4XBk/u6w4GB6H+w6n7yP8Sa99d1+0X/YW+r2zur0zPA56dIxLJHzL
Sh2NAMLLWeisbEf77N23NM+jffBjf7oH0z7700P3etH++IYHpyJo/91jzJI2
hLexd3h3yV3QPxK07ALR/5X5xZTorIv899VJ0O9uMOEz0f/lOFCLcHSz24as
IFxQeuzNa4Tbcat7fxnts5e4a2whPM+KVv12EF6ooUP5G6Lf6oFu5TmOSI09
mvV8Mv93jmMCz+N9bg/l8Xbj/aPlsY9113u/imjA9nw691faT3J/3RXNLHUW
RsD0uZd79TQqgmNZyVm5C1JBNXKI/a3vCRBfOvvGGLNcsNg++66xRRYsv90i
wGxhBDZfN26joVERqlxvFJon+hcZpCXj9wSsOD3Jd7RZLsZZp+6m/gtf1eh8
VdDxC5tlbSXa67X/UdRLtBcMueJcU3z3QdutFr0EHb1JsTrZgs7LPr57wgSd
jLqTBlmK716NtAui/qduBaR1FN+d79n+IPG589q/z9T/BtfndwT19d/g/cr0
OcelSv3fhdsHcTxjKnEs2FHiWNCGcSxfpfxxsZQ/NmX5X2b68TfPGwk5mxYy
/aCMtpV17FhuV+JqO65LLzzZa/D4Z29Ma3P+svzhxsr+q7hd6f9A4nZgrMTt
wGTG7cyT6wTey3UCe3idbJY4IrwncUQ4hXFE4+V6wx5yveEfXm9jetlipJD/
s2+X31gI+c/VbHjcSMhTb+H3iD5C/mv3FL6lefx3bu4TmncH5l9zpNenf50f
mKoy/0o9tjG3A+d3ih1oOdFx8Dujm/+zA0r/Ftxuyv1NJM5K+I1KnBWkMM5q
vtQjOCr1CP6wHnVsnTzzhlgPx+sH5YwV66GHyoEE4t845MvsZmI9aE0fsZ/W
Q+7lzj9zBP8JGi+edhfjMjrsZkTtieeup1H7qD51zocLOcQ2V6lLdCoyhvj3
FnTu/Xu2ur6g03/4x2LRH5tutq9L/T9vXD3kuvjuvnJ17XFCbi3c76VRfxuu
T7qPqvmpovOD/9UnB7Hd28vtC9m+vX4c/OZfvxzT1rWWT5nw7M3/6nVm3F+T
21dy/06F2u7V9ZxNv105qU96rfQ3Yfv5m9vdub9Sd7KfsHSjndDrQOaH6f+v
fTX3//C3crwwVI4X6vB4E+R4wV2OF9ryeB3qVcoTQcoT77I8m0t54j0pT6z7
UcqzlpwvOCrnC/vwfI2+XTlfoCvnC1N4vlrJ9Ynxcn3Ccl6fcfMr1yc6yvUJ
hbw+Wb9Qu7r3GFuh13V5fSr1h9bcbsHr7avEweIfiYPFUYyDfSXtOa6R9hwP
sT1fxfS/2x7SIb3uxPR7p+pWvjtcyu2K/rL9gcxtfisnCr1+yvbBtuxhZd5d
zO1KfxuJ+4VcifuFx4z7HSf9DhhIvwMn2O8ckjhk7CNxyLiVccitpP9CQ+m/
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
H2Gv1Ef0Yn18N3DQp3CxTuJ/hbyhdaLa5SbQuh0n7QN0lvYBy9g+ZEr7AGwf
cBrbB5Vcef7z0VB5HtSNz4G2DFsffXJ3Ce5XjT2R3u4FNNIaXPjlbzRclucv
cJc8fwHT+PyFhUG3UU9F/lIz5nJussgX+hhmjKD8Zf/SpvvoXOuzvEB9Ouc6
aNTdPG1BX8EPn0jpO+HrjMiIWhyv+rO+K+0vWd9bvjh0XfADUz/P+Sz4wZ8t
uth/FfwEyPMmsECeN0EDPm9yu9+utoIfmNSiRR/Kp3b0WqdN+YuCO70dqhUd
OdB1QGfOCxQ7E8Ltz/i7Sv9Ptjta/J4R+T+cKucR/2vvy3nE+3sZY7qKeb97
ymMX6WO/+Z//DBRyDh05t4abWCebNzuc2ifmxWDT48mkjyP4HGgdPgeqvIO5
SHfgMdIX9TPbXpCerhuV70jz9SWofzDpV4audoSgA3sdYhxKBZ2afN4zjM97
JjKufvFsl03kF7ad/rmO5h3d896Q3n3TPBFM69b+ah1nWictT6zcTXp61VDf
kL6r6VHDgNbtJYdPE0H0N4yNrkHftSxbPJ/Webv1G5bQutrPeLy3jMerwXiP
uMyQtrR+DNRMyrPE+om++EiL5qt74ug06p97Ku1EvStPMGnMjRLqX8jnO57z
+Q57jluU8yAFfB6kHZ8HcZf3DICbvGcAJ/A9A9qMi0tiXNwFxu3cSTjWi9bP
GzUff8EPHrma5k7recfKsCzq/8K9jqngB8bvPHaM+jfJrbz3AM/Iew9Am+89
2Ms4wI+MA1xX5d35wnkzE/6LG7xab5nXMRF3abb7/I7iq+O6XaIorr4tzxvi
YHneEG7yeUOQ8QD2kPEAvOZ4YOEba2MXEact+zmlBcXtr64vX0N0Wsnzj3BO
nn/Ew3z+scygMg4BJxmH4CeOQ1Y/HupGdQaToOz6VMdTN8q/RnoxWJ7TxDvy
nCY48jnN4tt5V6n/jYX20VQHmGo+NZn0+pNsh2uyHS253VieJ4UJ8jwphvN5
0pXyu9BPfhcb8HfD5bzgKzkvcJDnhetXqO2yLLFM2IGLXC9S7Hxrbr/Mdp7X
G3SW6w0jeb0puBcby+JJ48evCO/JdT+FzlJuP890lP4V562PfBd63ef/1gn/
1z6U6zYBUl+wqdQXPM/60kfqC1pIfcGmrC/ufE7Ttcq7zAuknsIOqadwm/X0
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
XJ6WdiU6nvYvrxM//Ybd7Eb8jJiQcZboBG7/s039bD62+1Hn/Yz8jzC+y7op
45eEwnG+n9Ce7yc8yvcT3tUL9hL94ee9L6GiP+5qq5tP/Q/wfYM9+L7Bn3zf
YP99g1a3scxBq85z37d+mgPXbjucXrwzCBqd2L9ZtMOcwLkvRDsWxNaeRO23
RqxeS/1D2psnU/9G62ZmUnvMFNxC/a9fNH9G/fdsLT5O7QNXNbxVfrgEllnd
0isJvm5m/WGjhVHiS9j17tlyB71CbJuaGTwH0+HDuZLcL2lBoLEl+Su98+I5
yqBN0/upsPtv9xFZxbfh2aiYaaI/HH/X7JXojzfsfhRQf9vmvzPo/ZdHx32X
iP4YMudZWaboP+1SixeER3JSSQiwebcoctmg2549VB6DxtqdYTaDSmF0rTfZ
Fo5To5xdg/Rmuj6BYP+Wy4jPlIOp6t+Cr0d9HmbYoY/gs1NhZKPkwndRkc46
ledFCrz+VOI2669Yt4HuJ98XFxFA95N7rL3+ke4PL31ftpDar7mOR2pfUnN7
C7pHPfqjkR3dNx7Uwecq3TeeMW18DWpfb2O8mNrbdFoXRe29W334QXQ69684
8HZRMWqH7to25k8iZpfP7TXsL8ICy6R2X2sW4YTya/kNZqbhw50/T3sKvzF8
yKqnETkFOBIDI162y0DLwAQ7uytB0OVjr6u39udjxRrt/ktrZeLeWek11zcO
gYlf3UrHVc9F/+7FzVLeZmPdK0WLTp+OhsQ6BSkkBxX+8/OIHNVbyOF1s9yr
gh8w2Lg1w+JPIlwMwFHDBT87orf0EfxA4zV7fQQ/ELAyvIj4qXUxMF3wA3O2
bjsl+AEdk87riZ+ZWnmPBD8w9tvWZoIfWL4h88Y6wc/p1HIjq+q50CDk9+vk
t9lQR2PV01OCH3OXKG/BD04uXd7qk1g/Q0bOy6f1U9Bnzo9jcaVYf4BRwev5
W8xMak3o6m4bCXvq1AsV84v50R/c9jlONdt43hNofrc1+Lfk5vtS/GowHG++
cjFz9N1/5lpkCDjur97XXbQ7zt04rPXq3WaqQT/SEx6HwMrgBQfvPyrFGa8i
VOODPMwKz0xKnHE1Ej4Y9MxzsyxF19Ff37fredissPzvuJtOj8FRtXE2rTdF
bjbll+rT/mzQmbSvgk/o1fxP0qv5W6JSV3VMJj71O+4ifqB0fewKwU9U01lt
4oifV5bOxA/M3TyuTHv17qjVnXaHED/n7/0+LPiBiLU5R54EeUT91n/agfiZ
kLPyr+AHhmv7zBL8RAUZuEcFCn4uyfWP/ipWB931xkZO6S/Xf/OvQxbSunKL
sJ41Vszj3Ba1bWhd1R68fhXpnc/wBjpaQu/SjFtlkx7VLwxPsRd6antyydm5
Qk/DEgb6kt5lThu0gtbV9aK7B2kekxNHR9I8Vo/PDaN1daD68QliXUHU1ev1
aV1pnV1z3mbaG7yhvnDUTeciSPnnvWbpvVcwTu/43f+uN9/8czm03jq/MHCm
9eboODKS1r/DiyVbab0F+I93Jn1f++P422ZC37smbe5N9mHM1rgiwSfUOG3k
KvjEzWp9fIjPzx7f3Wi9tVzbYTWtf91vY22IT6ugmRWCT6i+/3wjWv9/m/bc
QOvNzd665sppb6CzWc3IG85FeDcxJnmJ4LPlsRXbaR2aBuo1/iLsg1PUKDdj
wees+e6zXCbk4Hz5CxtvzmjikXAfWsn+oCv7m9lxf3+r20f37MpB/oXhyy+r
6FqHgHXx3sr76PkX9H1HraZ76X/FT6lsL5O/sHimhSe1j5XjRTU5XtjC4135
4+gRor9M/sL2Qzvcif41KTdcKuUGBiy3iyOtJhL/5+QvxGzvZe0p+G93qOns
igFJESr/5+8T+HE/5f8ecP/l/D3+xR383Z/MN//iEuZ/PI/TisfdmcfbUK43
WCPXGyrr7SLL6zzLbxjLra5ct3BYrlt8z+tWmY/ZPD92PC9hd0wqcfgRW+X5
v5oWfyvtOesL+Ks4ewp9GTiZ9YXtCVhjpT2Jsmd7MkraJVgj7VKUBdulzyFz
K8+zvNVsU0k/y1Li/G2lnUddaeexF9t59gvIfgE/sl/4JP0IsB8BxY9oSL8D
HtLvgOJ3Zlze2Yf0+ga27Gcp9GVm3xs+pNd99Idd/SL8RVjjtycbCX+xLLK7
O9nnmSOWjCV/sde5hdsr4S8OPx5jQPZ5yOuxXUivh89fWkj6smFi8HrSl7hL
I11Ir6+9GrKf9OVI0LoQ0peD/Udc/q/+Pp6w14XkkLB71XjS371bG3qRnXn8
s0EQ6e+Mk/nRgh/45nbLSvADVy9+TiR+3AIuzSV/kTmowEbwA1kTz3UifrrV
VhtJ+vs098lDsjO6tqE6xE/T/RFxpL/d5ltZkp1p1v6bDvFzW/pxjJR+3CyP
/XhPY+kvVpUaXtOtczSqXF36C44HcLp6ZTxgtp3jgdb1pL9wnJuvvXfg6ahF
p6W/WOcu/UXK8+ZfJmn6RUUGSn+hc036C5tVNyqO17oQNc9b+gt3Hekvitd2
MQ8yvxYVXyr9RZcq/sKh2uVKf/HntPQXJ9taZujUOWrmt0b6iwftpL+YmVPn
jPvA02YVM6S/iDOX/iJ1nHGo4MdMX0/6iykR0l+s7Bx9TfBjtrad9BcVydJf
HOo8YM8t82tmR1tLf8HxEm5VmUrx0sClHC9tcwpHWlcnb+J58vuqmaHlQ8U8
rpp7dhbFIcOXtGpIft91xazLNI/xMk5DbxmnQSDHaY1WdiihdTW41C7DRsyj
c7adFcUhN3U7dxB+Hz9bD0khv78+QD+S/MX6T6G7Fgt/kTy69hryF4/Hqb5e
JuywXsmAr/9dbz+HvL3cS8zv4+l+72i93bUNriH4xBV7tDRpvdV9OXItxScj
Un7eqy/W/wDrNmWV603Gn9Bexp+oxJ8LzqbUDhLrbf3apEjBJ/767fCH1tvf
uj7LKD6xTBx3XPCJPdSv6BGfo5Z55y8T/iLY+UoW+YvjGp0Hkl8zlXEvOsq4
N2oKx73vAkxnJwzKQd0mM2YePJgDl9sFq771jIEdyyqGhxjk49L7d5uOdM+E
na02bnXfEwKjnx9zsI8vQKP2j19cssiAkKHTpznfDAK7FQPiogoL0ehqh/6v
H6SBRq1Zl4q63gbVxw21zwwsxoO1HRN+ZSbBx51rGkeqR4HJowvhVtkl6NZz
55GD68PAJOZ12qbnzyB94PZ6gh9osnnJOcEP9jL7F0j8DPhj0UnwA7d17AcI
fvDo6wsfiJ/pbpqLBD/Q7+brUsEPmtlULCB+Jub+DBb8wMZRX7YLfvBB2R8b
4sduqaeq4AcCilxm/85Mwu6OJw0iBD+Ns9YRP1DDz3iwz/owdDuhes1B8PNB
a8H3uPBS1Hn2/9X13XE9f1/8KJsi45ORrJCdqKjeR3yQEbLJzpYyQ3YokdW0
U7b4ZLQ03id7lSghpCREy8eW9bv3dc7r+/vq9/v+9X50Xfee173nnnHPOc97
4PqRVuHaU+8CKyavSFLfL8b4WS4XDfsf0arvF/M7yNjbNF6+g6xV30Hm95cx
c8gq+f6y9gi/vxx/fGDJv6tLcMXcSnfafQyFwrNZF6Z3vAa5DQb/K+aFCXpm
Q462CtdMmzpsvZyX34+GnD5R8v1ojfp+dDK9Qw03W9vsle8vp/M71Pz+NbhN
00+X7z5v4vev92tcf4h5IchjVsO2H0PRI23lkWli3uPfrRxjZ7zF6A/eMXm5
z7FcrY91XCEKBulu7PLDrwArx9afcbtCDsaUH+DjcygKXPNrua7OKMTvZo1P
rsx6jDfmVVtdOT8ezlTZZS3GgazRLx6IceCz784ucpzZtm7GYhx4UvGNtxgH
HJ62GS/HuXmqy0gxDiS8mdtsVdZjWNRam1BJjOMb9fuMfKez//e8TPmbusS1
q3z3s91Nz7PyHc/71Wc9lr9Pty8skO94avg9izB+z8KP8zmDiurpSj6/dmKn
VvL57m//2GUIvsp/fPd6tODzgrvd4yWfj0/4K2ez4KvrXrNL3QWfH6icHnRS
8PmXFrmVJV9N/J09QvL5sey45xmCz6P8L/pKvirISk86KPj85TS3pd8Fn58r
NJkk+fz1pBv7JJ+3XWtSIVDwuV+TXw4rBV95bXA6lyr4fHHVA5X8BZ+/qfT1
naSnn4vRCUEP+LYpzpF8XtG1r53k85Wal68EPTA+MCtS0IOv/vY2kPTA8v12
ks9Dlnu3fSD43H3t5EGSnkSPYUcFPbBrwLKKPwSf98lwXCr53MTDX9IDbUsz
TocIPl+Q1NZInrvyzYnPP27zzbzcwE8T9Zn4fIwr8Xn/bXdHuk/x1ZQaEZ8b
7yY+/568ZuHXNC/NdCPi83N9iM8XmlnGJZ9eq3nai/hce3RvkeTz++O++nUW
fB4zb36Y5HOdlsTnDfWLza808NPOm0V8bjeT+HxpNe94Ma82dR/x+bNE4vOj
Sx6kiHm121oTnydOID5fHrDLIuX0Wi1eIj4vttaWSj7/fdEpu6Pg84k79bdJ
Pk/jdz3a87seLRnfdY1mfobk/26xXu9fCP7vXnXuUsm3v9LSIyT/7x42fest
wf89Unqfl3xba2XLx5L/x+tszvIQ/J9k49Jf8n/iwFSU/F9ilFtb8n/g5ipB
cpy7NbT7JP9vCLWMEOPAofDmXnKcrr36XpT83z4hc8QKwf/3yjfdJPn/f73T
8Y9XK8n3qLGxk+cAq3i+05fnwjz4hHIeHgy5opyPUSEfr8lzMcMtbYTHqHxo
UftonzidbJyX2KnhnmNPYPpoE9uXC3NxYk6bJued3qDRtDH1SlfehPR/0ETH
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
+8TI0LZL5G+llh+zmjjG/D9+UAr7QW57ViyS/aodaR4jf6fndP9H3kPm9xxY
0VfwZ/d5YQ0kf9pvqdZsu+CH5gsSStcL+vK29T0h6YyznXVQ3pfasr0UxPbS
SZbDiyPrNJX7q/d6YHuxbuiyxrzVZ7Fu98JGKjhX6n6puDd+jfNOy3vOWr/H
/hbzQKvbP8rL8e+wffWQ7SsL1guXepl5yfX8UuuX+wexnr9qW1aS+ztgxDn5
PbCsT/XF8ndK/5RZ8rvK+n2P2e+L/7xH6df7p12s8hs1uYXsbxJwrYtYB+Hv
3cwfL86F0dHjLvJcxPl90ZF0hh1ad07+6jjvdJb3sTFs10WzXRfM+s7KuRjF
OsC41jmJgs9hy6wljyX/aMnvwKNTbayE36FJZL9DjXcftd5lKePdwzjenU72
P64j+x9V+z+O33fYye87qDjP7O/gZieDu9LPUv2dJPIvsID8Cwxm/4L9Jgz1
7qeV/to99ptGHjTR3exVgo1G2q69GxqoOd04+ualT1eF3LhpWH7ea7xXYWro
+h8nNSNO1ryUlPxS9eNgx+/H8cKP02ayH6fG5Yf631Hi8gs5Ll8+XfGPIJD8
I1D9o/38XgPjb8Mhxt9m/xEenItfLP041X/0JP8LzMj/Ahv2v9gPhTnVd46R
/uAP9kPrDjmsL74LWpqsyU0NDdQeHvfPxYviu2wIVwTWOjyXuCLaMMYV0Rla
bpLuvNdwrU68z9ofJ7WzRznaJorvZT8RG19S/EQYxX6im2FwsNRTQx87OvcQ
eup96MezUo/c3ot95flN/X1xxSfBt949R7WVciCO/G48Qn439Ga/24b8dAwn
Px2WsJ/uQX49TiG/Hl6yXz+ylmGNr0Kf2hffdW4t9Gmkztb6Z4UeZD8a3pMf
jWfYj45o1NNf6rutE4wCrYW+6/6qr5nUp+fSU6Scgb6NNlhJOWM878w4eb7y
6b4CPtB9BUbwfYUT3W9AJN1v4Hm+37hC9yEQRvch+InvQwa87130Qehrx8yp
c9sKfT09q3i0pHNZpUu+0r/ypF/4NqOxk7QnJ3H8YwrHQ9Q4yM7ytgNkfx/6
heNngg9L+eDNf6v/HsHtRzjuc4zjPmqcSJ3Pg+d/z/M6EZ3Qh+iEKUxn2fhX
b47jDPsf8a/BFg7DpD1zZmrCQF9hzwTdv1psLewQlzJxrrUcb+J9wc4TlX1B
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
zLr89CDR/0bK60gxPiY2i6mmJ8aP1fRZJ8cfUMPIRIwDR99dqlBdjGN6wOCX
HOcu7Qu40L5AJd6XS/MrFEk6//2e4FVDjPPtZTiOFv3jP/o8kHHMcp9PDz0r
6Kz5YkuKpPMl5TvBGsp3wq2c78R8BauJr7Af8xW/m5DA7ybYqHndfnzfp97/
neF7v7X8dwD/+xVuv0V0YgjRia+YzvNEJxoSnajHdPamdcBiWgfoweuQSusG
S2jd8Biv2wqSD+BE8gFesnyoTXmDqKG8QdjAeYMsl9CC5BLosVzqR/sIOuWV
fQRf3sdS2kd4t1DZR3DnfeQ8SbhAeZLYlfMkWR5CHslDfMXy8DHxFX4hvsJE
5qtDxFdYl/gKVb6q0qLWNen3Pdyi7SXjtiGmeRPlPeTyfONh34R/CvYvNrQS
/mBURrc70h+cRe04gNrhArcb0jiQQuPgHh4nbY6SRwEnjxQUbXON0v7Tk/Io
krnd7nX7Ytkexe3bGAfeUv/od4kDf5Bx4PVnKvkb6Lkw54mPa5TmLwfK36jK
7TUjmz2V7U24nfHH4P3T3RJ/TKPij6lxEKf7bkoc5DzHQWwbHwx7+zMT94XE
lZsv/PjSzluXnnK+B2fpPg3v0H0a9uX7tGiOmzRyvqjETaZz3ESNR0w5fFaJ
R4RzPMJrsZFe8c9M2J/SZ46b8MvbtOveLFyMH073itCe7hXhEN8rfhhCcQrT
xQ03yziFB8cp7DiP5ZTt3FUyj6WA81h0OV9l3cOWPWW+iifnq3AeC+StfmAj
2jVqHktNbh8cZ6C0L+Z2jpvg9NKLDhKPXY2bcP4Mur1s7CHm1ar5MwO4/UfT
sctlexa3M04dMJ6nVsXzzB33vmahWOfulY49EeuAneru6yvXoQPFc/EpxXPR
h+O5ZyzdlpeIdTOy7dJHrttzU/t3J0T/j0+UODUsozg1LOY4dU/Kf0bOf4a9
nP98NSLVWuZjNJ1zaZfU4xN+ZFeT+mUu5XXDY8rrxjuc1/2qx66DlYU+mvBp
qYHMj9oeGoWy/46QBW9lvvcQs6Thsn6wUlD+C2l3cf4JaCn/BP7l/JOCSy0U
uVFq1SrvoJAP3jPxvjy/n67/lveBGq7L0Kh1GbacPzaC88fmsF5rdoX0/tYe
Pf7o70H1QWhK9UFwg+uDfs7btfW70Ne1zph7y/yN1XvHXZD6uhrVPcE5qnvC
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
Wp8+tsMypT59IdenbyRcC3xNuBb4gnEt1P7m9Rf+Uc/OOA9Yp8dVifOg/cU4
D2qde5beNaXOPZzr3McQngb+IjwNVPE01P5+Z5P+6M/4Ergj55bEl9Cq+BL/
qZevtk+plz/I9fJqe4vbW5X2MG5X3/dsdtpTue8t5vtetY7+UnhfpY5+FtfR
A+GKgD3hisBCxhVR+4fo91D6T+f+jLMBFd55SZwNTQLjbKj1+GuqXVTq8ftx
Pf5YwjOBnYRnAv6MZ6L2H/sh7o/6fcb3gBlr/Y18bUM0Kr6HWtc/pWa/P+r6
zQlHBS4TjgrMZhwVtf9fZ+z+6M94I+AbeVbijWh+Mt7If/ABjDsq+ADrGR9A
bb+Qbay0b+T2ofbG0FrsY/vVt0/X9/bRlKb2zO8FMYA/Jsl2qBPXaZho1/6u
VTdNtn+b6HlE6qMllu6Dpb6wWRq+ROpHp9mXb8l8S9NnMZNknmFYg/xwmW+5
vuq5Y1JPTU45sErqkeX6X7ylnrpb601irYQr0HOhrsnvnAjN19odXqb4i3Un
OYbjSY5BBMsxvzZT86SeWt92XG2pBzslJrtJPRgSr/kq8xv3uGR3lHmeLay9
vsj8xu9LS55I/bX3c1E/qR+Pt/51Tuov84r9k/Ljr+DfLnuxwvMIrevZoT6p
Yt42JFfhFslV7MNytf2hOfY/5/lDbPjiqVIe6h/Uq2Mo5M8wwndCHcJ3gnL1
Cd9paVaLilIeLs79cEfKw2/dQgZKuyLr7/ylUh52L24WI+XhIc9hkzyE/PlA
+FFYn/CjoBnjRwU8PBIi5A+G1jt9R8rDesuX7O8p5M+8MetPewh5+HTOoSIp
D22bdr4u5XMlwsUCxsXCi4yL1WZm6CopD9PHenWRdY4D83CKlM8Di0zqSHlo
c2Z/1TAhD+OWr+8q5fMrwt2CU4S7JfxNwt165ft9lZSHCd1iP0t5aOpUrC/l
ofre602fyoNlfGE/+0flGH8gr7mLgj8Qy3ptHOGz4VDCZ8PZjM+m4hXUrblG
6R/N/RmvDDH30sfGbj4aV8YrU3EM3HueVnAM1PoRXcKFQ2fChUMjxoVT++dt
RKX/d+7POGk4oBTnSNy2uoyTpuIhWDWe9AcewlrCo8OGhEeH4YxHp/av19Xt
j/6Mz4bJJ+s/SJ+6SvOE8dlUXIUfhlUVXAW1Hkdt37SsidL+mNvVd2/H/Buq
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
CzGwJdlw2fDMEmw06OKtuPZeuLmm+9SsM7FQX+e1rRgH9u7t3eDBlxxs0KzD
IDlO6unfU8Q4sOH5/d4uqVk4oM/JMy3EOB478uU4ULTw/BAxDhTbdG4mx7Gk
ukVsQHWL6MJ1i+eoLhKeUF0k1Oa6yHTCr4O2hF8HbRm/Tr2feel8SrmfUeVV
ANU74yCqd8ZZXO+sxqPNKqUp8Wg1DqXeS5cuDVfupVU/Ub3nSQ6ppdzzqPI2
meq7YSvVd0M013er8eWrJdOV+LIaL2N/H5K/9FfusVV/v3L+hAIrsf41DqzQ
dRXr/3ys4Qm5bplJAxNA7FeMQ3a+WGfweLmrkrJfVP+OQPXvoMP179sdDcvJ
9Y82tTs7T6z//OST1eU+ZhWHpYpxwPPM15tyv06lP6ohxxlEdf1wnur60Y/r
+tX6ebWe3p7r6FVc69llcK130rx4muaFeTyvigug4gR4cX8VR/pwGRzpqrQO
oEvrgNm8DmVxudsyLsHX/4HLXRavW8W7zqF1wNW0DnCa1+FUxqwVks/t8tc/
dhF8buDwZZbkz7K42bPK4GardKk4CWXxtNX2J7SPcJ72EVfwPu7ZbbVSnot+
YYsniXnBduXZ1nLePYQfglmEH4JhjB8STXgpEER4KRDIeCkTCO8IswjvCCcw
3lEo4TJBOuEygYrLdIfOKW6kcwr9+ZzWpXONB+hcgyGf61aEQ4XBhEMFwDhU
vUluwEiSGziQ5cZRkjPQguQMqnJmOOFiQSHhYuEAxsVScYSuMo5QX64X8C+D
q2PK9Qtqff1+rq/X5TqO1mXqyuO5rmT+cAclj9R1Xxe7YXeu2kzluob5VGeB
HanOAr9ynYUv1XdAINV3wFeu7xhC9S/Yiepf0IXrX8p/a+fiJ/pvDcjZKvt3
3nrpXgvRbkp5ZXiZ8spgC+eVOVF+Ggyl/DR8yflp4zmu78xx/jUc3/egfEVc
SfmK0JHzFcM4/+AE5yPc5jwEPcqHhK2UD4ltOR9yN8UlcTbFJVGNS66meCgs
pHgoqPHQZmVwkxJ5PVUcoUNcR1OZ178p4dDCYcKhxQDGoVXzJVR6LzOd6neq
+P3L+HuPUV4NVqW8GjzPeTWhlP8DYyn/B4w5/8eX61zqc51LV+aTWVyHksx1
KMOYr/idI3Dld6Id2F7l96TQgd/9bMH+CL9jBbv4nc167Ae1pXtjTKN7YwC+
N06m+BrGU3wNHnB87VrMtA7LhhRggLHrt+rLcqAL+G11qRoFb1qn1S0ZXohu
hrdH12+eBeX1Y0/ZLYmFfcd8Gor+EBbRvkGNZTnYZdqFJbJ/5aBpv4uHF8K8
R83Oiv4IQQt6yP6tN+pG2wk9eLH2wsUFvcK0QTrmjp0s/q8er8B6fAvrccPL
uVGiP7y2MTov+muu/X1zvOyv6uv7rK9LWF/XeHeosNuAt3jlmNWj0uq5aBzu
YtZ5RhRYldHjrqzHm3v6PBD94eKFs19Ef2hkHDJG9lf1e2YZ/f47c2/EUrE+
j+e0vC2+F/Q+9h0pv3fqqKxQ8b143eFGfUOxPosrGkXI77W5mbRP9Ie0b7lv
5foE1HO1lf01l9185foMqWE8X/RHT68HNrL/dR9aH5NDrUq6j92kaVyJ1keV
/0Ys/+uy/I+9TutzreGHXj3GbtIO7Efro8rtNiy3NSy3U6YccbUQ66N1fmYo
16ekxpq98nv3sjx/yvJcxYPS/bh5jOgPU5aOtpLrs3bj2UuyfwzL+UCW88Es
5/8XLu7/sksr0fg4gcbH9Tx+KtEJcUQnvGc61fp0O65Pn8n1tnO4Dr0C16FP
5npea1pndKJ1hnW8zla0L/iQ9gX8eV/K1pu/5nrkSbS/kEH7i4t4f38QP0A2
8QPWZH5Q68dXcv14NNdZ208vX7OB5yscQL9wYd/w6eGaOMi+urF6Y2E38y98
i9Y2zlwYCSYTFip6uiX9gv2v/mukvl7o2Ly6/P+L6Rc9ky91OSXGea+jo/x/
/sXhd59M+69xgMfBfjxOS+J/1BL/oxHzvz6dI0iicwTN+Ryp9cJJbUco9cLe
XC+s1gW7Vu2p1AWv5brgSiQHcAHJAbBlObCb5AYeI7kBZiw3gsrU/6r4D69I
/sBykj/4W4/kz2WSV7CL5BWasbxS63nNuJ7Xjut5+b4RF/O9tAXfNzqXuX82
4fvJ/fvGDXjX/hVeO9bWtUT83umx9t2vRTdheUKBlVz3XcGVcg3F7+X7X8zk
Pv57qrGl6A/2hwrHif6wdsKnKuUX34TB4TUs5X5ZrGudI/rDw98zfsv+eqzf
zVi/V15F+r0y6/fdrN+r55F+53tpzOV73RZ8r8v329CF72+d+f6234kt0yTd
Y8Pie8rvWI5xP34L+rfr//Vc0n2r8w9JF36YGbFL0tMyzMFR0l3lzKoO8juy
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
vLOcXObd5M/8bvL/AVoBV70=
    "]],
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{452.7656800770095, 390.68934195218},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->
   NCache[{{Rational[-1, 2] Pi, Rational[1, 2] Pi}, {
     Rational[-1, 2] Pi, Rational[1, 2] Pi}, {0., 
     11.055118696853848`}}, {{-1.5707963267948966`, 
    1.5707963267948966`}, {-1.5707963267948966`, 1.5707963267948966`}, {0., 
    11.055118696853848`}}],
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.786548101782277, -1.5352965677016084`, 2.4292201071993884`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.8025476519480286`*^9, 3.80254767924428*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Ham", "[", "g_", "]"}], ":=", 
   RowBox[{"-", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "g", ",", "g", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"g", ",", 
        RowBox[{"-", "1"}], ",", "0", ",", "g"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"g", ",", "0", ",", 
        RowBox[{"-", "1"}], ",", "g"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "g", ",", "g", ",", "1"}], "}"}]}], "}"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8021020872203445`*^9, 3.802102128662648*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"Ham", "[", "g", "]"}]}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.802102130164361*^9, 3.80210214170257*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "g", "g", "0"},
     {"g", 
      RowBox[{"-", "1"}], "0", "g"},
     {"g", "0", 
      RowBox[{"-", "1"}], "g"},
     {"0", "g", "g", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.802102133141324*^9, 3.8021021609807267`*^9}, 
   3.802533370767264*^9, 3.8025383142994113`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigenvalues", "[", 
  RowBox[{"Ham", "[", "g", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.80210216887724*^9, 3.8021021730622816`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", "1", ",", 
   RowBox[{"-", 
    SqrtBox[
     RowBox[{"1", "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["g", "2"]}]}]]}], ",", 
   SqrtBox[
    RowBox[{"1", "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["g", "2"]}]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.8021021736012077`*^9, 3.80253337170866*^9, 
  3.802538315440571*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigenvectors", "[", 
  RowBox[{"Ham", "[", "g", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.802102195613656*^9, 3.802102199798012*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"1", "-", 
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["g", "2"]}]}]]}], 
       RowBox[{"2", " ", "g"}]]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"1", "-", 
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["g", "2"]}]}]]}], 
       RowBox[{"2", " ", "g"}]]}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"1", "+", 
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["g", "2"]}]}]]}], 
       RowBox[{"2", " ", "g"}]]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"1", "+", 
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["g", "2"]}]}]]}], 
       RowBox[{"2", " ", "g"}]]}], ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8021022007124863`*^9, 3.8025333724760356`*^9, 
  3.8025383166568804`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Ham", "[", "g", "]"}], ".", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "1"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.802102413362376*^9, 3.8021024341341257`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "0", ",", "0", ",", 
   RowBox[{"-", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8021024169829636`*^9, 3.802102435200919*^9}, 
   3.8025333734117785`*^9, 3.802538317904259*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{"1", "-", 
     SqrtBox[
      RowBox[{"1", "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["g", "2"]}]}]]}], 
    RowBox[{"2", " ", "g"}]], "/", 
   RowBox[{"Norm", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"1", "-", 
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["g", "2"]}]}]]}], 
        RowBox[{"2", " ", "g"}]]}], ",", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"1", "-", 
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["g", "2"]}]}]]}], 
        RowBox[{"2", " ", "g"}]]}], ",", "1"}], "}"}], "]"}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.802102559681207*^9, 3.8021025611250563`*^9}, {
  3.8021027127279377`*^9, 3.8021027472949495`*^9}, {3.8021028566169825`*^9, 
  3.8021028573754115`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"1", "-", 
   SqrtBox[
    RowBox[{"1", "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["g", "2"]}]}]]}], 
  RowBox[{"g", " ", 
   SqrtBox[
    RowBox[{"8", "+", 
     FractionBox[
      RowBox[{"2", " ", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"1", "-", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"4", " ", 
             SuperscriptBox["g", "2"]}]}]]}], "]"}], "2"]}], 
      SuperscriptBox[
       RowBox[{"Abs", "[", "g", "]"}], "2"]]}]]}]]], "Output",
 CellChangeTimes->{
  3.802102561705742*^9, {3.8021027182129*^9, 3.8021027488113246`*^9}, 
   3.8021028588973494`*^9, 3.802533375431432*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigenvalues", "[", 
  RowBox[{"Ham", "[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.802102981965767*^9, 3.802102990862243*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    SqrtBox["5"]}], ",", 
   SqrtBox["5"], ",", 
   RowBox[{"-", "1"}], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.802102983780608*^9, 3.802102991181531*^9}, 
   3.8025333755427675`*^9, 3.8025383220461855`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigenvectors", "[", 
  RowBox[{"Ham", "[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8021029933059587`*^9, 3.802102996293086*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SqrtBox["5"]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SqrtBox["5"]}], ")"}]}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "-", 
        SqrtBox["5"]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "-", 
        SqrtBox["5"]}], ")"}]}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.802102996746656*^9, 3.802533377469309*^9, 
  3.8025383230172005`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Norm", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SqrtBox["5"]}], ")"}]}], ",", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SqrtBox["5"]}], ")"}]}], ",", "1"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8021030118138933`*^9, 3.8021030137078433`*^9}}],

Cell[BoxData[
 SqrtBox[
  RowBox[{"2", "+", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SqrtBox["5"]}], ")"}], "2"]}]}]]], "Output",
 CellChangeTimes->{3.802103014535099*^9, 3.8025333781933346`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"MatrixExp", "[", 
   RowBox[{
    RowBox[{"-", "T"}], "*", 
    RowBox[{"Ket", "[", 
     RowBox[{"Sz", ",", "Sz"}], "]"}]}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.802358306773775*^9, 3.802358320375327*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "T"}]], "0", "0", "0"},
     {"0", 
      SuperscriptBox["\[ExponentialE]", "T"], "0", "0"},
     {"0", "0", 
      SuperscriptBox["\[ExponentialE]", "T"], "0"},
     {"0", "0", "0", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "T"}]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.802358315460229*^9, 3.802358320646635*^9}, 
   3.802533379042988*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["U1"], "Input",
 CellChangeTimes->{{3.8025333831351533`*^9, 3.8025333832256594`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "0", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.802533383727374*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["D1"], "Input",
 CellChangeTimes->{{3.802533385297799*^9, 3.8025333854224887`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "1", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8025333857870636`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["PLUS"], "Input",
 CellChangeTimes->{{3.802533400041482*^9, 3.8025334005869856`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "1", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8025334012038746`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["MINUS"], "Input",
 CellChangeTimes->{{3.8025334033159714`*^9, 3.802533404766898*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.802533405099724*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"a", "*", 
    RowBox[{"Ket", "[", 
     RowBox[{"PLUS", ",", "PLUS"}], "]"}]}], "+", 
   RowBox[{"b", "*", 
    RowBox[{"Ket", "[", 
     RowBox[{"PLUS", ",", "MINUS"}], "]"}]}], "+", 
   RowBox[{"c", "*", 
    RowBox[{"Ket", "[", 
     RowBox[{"MINUS", ",", "PLUS"}], "]"}]}], "+", 
   RowBox[{"d", "*", 
    RowBox[{"Ket", "[", 
     RowBox[{"MINUS", ",", "MINUS"}], "]"}]}]}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8025333892006474`*^9, 3.8025334400509577`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"a", "+", "b", "+", "c", "+", "d"}]},
     {
      RowBox[{"a", "-", "b", "+", "c", "-", "d"}]},
     {
      RowBox[{"a", "+", "b", "-", "c", "-", "d"}]},
     {
      RowBox[{"a", "-", "b", "-", "c", "+", "d"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8025334355922737`*^9, 3.8025334404779487`*^9}}]
}, Open  ]]
},
WindowSize->{1920, 1037},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>2.2 Inherited,
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (December 4, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 481, 14, 66, "Input"],
Cell[1042, 36, 675, 17, 193, "Input"],
Cell[1720, 55, 243, 6, 94, "Input"],
Cell[CellGroupData[{
Cell[1988, 65, 1880, 60, 179, "Input"],
Cell[3871, 127, 1978, 53, 100, "Output"]
}, Open  ]],
Cell[5864, 183, 509, 15, 94, "Input"],
Cell[6376, 200, 490, 14, 94, "Input"],
Cell[6869, 216, 2930, 91, 221, "Input"],
Cell[CellGroupData[{
Cell[9824, 311, 551, 13, 94, "Input"],
Cell[10378, 326, 1291, 36, 100, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11706, 367, 373, 10, 94, "Input"],
Cell[12082, 379, 669, 17, 100, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12788, 401, 317, 9, 94, "Input"],
Cell[13108, 412, 737, 20, 93, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13882, 437, 366, 9, 94, "Input"],
Cell[14251, 448, 1038, 27, 100, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15326, 480, 1080, 34, 94, "Input"],
Cell[16409, 516, 936, 25, 100, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17382, 546, 131, 2, 94, "Input"],
Cell[17516, 550, 488, 13, 93, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18041, 568, 250, 6, 94, "Input"],
Cell[18294, 576, 767, 20, 100, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19098, 601, 196, 5, 94, "Input"],
Cell[19297, 608, 781, 21, 100, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20115, 634, 920, 19, 94, "Input"],
Cell[21038, 655, 1010, 29, 100, "Output"]
}, Open  ]],
Cell[22063, 687, 300, 7, 94, "Input"],
Cell[22366, 696, 694, 24, 94, "Input"],
Cell[CellGroupData[{
Cell[23085, 724, 1110, 28, 179, "Input"],
Cell[24198, 754, 1917, 50, 147, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26152, 809, 1478, 45, 179, "Input"],
Cell[27633, 856, 1717, 47, 147, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29387, 908, 117, 2, 66, "Input"],
Cell[29507, 912, 278, 8, 65, "Output"]
}, Open  ]],
Cell[29800, 923, 1411, 44, 179, "Input"],
Cell[31214, 969, 1462, 45, 179, "Input"],
Cell[CellGroupData[{
Cell[32701, 1018, 843, 24, 66, "Input"],
Cell[33547, 1044, 2701, 77, 119, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36285, 1126, 1085, 28, 66, "Input"],
Cell[37373, 1156, 1570, 41, 106, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38980, 1202, 657, 21, 66, "Input"],
Cell[39640, 1225, 1265, 36, 106, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40942, 1266, 480, 13, 66, "Input"],
Cell[41425, 1281, 460, 12, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41922, 1298, 479, 12, 94, "Input"],
Cell[42404, 1312, 511, 12, 93, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42952, 1329, 132, 2, 94, "Input"],
Cell[43087, 1333, 772, 21, 192, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43896, 1359, 227, 6, 94, "Input"],
Cell[44126, 1367, 845, 23, 192, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45008, 1395, 359, 9, 66, "Input"],
Cell[45370, 1406, 799, 21, 160, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46206, 1432, 314, 8, 94, "Input"],
Cell[46523, 1442, 1201, 31, 212, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47761, 1478, 580, 17, 94, "Input"],
Cell[48344, 1497, 1133, 36, 93, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49514, 1538, 1212, 40, 137, "Input"],
Cell[50729, 1580, 1224, 40, 134, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51990, 1625, 364, 9, 94, "Input"],
Cell[52357, 1636, 1201, 31, 212, "Output"]
}, Open  ]],
Cell[53573, 1670, 211, 6, 94, "Input"],
Cell[CellGroupData[{
Cell[53809, 1680, 315, 7, 94, "Input"],
Cell[54127, 1689, 492, 13, 93, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54656, 1707, 346, 9, 94, "Input"],
Cell[55005, 1718, 678, 18, 93, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55720, 1741, 528, 16, 94, "Input"],
Cell[56251, 1759, 243, 5, 95, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56531, 1769, 201, 5, 94, "Input"],
Cell[56735, 1776, 189, 3, 93, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56961, 1784, 474, 13, 94, "Input"],
Cell[57438, 1799, 3559, 106, 268, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61034, 1910, 311, 8, 94, "Input"],
Cell[61348, 1920, 1203, 31, 212, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62588, 1956, 822, 21, 137, "Input"],
Cell[63413, 1979, 2059, 52, 372, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65509, 2036, 268, 7, 66, "Input"],
Cell[65780, 2045, 1044, 25, 302, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66861, 2075, 301, 9, 94, "Input"],
Cell[67165, 2086, 408, 12, 93, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67610, 2103, 948, 25, 137, "Input"],
Cell[68561, 2130, 2056, 56, 196, "Output"]
}, Open  ]],
Cell[70632, 2189, 766, 22, 94, "Input"],
Cell[71401, 2213, 635, 21, 163, "Input"],
Cell[CellGroupData[{
Cell[72061, 2238, 234, 5, 94, "Input"],
Cell[72298, 2245, 1375, 40, 169, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73710, 2290, 2298, 70, 217, "Input"],
Cell[76011, 2362, 924, 31, 128, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76972, 2398, 1094, 35, 176, "Input"],
Cell[78069, 2435, 189255, 3133, 921, "Output"]
}, Open  ]],
Cell[267339, 5571, 609, 18, 94, "Input"],
Cell[CellGroupData[{
Cell[267973, 5593, 173, 4, 94, "Input"],
Cell[268149, 5599, 821, 23, 192, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[269007, 5627, 161, 3, 94, "Input"],
Cell[269171, 5632, 409, 14, 122, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[269617, 5651, 161, 3, 94, "Input"],
Cell[269781, 5656, 1362, 46, 154, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[271180, 5707, 234, 6, 94, "Input"],
Cell[271417, 5715, 230, 5, 93, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[271684, 5725, 980, 32, 135, "Input"],
Cell[272667, 5759, 694, 23, 183, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[273398, 5787, 160, 3, 94, "Input"],
Cell[273561, 5792, 276, 8, 105, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[273874, 5805, 163, 3, 94, "Input"],
Cell[274040, 5810, 1094, 38, 126, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[275171, 5853, 478, 16, 103, "Input"],
Cell[275652, 5871, 294, 10, 120, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[275983, 5886, 265, 7, 66, "Input"],
Cell[276251, 5895, 965, 27, 180, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[277253, 5927, 98, 1, 66, "Input"],
Cell[277354, 5930, 163, 5, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[277554, 5940, 96, 1, 66, "Input"],
Cell[277653, 5943, 165, 5, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[277855, 5953, 98, 1, 66, "Input"],
Cell[277956, 5956, 165, 5, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[278158, 5966, 99, 1, 66, "Input"],
Cell[278260, 5969, 183, 6, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[278480, 5980, 531, 16, 109, "Input"],
Cell[279014, 5998, 857, 24, 160, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
