(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    398071,       7986]
NotebookOptionsPosition[    380195,       7673]
NotebookOutlinePosition[    380589,       7689]
CellTagsIndexPosition[    380546,       7686]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
In 8.09, you are welcome to use programs like Mathematica or Matlab when \
appropriate. Note, however, that this doesn\[CloseCurlyQuote]t mean every \
problem requires Mathematica and you should always try to think if you\
\[CloseCurlyQuote]re finding the solution in the simplest way. You should \
also make sure you note intermediate steps when you use Mathematica
This notebook introduces some of the concepts in Mathematica that you might \
find helpful. It only contains the basic information for each section and you \
should consult Mathematica documentation for further study.

To open each section, click the square bracket with an arrow to the far right \
of the title (for more info on how to format things like this, look \
athttp://reference.wolfram.com/language/howto/\
DoBasicNotebookStylingAndFormatting.html)\
\>", "Text",
 CellChangeTimes->{{3.6501961924839973`*^9, 3.650196268567308*^9}, {
  3.6502035493186693`*^9, 3.650203579804277*^9}, {3.6507987099177856`*^9, 
  3.650798723555626*^9}, {3.650984684463911*^9, 3.6509847207648478`*^9}, {
  3.6509847621979322`*^9, 
  3.650984766617359*^9}},ExpressionUUID->"f22ea86c-2878-4849-91b2-\
ca998070d436"],

Cell[CellGroupData[{

Cell["Basics", "Section",
 CellChangeTimes->{{3.65019528896063*^9, 
  3.650195289591343*^9}},ExpressionUUID->"d527704e-8468-4598-80c6-\
427f14a4c06b"],

Cell[CellGroupData[{

Cell["Syntax", "Subsection",
 CellChangeTimes->{{3.65021269397576*^9, 
  3.650212694654814*^9}},ExpressionUUID->"f152e187-5af4-4e4a-bb27-\
b32412fab01d"],

Cell["\<\
When something isn\[CloseCurlyQuote]t working, it can be useful to quit your \
kernel and start fresh. You can also clear individual variable names as \
needed.\
\>", "Text",
 CellChangeTimes->{{3.6507986740067043`*^9, 
  3.6507987072847433`*^9}},ExpressionUUID->"ac557c43-4016-4560-abbd-\
f5c683b0b716"],

Cell[BoxData[{
 RowBox[{"Quit", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ClearAll", "[", "variable", "]"}]}], "Input",
 CellChangeTimes->{{3.650798651773942*^9, 
  3.650798659944499*^9}},ExpressionUUID->"df4b9f26-7722-4340-913b-\
6a4216c980fb"],

Cell["\<\
Variables get assigned using = sign. Arithmetic works as you would expect and \
functions take arguments with square brackets\
\>", "Text",
 CellChangeTimes->{{3.650212702657213*^9, 
  3.6502127518777857`*^9}},ExpressionUUID->"8cce05ea-d1e6-416f-a06c-\
3e32ef952a36"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"variable", "=", 
    RowBox[{"2", "+", 
     RowBox[{"3", "*", 
      RowBox[{"Sin", "[", 
       RowBox[{"Pi", "/", "4"}], "]"}]}]}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Semicolon", " ", "suppresses", " ", "the", " ", "output"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.650212753193447*^9, 
  3.65021278408527*^9}},ExpressionUUID->"f762e8c5-807a-4411-95eb-\
8170fab2cf3d"],

Cell[CellGroupData[{

Cell[BoxData["variable"], "Input",
 CellChangeTimes->{{3.650212785753789*^9, 
  3.6502127865574923`*^9}},ExpressionUUID->"c230b9b2-3957-4aa1-b939-\
7c322a65b282"],

Cell[BoxData[
 RowBox[{"2", "+", 
  FractionBox["3", 
   SqrtBox["2"]]}]], "Output",
 CellChangeTimes->{
  3.650212786934163*^9},ExpressionUUID->"dc525136-b7c9-48e8-bbc0-\
1d800e9038d0"]
}, Open  ]],

Cell["\<\
Lists are contained in curly brackets. Mathematica starts counting at 1\
\>", "Text",
 CellChangeTimes->{{3.650212702657213*^9, 3.6502127518777857`*^9}, {
  3.650212797565133*^9, 
  3.650212807955679*^9}},ExpressionUUID->"0864e007-c160-4c5a-bc7a-\
28fcb90882c1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"list", "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", "4", ",", "a", ",", "dog", ",", 
    RowBox[{"{", 
     RowBox[{"42", ",", "dan"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.650212753193447*^9, 
  3.6502128330339727`*^9}},ExpressionUUID->"19f1406f-bf93-4300-9be3-\
37780ab07465"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "4", ",", "a", ",", "dog", ",", 
   RowBox[{"{", 
    RowBox[{"42", ",", "dan"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.650212833321927*^9},ExpressionUUID->"5cda44b2-b7c3-4f02-a436-\
7890031fc238"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"list", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6502128347969418`*^9, 
  3.65021283577205*^9}},ExpressionUUID->"1bd8fcbb-2f3f-42bc-8a6d-\
49f8f6a0d705"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.650212836239635*^9},ExpressionUUID->"4a9f1a1d-b3d6-4739-b38d-\
3f0c4a3919ee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"list", "[", 
  RowBox[{"[", 
   RowBox[{"5", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6502128372861958`*^9, 
  3.650212842874946*^9}},ExpressionUUID->"dc9ddc1b-d893-42d9-a0f7-\
5c25a1aaede7"],

Cell[BoxData["42"], "Output",
 CellChangeTimes->{
  3.65021284335847*^9},ExpressionUUID->"18ab726b-5490-408b-8327-f81d14321961"]
}, Open  ]],

Cell["N[x] forces numerical values in x wherever possible", "Text",
 CellChangeTimes->{{3.6502128543785143`*^9, 
  3.650212890144546*^9}},ExpressionUUID->"f23a80ac-c643-4583-acde-\
2f782edb5f25"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"4", "/", "3"}], "*", "x"}], "+", 
   RowBox[{"list", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.650212864802771*^9, 
  3.650212901440815*^9}},ExpressionUUID->"784d3d2a-1412-487e-8fa5-\
0a6223898735"],

Cell[BoxData[
 RowBox[{"1.`", "\[VeryThinSpace]", "+", 
  RowBox[{"1.3333333333333333`", " ", "x"}]}]], "Output",
 CellChangeTimes->{3.6502128663905993`*^9, 
  3.650212902790949*^9},ExpressionUUID->"28790445-00b6-47bc-8543-\
14f0623be9d0"]
}, Open  ]],

Cell["Simplify will reduce complex expressions for you", "Text",
 CellChangeTimes->{{3.6502128543785143`*^9, 3.650212890144546*^9}, {
  3.650283210555538*^9, 
  3.6502832220581083`*^9}},ExpressionUUID->"e103542c-f53a-403d-bac4-\
3d959c60a94a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x", "^", "3"}], "+", "1"}], ")"}]}], ",", "x"}], "]"}], ",", 
   "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.650283268284041*^9, 
  3.650283306440452*^9}},ExpressionUUID->"79a24f8e-246c-4db0-b7da-\
6081f18205a3"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"3", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "x"}], ")"}]}]], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"2", " ", "x"}]}], 
   RowBox[{"6", " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", "x", "+", 
      SuperscriptBox["x", "2"]}], ")"}]}]], "+", 
  FractionBox["2", 
   RowBox[{"3", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       FractionBox["1", "3"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", "x"}]}], ")"}], "2"]}]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{{3.650283283088368*^9, 
  3.650283306715711*^9}},ExpressionUUID->"5a0d24de-d720-48f1-a0b1-\
d5df50c38d39"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{"%", "+", 
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], "^", "2"}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "%", " ", "indicates", " ", "the", " ", "previous", " ", "output"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.650212864802771*^9, 3.650212901440815*^9}, {
  3.6502832263734083`*^9, 3.650283264163748*^9}, {3.650283310223518*^9, 
  3.650283333354177*^9}},ExpressionUUID->"4be8063f-61a6-47c6-b29e-\
8d88bd726b1c"],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", "+", 
   SuperscriptBox["x", "3"]}], 
  RowBox[{"1", "+", 
   SuperscriptBox["x", "3"]}]]], "Output",
 CellChangeTimes->{3.6502128663905993`*^9, 3.650212902790949*^9, 
  3.6502833357813997`*^9},ExpressionUUID->"4df1b749-e6e2-40c3-b41d-\
04303dd4124e"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Formulas", "Subsection",
 CellChangeTimes->{{3.650196284406623*^9, 
  3.6501962854622993`*^9}},ExpressionUUID->"41d2a685-4990-457b-9c5c-\
1ba865e7438d"],

Cell["\<\
The syntax to define a function is simply functionname[variables_] := \
function. Note the colon before the equals sign, this is important as it \
tells Mathematica to reevaluate the function every time it is called.\
\>", "Text",
 CellChangeTimes->{{3.650196351283849*^9, 3.6501964061282263`*^9}, 
   3.6509012016081743`*^9},ExpressionUUID->"4461c4dc-193b-4626-9d8b-\
78089f943511"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"x", "^", "2"}], "+", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"x", "*", 
    RowBox[{"y", "/", 
     RowBox[{"Tan", "[", 
      RowBox[{"x", "+", "y"}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"h", "[", 
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
   RowBox[{"x", "^", "y"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6501964076799307`*^9, 
  3.6501964575820303`*^9}},ExpressionUUID->"d204141d-ecf5-4d61-a5da-\
425c06947547"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.650196459725911*^9, 
  3.650196460789777*^9}},ExpressionUUID->"c01373d3-9464-48ea-aa53-\
4fd0bfcc2c02"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{
  3.6501964823992977`*^9},ExpressionUUID->"d0bcfac5-82b2-4155-900d-\
e64453216f37"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "[", 
  RowBox[{"4", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.6501964636535463`*^9, 
  3.650196467661479*^9}},ExpressionUUID->"9e61a28a-261f-4c16-b444-\
60545d026fb5"],

Cell[BoxData[
 RowBox[{"12", " ", 
  RowBox[{"Cot", "[", "7", "]"}]}]], "Output",
 CellChangeTimes->{
  3.650196482411579*^9},ExpressionUUID->"a18a54a0-34d7-4f09-8599-\
75e531530dbe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"h", "[", 
  RowBox[{"4", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.6501964690695047`*^9, 
  3.6501964722612047`*^9}},ExpressionUUID->"645e1abd-eec4-47f9-a480-\
ccc8cb1c3632"],

Cell[BoxData[
 RowBox[{"h", "[", 
  RowBox[{"4", ",", "3"}], "]"}]], "Output",
 CellChangeTimes->{
  3.65019648244046*^9},ExpressionUUID->"89fd6977-a08a-4daa-981c-89c1430bc59d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"h", "[", 
  RowBox[{"{", 
   RowBox[{"4", ",", "3"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.650196474078107*^9, 
  3.650196477085124*^9}},ExpressionUUID->"a3420fb6-717c-435e-a87a-\
3054028d2858"],

Cell[BoxData["64"], "Output",
 CellChangeTimes->{
  3.65019648245437*^9},ExpressionUUID->"d5778480-2f69-4b37-8d6f-29a7ec2b1191"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Derivatives", "Subsection",
 CellChangeTimes->{{3.650196284406623*^9, 
  3.650196297829804*^9}},ExpressionUUID->"ebd86c15-10df-43d1-9f8d-\
67cf8b6103c8"],

Cell["\<\
In order to take a derivative, you just use the syntax D[f,x]. To take the \
nth derivative, use D[f,{x,n}]. If f is just a function of x, you can use f\
\[CloseCurlyQuote][x]\
\>", "Text",
 CellChangeTimes->{{3.650197086507457*^9, 
  3.650197218254388*^9}},ExpressionUUID->"7957cc6e-71d8-4af8-b773-\
c35a739826fc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.65019722068293*^9, 
  3.6501972229125023`*^9}},ExpressionUUID->"76a84f7a-00da-4593-a264-\
622ba64f1b12"],

Cell[BoxData[
 RowBox[{"2", " ", "x"}]], "Output",
 CellChangeTimes->{
  3.650197224129938*^9},ExpressionUUID->"75ac27d0-d3df-4125-8a72-\
aeb910fd0eef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "'"}], "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.650197225574564*^9, 
  3.650197227558412*^9}},ExpressionUUID->"93a490ad-5e72-4f43-bd70-\
7346c6f07ba3"],

Cell[BoxData[
 RowBox[{"2", " ", "x"}]], "Output",
 CellChangeTimes->{
  3.65019722873774*^9},ExpressionUUID->"b76724a0-6ac5-4c3c-8c3d-7e47da0d0019"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"h", "[", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.650197246491178*^9, 
  3.6501972516451387`*^9}},ExpressionUUID->"7a3f4435-7917-43cd-8707-\
4b37b2d5e339"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["x", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "y"}]], " ", "y"}]], "Output",
 CellChangeTimes->{
  3.650197252456357*^9},ExpressionUUID->"92b527ea-335c-4d68-acea-\
09fb11d64b61"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"h", "'"}], "[", 
  RowBox[{"{", 
   RowBox[{"x", ",", "y"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.6501972318870687`*^9, 
  3.650197240653778*^9}},ExpressionUUID->"3b720ff6-a7ac-4fa2-8476-\
e090a5453597"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["h", "\[Prime]",
   MultilineFunction->None], "[", 
  RowBox[{"{", 
   RowBox[{"x", ",", "y"}], "}"}], "]"}]], "Output",
 CellChangeTimes->{{3.650197234445713*^9, 
  3.650197241055821*^9}},ExpressionUUID->"6c204249-b319-4400-8fb8-\
03d49f1e0c3b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Integrals", "Subsection",
 CellChangeTimes->{{3.650196284406623*^9, 
  3.650196300805674*^9}},ExpressionUUID->"b893d875-043f-4d4f-ba47-\
184e24150a89"],

Cell["\<\
When taking integrals, you can either do it analytically, using \
Integrate[f,x] or Integrate[f,{x,x1,x2}], or you can do it numerically, using \
NIntegrate[f,{x,x1,x2}]\
\>", "Text",
 CellChangeTimes->{{3.650197269100484*^9, 
  3.6501973098897*^9}},ExpressionUUID->"0b25dc25-7107-4b72-b741-2b2d7621c858"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], ",", "x"}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Note", " ", "that", " ", "this", " ", 
    RowBox[{"doesn", "'"}], "t", " ", "include", " ", "the", " ", "constant", 
    " ", "that", " ", "we", " ", "know", " ", "is", " ", "there"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.6501974413755083`*^9, 
  3.650197457970606*^9}},ExpressionUUID->"79c5d2b5-11fa-4acd-bd72-\
3e964054c385"],

Cell[BoxData[
 RowBox[{"x", "+", 
  FractionBox[
   SuperscriptBox["x", "3"], "3"]}]], "Output",
 CellChangeTimes->{
  3.650197459018079*^9},ExpressionUUID->"722ab79a-b50a-444f-a5cf-\
377e503873d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "x1", ",", "x2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.650197312127645*^9, 3.650197314529814*^9}, {
  3.6501974295242157`*^9, 
  3.65019743299105*^9}},ExpressionUUID->"d3a1c602-324f-40ea-b73d-\
4461de04b952"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "x1"}], "-", 
  FractionBox[
   SuperscriptBox["x1", "3"], "3"], "+", "x2", "+", 
  FractionBox[
   SuperscriptBox["x2", "3"], "3"]}]], "Output",
 CellChangeTimes->{3.650197315261753*^9, 
  3.6501974334721403`*^9},ExpressionUUID->"bc03a619-984c-40bc-a777-\
efe1509f3663"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"g", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", "x"}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Mathematica", " ", "is", " ", 
    RowBox[{"powerful", "!"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.6501973166764593`*^9, 3.650197374856691*^9}, {
  3.650197424129134*^9, 
  3.6501974253580437`*^9}},ExpressionUUID->"04bb4fe7-0d33-436c-96f5-\
729d40d14d31"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", "y", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "x"}], "+", 
    RowBox[{
     SuperscriptBox["x", "2"], " ", 
     RowBox[{"Cot", "[", "y", "]"}]}], "+", 
    RowBox[{"\[Pi]", " ", 
     RowBox[{"Log", "[", 
      RowBox[{"1", "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "x"}]]}], "]"}]}], 
    "+", 
    RowBox[{"2", " ", "x", " ", 
     RowBox[{"Log", "[", 
      RowBox[{"1", "-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{"x", "+", 
           RowBox[{"ArcTan", "[", 
            RowBox[{"Tan", "[", "y", "]"}], "]"}]}], ")"}]}]]}], "]"}]}], "-", 
    RowBox[{"\[Pi]", " ", 
     RowBox[{"Log", "[", 
      RowBox[{"Cos", "[", "x", "]"}], "]"}]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"ArcTan", "[", 
      RowBox[{"Tan", "[", "y", "]"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "x"}], "+", 
       RowBox[{"Log", "[", 
        RowBox[{"1", "-", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"x", "+", 
             RowBox[{"ArcTan", "[", 
              RowBox[{"Tan", "[", "y", "]"}], "]"}]}], ")"}]}]]}], "]"}], "-", 
       RowBox[{"Log", "[", 
        RowBox[{"Sin", "[", 
         RowBox[{"x", "+", 
          RowBox[{"ArcTan", "[", 
           RowBox[{"Tan", "[", "y", "]"}], "]"}]}], "]"}], "]"}]}], ")"}]}], 
    "-", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"PolyLog", "[", 
      RowBox[{"2", ",", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{"x", "+", 
           RowBox[{"ArcTan", "[", 
            RowBox[{"Tan", "[", "y", "]"}], "]"}]}], ")"}]}]]}], "]"}]}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"ArcTan", "[", 
        RowBox[{"Tan", "[", "y", "]"}], "]"}]}]], " ", 
     SuperscriptBox["x", "2"], " ", 
     RowBox[{"Cot", "[", "y", "]"}], " ", 
     SqrtBox[
      SuperscriptBox[
       RowBox[{"Sec", "[", "y", "]"}], "2"]]}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.650197329797254*^9, {3.650197419943396*^9, 
   3.65019742591133*^9}},ExpressionUUID->"7493f3d9-a371-4bea-b3c0-\
a352710d5548"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{"h", "[", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"2", "x"}]}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6501973483200912`*^9, 
  3.65019736415134*^9}},ExpressionUUID->"f0d50c23-575d-4e46-ba25-\
b97c0642f114"],

Cell[BoxData["4.91016336920533`"], "Output",
 CellChangeTimes->{
  3.650197365024942*^9},ExpressionUUID->"b61f7897-ac7e-4099-b0ec-\
4fa79e7bc99d"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Expansions", "Subsection",
 CellChangeTimes->{{3.650196284406623*^9, 
  3.650196305695985*^9}},ExpressionUUID->"ef6a1db6-9af2-419e-92e5-\
9cece92efab5"],

Cell["\<\
It can be useful to expand a function in a small parameter. Mathematica can \
do this to any order you like using Series[f,{x,x0,n}].\
\>", "Text",
 CellChangeTimes->{{3.65019823543451*^9, 
  3.65019827101585*^9}},ExpressionUUID->"4213ca7b-d96d-4b03-9183-\
4bf624931390"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"Log", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6501982720941143`*^9, 3.6501982788886127`*^9}, {
  3.650198328145627*^9, 
  3.650198331301099*^9}},ExpressionUUID->"cb949297-7eb6-433a-8552-\
28e25e779631"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"x", "-", "1"}], ")"}], "-", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "-", "1"}], ")"}], "2"]}], "+", 
   RowBox[{
    FractionBox["1", "3"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "-", "1"}], ")"}], "3"]}], "-", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "-", "1"}], ")"}], "4"]}], "+", 
   RowBox[{
    FractionBox["1", "5"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "-", "1"}], ")"}], "5"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", 
      RowBox[{"x", "-", "1"}], "]"}], "6"],
    SeriesData[$CellContext`x, 1, {}, 1, 6, 1],
    Editable->False]}],
  SeriesData[$CellContext`x, 1, {1, 
    Rational[-1, 2], 
    Rational[1, 3], 
    Rational[-1, 4], 
    Rational[1, 5]}, 1, 6, 1],
  Editable->False]], "Output",
 CellChangeTimes->{3.650198279443771*^9, 
  3.650198331906047*^9},ExpressionUUID->"2ba1b20b-8cf7-423a-bd1c-\
3bf5cd5635b8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.650198283257272*^9, 
  3.650198291327401*^9}},ExpressionUUID->"2ec0ec2a-d55d-475b-a0c2-\
3a2d2859ed10"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"y", " ", 
    RowBox[{"Cot", "[", "y", "]"}], " ", "x"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "y"}], "-", 
      RowBox[{"y", " ", 
       SuperscriptBox[
        RowBox[{"Cot", "[", "y", "]"}], "2"]}]}], ")"}], " ", 
    SuperscriptBox["x", "2"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"y", " ", 
       RowBox[{"Cot", "[", "y", "]"}]}], "+", 
      RowBox[{"y", " ", 
       SuperscriptBox[
        RowBox[{"Cot", "[", "y", "]"}], "3"]}]}], ")"}], " ", 
    SuperscriptBox["x", "3"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["y", "3"]}], "-", 
      RowBox[{
       FractionBox["4", "3"], " ", "y", " ", 
       SuperscriptBox[
        RowBox[{"Cot", "[", "y", "]"}], "2"]}], "-", 
      RowBox[{"y", " ", 
       SuperscriptBox[
        RowBox[{"Cot", "[", "y", "]"}], "4"]}]}], ")"}], " ", 
    SuperscriptBox["x", "4"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "x", "]"}], "5"],
    SeriesData[$CellContext`x, 0, {}, 1, 5, 1],
    Editable->False]}],
  SeriesData[$CellContext`x, 
   0, {$CellContext`y Cot[$CellContext`y], -$CellContext`y - $CellContext`y 
    Cot[$CellContext`y]^2, $CellContext`y 
     Cot[$CellContext`y] + $CellContext`y Cot[$CellContext`y]^3, 
    Rational[-1, 3] $CellContext`y + (Rational[-4, 3] $CellContext`y) 
     Cot[$CellContext`y]^2 - $CellContext`y Cot[$CellContext`y]^4}, 1, 5, 1],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.650198291770392*^9},ExpressionUUID->"f52fe58d-fdd9-4d27-9a5c-\
62c2398ba662"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Matrices", "Subsection",
 CellChangeTimes->{{3.650984769065219*^9, 
  3.65098477017715*^9}},ExpressionUUID->"b96092a6-2f44-4ef7-8aab-\
0d4665ab4385"],

Cell[TextData[{
 "Matrices in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " are just lists, but have a lot of nice functionality. First we will just \
define a Matrix using basic list syntax. MatrixForm will display it nicely."
}], "Text",
 CellChangeTimes->{{3.650984779832479*^9, 
  3.650984866571003*^9}},ExpressionUUID->"ff639a3f-aecb-4dce-8cc0-\
071d2b9fa7e0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"A", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.650984838964796*^9, 3.650984852293028*^9}, {
  3.650985043835587*^9, 
  3.650985045231646*^9}},ExpressionUUID->"b7c29189-ac75-4bdd-b0af-\
91d53f5e352b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.650985040816378*^9, 
  3.650985045628428*^9}},ExpressionUUID->"a4e9c106-97fc-4141-a330-\
ce8f42f3436c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "A", "]"}]], "Input",
 CellChangeTimes->{{3.6509848552466288`*^9, 
  3.650984857628643*^9}},ExpressionUUID->"c8eab17e-ba78-4bcc-9f60-\
3ecb96bc5caf"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0"},
     {"0", "0", "2"},
     {"0", "1", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.65098485852404*^9, 
  3.65098505008918*^9},ExpressionUUID->"079aa852-ac10-49cf-9642-51c64f8eab77"]
}, Open  ]],

Cell["We can also define matrices formulaically using Table", "Text",
 CellChangeTimes->{{3.650984779832479*^9, 
  3.650984893577203*^9}},ExpressionUUID->"9267f096-bab4-48f4-8f1e-\
15aa0246e4de"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"B", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"i", "+", "j", "+", "1"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "3"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6509848949558496`*^9, 3.650984913536211*^9}, {
  3.6509849720013437`*^9, 3.650984972211936*^9}, {3.650985012658494*^9, 
  3.650985012849924*^9}},ExpressionUUID->"e0fa48a3-9fd1-4d1c-90da-\
a804374c4347"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "7"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.650984913919544*^9, 3.6509849725744963`*^9, 
  3.650985013073008*^9, 
  3.650985052192877*^9},ExpressionUUID->"a9be73a9-7c90-4f4f-9653-\
d0d226e41535"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "B", "]"}]], "Input",
 CellChangeTimes->{{3.6509849153834343`*^9, 
  3.650984917649486*^9}},ExpressionUUID->"64f15726-dc1c-4169-aaa7-\
091f6574b64c"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"3", "4", "5"},
     {"4", "5", "6"},
     {"5", "6", "7"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6509849182773523`*^9, 3.650984973500114*^9, 
  3.65098501421844*^9, 
  3.650985053046105*^9},ExpressionUUID->"b05d6e90-b8a9-4c4d-a388-\
7165d03f4781"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " has a lot of built in functions for Matrices, some of which are shown \
here"
}], "Text",
 CellChangeTimes->{{3.650984924288217*^9, 
  3.650984954612857*^9}},ExpressionUUID->"053e7adc-351a-4954-a3db-\
1b4b15f92dc5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Transpose", "[", "A", "]"}], 
  RowBox[{"(*", 
   RowBox[{"Take", " ", "the", " ", "Transpose"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.65098495778867*^9, 3.6509849597180347`*^9}, {
  3.650985128105794*^9, 
  3.650985131881743*^9}},ExpressionUUID->"d26e23b2-22ab-4a19-8992-\
c67038136ba6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.65098496050115*^9, 
  3.650985054220402*^9},ExpressionUUID->"0729e630-8ae6-4da2-bd28-\
f012d9f9647a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Det", "[", "A", "]"}], 
  RowBox[{"(*", 
   RowBox[{"Take", " ", "the", " ", "determinant"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.6509849633798323`*^9, 3.650984988747024*^9}, {
  3.650985024469977*^9, 3.650985057478539*^9}, {3.650985120909457*^9, 
  3.650985126146158*^9}},ExpressionUUID->"9c9587bf-197c-4aa3-a95c-\
13925e4c70ac"],

Cell[BoxData[
 RowBox[{"-", "2"}]], "Output",
 CellChangeTimes->{{3.6509849652994537`*^9, 3.650985025092574*^9}, 
   3.6509850577386503`*^9},ExpressionUUID->"7e3c0ea7-6f67-4dee-9076-\
9db945250237"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Tr", "[", "B", "]"}], 
  RowBox[{"(*", 
   RowBox[{"Take", " ", "the", " ", "trace"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.650985060482582*^9, 3.650985063206811*^9}, {
  3.650985116218625*^9, 
  3.6509851186189528`*^9}},ExpressionUUID->"ea8ea0d3-0570-4389-8020-\
9f2128b00abf"],

Cell[BoxData["15"], "Output",
 CellChangeTimes->{
  3.650985063536455*^9},ExpressionUUID->"82c3f970-597a-456e-9d7a-\
8ec3d21a3dab"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"A", ".", "B", 
  RowBox[{"(*", 
   RowBox[{
   "Take", " ", "the", " ", "product", " ", "of", " ", "two", " ", 
    "matrices"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.6509850663479757`*^9, 3.650985066846011*^9}, {
  3.650985107739156*^9, 
  3.6509851143071823`*^9}},ExpressionUUID->"f1ff002c-4f1e-42d2-abb9-\
b3b4553e45c6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "12", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.650985067711659*^9},ExpressionUUID->"98d3beac-d932-499c-9ad9-\
abf4a800c032"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Eigenvalues", "[", "A", "]"}], 
  RowBox[{"(*", 
   RowBox[{"Get", " ", "the", " ", "eigenvalues"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.650985072556357*^9, 
  3.65098510485975*^9}},ExpressionUUID->"3b795f7a-27ca-4deb-a3d2-\
39c6dbbbbcd0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    SqrtBox["2"]}], ",", 
   SqrtBox["2"], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{
  3.65098507521301*^9},ExpressionUUID->"abdcc21b-8707-4b46-829c-0e7dfde0ef26"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Eigenvectors", "[", "B", "]"}], 
  RowBox[{"(*", 
   RowBox[{"Get", " ", "the", " ", "eigenvectors"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.650985076791222*^9, 
  3.6509850983936567`*^9}},ExpressionUUID->"aa34f6d6-beac-431d-a006-\
01799e838a18"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"16", "+", 
         SqrtBox["249"]}], ")"}]}], 
      RowBox[{"47", "+", 
       RowBox[{"3", " ", 
        SqrtBox["249"]}]}]], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "79"}], "-", 
        RowBox[{"5", " ", 
         SqrtBox["249"]}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"47", "+", 
          RowBox[{"3", " ", 
           SqrtBox["249"]}]}], ")"}]}]]}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "16"}], "+", 
         SqrtBox["249"]}], ")"}]}], 
      RowBox[{
       RowBox[{"-", "47"}], "+", 
       RowBox[{"3", " ", 
        SqrtBox["249"]}]}]], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"79", "-", 
        RowBox[{"5", " ", 
         SqrtBox["249"]}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "47"}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["249"]}]}], ")"}]}]]}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "2"}], ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.650985080418898*^9},ExpressionUUID->"05493af2-1667-49d8-b36c-\
51c2d5ebc17e"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Solving Equations", "Section",
 CellChangeTimes->{{3.650195294602419*^9, 
  3.650195296623019*^9}},ExpressionUUID->"8042bb21-b288-46ee-b9b4-\
000593fb0ff2"],

Cell[CellGroupData[{

Cell["Basic Equation Solving", "Subsection",
 CellChangeTimes->{{3.65019866446762*^9, 
  3.650198669218522*^9}},ExpressionUUID->"0d8adf19-409f-4b6a-8614-\
7feedcffaea9"],

Cell["\<\
An equation in Mathematica is written with a double equals sign (==). The \
Solve, NSolve and FindRoot functions will all solve equations, with slightly \
different applications.\
\>", "Text",
 CellChangeTimes->{{3.6502032282942743`*^9, 
  3.650203281092011*^9}},ExpressionUUID->"ea69cf76-6a84-4a7c-9e40-\
0ea957a90771"],

Cell["\<\
Solve[equations, variables] will find equation solutions analytically. It \
returns a list of \[OpenCurlyDoubleQuote]replacement rules\
\[CloseCurlyDoubleQuote], which can be applied using the synax \
\[OpenCurlyDoubleQuote]/.\[CloseCurlyDoubleQuote]. \
\>", "Text",
 CellChangeTimes->{{3.6502033133941307`*^9, 3.650203366543437*^9}, {
   3.650203605906556*^9, 3.650203612658424*^9}, 3.650203689150353*^9, 
   3.6502037193725853`*^9},ExpressionUUID->"b6e177f2-f8cd-40f4-8acd-\
facf5820be54"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"quadraticsolution", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"x", "^", "2"}], "+", 
      RowBox[{"a", "*", "x"}], "-", "b"}], "\[Equal]", "0"}], ",", "x"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.650203282123255*^9, 3.650203302507407*^9}, {
  3.650203370368237*^9, 3.65020337439156*^9}, {3.6502035163372087`*^9, 
  3.6502035193680153`*^9}},ExpressionUUID->"3e03a026-3485-41ec-a863-\
26f1e04e75c5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "a"}], "-", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          RowBox[{"4", " ", "b"}]}]]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "a"}], "+", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          RowBox[{"4", " ", "b"}]}]]}], ")"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.650203303079163*^9, 3.650203377137639*^9, 
  3.65020352046883*^9},ExpressionUUID->"906eee08-6936-4dee-b948-4115e1e3f53a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "/.", "quadraticsolution"}]], "Input",
 CellChangeTimes->{{3.6502033795772953`*^9, 
  3.6502033844897823`*^9}},ExpressionUUID->"83365881-fb3d-44ba-80a2-\
3f5691e56604"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "a"}], "-", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["a", "2"], "+", 
        RowBox[{"4", " ", "b"}]}]]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "a"}], "+", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["a", "2"], "+", 
        RowBox[{"4", " ", "b"}]}]]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.650203385423532*^9, 
  3.650203522116872*^9},ExpressionUUID->"17fd318c-66c6-414f-963b-\
b8ddae270011"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "/.", 
  RowBox[{"quadraticsolution", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.650203391707076*^9, 
  3.650203400202323*^9}},ExpressionUUID->"0d184e17-08c8-47e0-8808-\
c3a82ce47496"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "a"}], "-", 
    SqrtBox[
     RowBox[{
      SuperscriptBox["a", "2"], "+", 
      RowBox[{"4", " ", "b"}]}]]}], ")"}]}]], "Output",
 CellChangeTimes->{3.650203400706087*^9, 
  3.650203523004826*^9},ExpressionUUID->"7f539b92-df0d-4b25-a9e8-\
a8be15b93403"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "+", "y"}], ")"}], "^", "2"}], "-", 
       RowBox[{"a", "*", "x"}], "-", 
       RowBox[{"b", "*", "y"}]}], "\[Equal]", "0"}], ",", 
     RowBox[{"y", "\[Equal]", "x"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6502036966770487`*^9, 
  3.6502037379804697`*^9}},ExpressionUUID->"0f5ccc2c-06bf-4820-ac4e-\
71f52b2388c8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "0"}], ",", 
     RowBox[{"y", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      FractionBox[
       RowBox[{"a", "+", "b"}], "4"]}], ",", 
     RowBox[{"y", "\[Rule]", 
      FractionBox[
       RowBox[{"a", "+", "b"}], "4"]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.65020372515034*^9, 
  3.6502037384121304`*^9}},ExpressionUUID->"a90a8730-e986-478f-af8a-\
b4e9905aed9a"]
}, Open  ]],

Cell["\<\
NSolve[equation, variables] will find equation solutions numerically. It also \
returns a list of \[OpenCurlyDoubleQuote]replacement rules\
\[CloseCurlyDoubleQuote].\
\>", "Text",
 CellChangeTimes->{{3.6502033133941307`*^9, 3.650203366543437*^9}, {
  3.650203538591161*^9, 3.6502035463579073`*^9}, {3.6502035918834257`*^9, 
  3.6502036016668987`*^9}, {3.650203680473466*^9, 
  3.6502036871664248`*^9}},ExpressionUUID->"ea74122a-73c3-44ad-8bf8-\
98b001516916"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Nquadraticsolution", "=", 
  RowBox[{"NSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"x", "^", "2"}], "+", 
      RowBox[{"5.5", "*", "x"}], "-", "6.0"}], "\[Equal]", "0"}], ",", "x"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.650203282123255*^9, 3.650203302507407*^9}, {
  3.650203370368237*^9, 3.65020337439156*^9}, {3.6502035163372087`*^9, 
  3.6502035193680153`*^9}, {3.650203644778584*^9, 
  3.650203654000925*^9}},ExpressionUUID->"86b59a5a-4c85-4214-aeee-\
2b03e2f3cd15"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "6.432729965664059`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.9327299656640589`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.650203303079163*^9, 3.650203377137639*^9, 
  3.65020352046883*^9, 
  3.650203654898972*^9},ExpressionUUID->"72f0a324-dc44-4d43-8491-\
06d5b05d5aa8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "/.", "Nquadraticsolution"}]], "Input",
 CellChangeTimes->{{3.6502033795772953`*^9, 3.6502033844897823`*^9}, 
   3.650203661312546*^9},ExpressionUUID->"3c22212a-1d2c-48fd-8bd1-\
d3d327f8faa0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "6.432729965664059`"}], ",", "0.9327299656640589`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.650203385423532*^9, 3.650203522116872*^9, {3.650203656620713*^9, 
   3.650203666944625*^9}},ExpressionUUID->"13ad9f0f-b729-46f8-a954-\
79b81aab3082"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "/.", 
  RowBox[{"Nquadraticsolution", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.650203391707076*^9, 3.650203400202323*^9}, 
   3.650203663184417*^9},ExpressionUUID->"fee0db79-32bb-464c-ac44-\
aeaba6a1f419"],

Cell[BoxData[
 RowBox[{"-", "6.432729965664059`"}]], "Output",
 CellChangeTimes->{3.650203400706087*^9, 3.650203523004826*^9, 
  3.6502036651995783`*^9},ExpressionUUID->"c6ac9fb0-7896-4151-bfa4-\
7db6a245166d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "+", "y"}], ")"}], "^", "2"}], "-", 
       RowBox[{"3", "*", "x"}], "-", 
       RowBox[{"4", "*", "y"}]}], "\[Equal]", "0"}], ",", 
     RowBox[{"y", "\[Equal]", "x"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.65020374515307*^9, 3.650203747716024*^9}, 
   3.6502037903311462`*^9},ExpressionUUID->"1209f190-e426-4642-905f-\
8c2755db6fa9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "1.7499999999999998`"}], ",", 
     RowBox[{"y", "\[Rule]", "1.7499999999999998`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "0.`"}], ",", 
     RowBox[{"y", "\[Rule]", "0.`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6502037481397457`*^9, 
  3.650203790711979*^9},ExpressionUUID->"694cc9c9-391a-40e7-8486-\
406300038611"]
}, Open  ]],

Cell["\<\
Finally, FindRoot[equation,{x,x0}] will find a numerical solution close to \
x0. It is very fast compared to the other two.\
\>", "Text",
 CellChangeTimes->{{3.650203524960425*^9, 3.650203528843411*^9}, {
  3.650203804987853*^9, 3.650203847063356*^9}, {3.6502038914286127`*^9, 
  3.650203902715109*^9}},ExpressionUUID->"5dabd9b2-e6ae-4773-808f-\
f857663fc22f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Nquadraticsolution", "=", 
  RowBox[{"FindRoot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"x", "^", "2"}], "+", 
      RowBox[{"5.5", "*", "x"}], "-", "6.0"}], "\[Equal]", "0"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.650203282123255*^9, 3.650203302507407*^9}, {
  3.650203370368237*^9, 3.65020337439156*^9}, {3.6502035163372087`*^9, 
  3.6502035193680153`*^9}, {3.650203644778584*^9, 3.650203654000925*^9}, {
  3.650203922225062*^9, 
  3.650203932090169*^9}},ExpressionUUID->"3356ddd2-3e4a-49eb-bca6-\
b1a5c118ba1a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", "\[Rule]", "0.9327299656640592`"}], "}"}]], "Output",
 CellChangeTimes->{3.650203303079163*^9, 3.650203377137639*^9, 
  3.65020352046883*^9, 3.650203654898972*^9, 
  3.650203932832971*^9},ExpressionUUID->"5ecca0f8-ff0c-4cb0-a067-\
b58e594e263d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "/.", "Nquadraticsolution"}]], "Input",
 CellChangeTimes->{{3.6502033795772953`*^9, 3.6502033844897823`*^9}, 
   3.650203661312546*^9},ExpressionUUID->"22aa8c0f-ec2d-4870-a954-\
440275f3494c"],

Cell[BoxData["0.9327299656640592`"], "Output",
 CellChangeTimes->{
  3.650203385423532*^9, 3.650203522116872*^9, {3.650203656620713*^9, 
   3.650203666944625*^9}, 
   3.650203938667923*^9},ExpressionUUID->"dbe5e072-35ec-4811-82f0-\
88190f06063e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "/.", 
  RowBox[{"Nquadraticsolution", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.650203391707076*^9, 3.650203400202323*^9}, 
   3.650203663184417*^9},ExpressionUUID->"dc3fa3e6-7aeb-482a-b74e-\
96a2fa99e39f"],

Cell[BoxData["0.9327299656640592`"], "Output",
 CellChangeTimes->{3.650203400706087*^9, 3.650203523004826*^9, 
  3.6502036651995783`*^9, 
  3.650203939582193*^9},ExpressionUUID->"1c879035-0819-434a-a547-\
7bcba36d7f07"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "+", "y"}], ")"}], "^", "2"}], "-", 
       RowBox[{"3", "*", "x"}], "-", 
       RowBox[{"4", "*", "y"}]}], "\[Equal]", "0"}], ",", 
     RowBox[{"y", "\[Equal]", "x"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.65020374515307*^9, 3.650203747716024*^9}, 
   3.6502037903311462`*^9, {3.650203946687118*^9, 
   3.6502039560650063`*^9}},ExpressionUUID->"d9c215f0-ff05-4073-9276-\
8e7a81125ccf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", 
    RowBox[{"-", "7.1871701133571005`*^-16"}]}], ",", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"-", "7.1871699810082025`*^-16"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.6502037481397457`*^9, 3.650203790711979*^9, 
  3.650203958252966*^9},ExpressionUUID->"00587752-e91b-4cc1-a08c-\
19eeb420b3f6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solving Differential Equations", "Subsection",
 CellChangeTimes->{{3.65019866446762*^9, 
  3.650198682617753*^9}},ExpressionUUID->"abdc053e-eb7f-4336-ad43-\
66a98a9abf01"],

Cell["\<\
Solving differential equations can be done analytically with DSolve[eqn, \
y[x], x] or numerically with NDSolve[eqn,y[x],{x,xmin,xmax}]. In both of \
these, y is the function you are solving for and x is the independent \
variable. Once again, the results will be stored as replacement rules.\
\>", "Text",
 CellChangeTimes->{{3.650204950350968*^9, 3.6502050005727167`*^9}, {
  3.650205030748002*^9, 3.650205057859317*^9}, {3.650205135537075*^9, 
  3.6502051501958323`*^9}},ExpressionUUID->"d67a6bfb-e189-41a6-a966-\
ac4f5f9a6718"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"y", "'"}], "[", "x", "]"}], "+", 
     RowBox[{"y", "[", "x", "]"}]}], "\[Equal]", 
    RowBox[{"a", "*", 
     RowBox[{"Sin", "[", "x", "]"}]}]}], ",", 
   RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.650205001767646*^9, 
  3.6502050240528393`*^9}},ExpressionUUID->"ee329459-2cf8-4f52-b972-\
52dca167e6dc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "x"}]], " ", 
      RowBox[{"C", "[", "1", "]"}]}], "+", 
     RowBox[{
      FractionBox["1", "2"], " ", "a", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cos", "[", "x", "]"}]}], "+", 
        RowBox[{"Sin", "[", "x", "]"}]}], ")"}]}]}]}], "}"}], "}"}]], "Output",\

 CellChangeTimes->{
  3.65020502557603*^9},ExpressionUUID->"6052ec91-8a4f-426d-a6eb-3c36d26733cd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"y", "'"}], "[", "x", "]"}], "+", 
      RowBox[{"y", "[", "x", "]"}]}], "\[Equal]", 
     RowBox[{"Sin", "[", "x", "]"}]}], ",", 
    RowBox[{"y", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "2"}], "}"}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"This", " ", "should", " ", "throw", " ", "an", " ", "error"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.65020506264581*^9, 3.65020508039515*^9}, {
  3.650212004484758*^9, 
  3.650212011869321*^9}},ExpressionUUID->"9cc76317-6f4d-4c54-a880-\
7816ad7a9d44"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndnco"}], "MessageName"], ":", 
  " ", "\<\"The number of constraints (\[NoBreak]\\!\\(0\\)\[NoBreak]) \
(initial conditions) is not equal to the total differential order of the \
system plus the number of discrete variables \
(\[NoBreak]\\!\\(1\\)\[NoBreak]). \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndnco\\\", \
ButtonNote -> \\\"NDSolve::ndnco\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.6502050809667797`*^9},ExpressionUUID->"6cb63e27-b1c2-4350-8d29-\
8488fc32e7ce"],

Cell[BoxData[
 RowBox[{"NDSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"y", "[", "x", "]"}], "+", 
     RowBox[{
      SuperscriptBox["y", "\[Prime]",
       MultilineFunction->None], "[", "x", "]"}]}], "\[Equal]", 
    RowBox[{"Sin", "[", "x", "]"}]}], ",", 
   RowBox[{"y", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "2"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.6502050809709673`*^9},ExpressionUUID->"a3bd470e-23b9-427e-bdfc-\
b272c417105b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"With", " ", "NDSolve"}], ",", " ", 
    RowBox[{
    "we", " ", "need", " ", "to", " ", "specify", " ", "boundary", " ", 
     "conditions"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"y", "'"}], "[", "x", "]"}], "+", 
        RowBox[{"y", "[", "x", "]"}]}], "\[Equal]", 
       RowBox[{"Sin", "[", "x", "]"}]}], ",", 
      RowBox[{
       RowBox[{"y", "[", "1", "]"}], "\[Equal]", "1"}]}], "}"}], ",", 
    RowBox[{"y", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.65020509889147*^9, 
  3.650205126971189*^9}},ExpressionUUID->"03100748-938c-410a-86ee-\
ea938580816a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     TagBox[
      TemplateBox[{
        RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwVj304FHYAx9kePRpCrLFNHjdXUZs6Vqn4CsPusFaJRXiOC6MjPcLSnIxm
meWlyRAuHk3NHo97mJdnaM9sN89sFxfn9VK7ceh3b869cDf74/t8/vj88/m6
MNNPs14xMTE5sbX/yZ1iVCloTF/GqZK5q/IN5I3cOJTS0Qh3hyP7ZGYb8Mz5
XUNhdeC++piN2k6P0NVWgfVkD3Qdmd2uvjpoY6JLg22G8K3d7vn8bC20CR/H
JJb9Cr645uTzhxow6jqTBwf44JdUc+s166BnfdGkpY9C7HvjUdPJdZhf7zL/
PF6Ahijnos27athPiud2Z43hULGh0dVMjauF/oz2LiG8x8N3DLLXUBA8FTEr
mIBpn0X3qWUV0p9t6jMWRPDXnUm4lakCbyTqqNJ5BiNNqrdoGiW4o0s7Xz8y
h4XLjPGZr5VQ2oiGKnzEWJTY+g1TlCimvhoSdv4Z3uZ7rJYNKcAOCqmfSFjA
+HRNTsslBQqsv/cRFT7H0T5G1kNHBZZeuP7QdvsFzgi3J1QL5Mhj9icpO//B
cfWkcdtXcpiMOGa8FEgwsYsjsqLLIUJFcM/Mv1s9SauddnLMxuz5VL+5CAca
zz5kTobDxcJoK0spHrgV9YZ2yMD5jl4rsF+G+8/JBSUlMqydm6Zaea2gUlCe
qmPKMOB8M9/BbxXMoOXH2wNk4N0Od61lvgTHYSOx1FWG2pXpXX/nE5QfbpcW
viZDmrt/mjRQBkHGXm+llKCB1py5TyjDExtT6fwvBJuDlfGj0XJEtRe849BC
MBZ4MevPeTlaHKcmhLcIBuqGPczTFbBMvcvMySIQfsYTtKkU0PEqJEuJBKbv
HnQsKVIie/8lrmckQSTLO+QvSxX4AUn31sII9lRS77HLVfDQtbtPBxNY3Gmo
+dBlDcfaIiQugQRvOrXmlbauId56JdboT+Cbe8LMwlsNryr9tcUAguk/eLyF
39So6PuxuSyIgMvtZVDC1nE+JW4v6AT54eFf1s+uw+Z6a43XRwTFnPRHnEQN
vOLc3C+eJdj24Mp6/6IGtHFT8tMnBHX3zRa9crTIWKTsZMcRxFCpg/YGLWzv
tNFYW39o1574HPxGB2rpe8m2KQScYeZCs5MeYgdrx4Y0Am01h13A1cMzVGM+
wCa46XOgsYa2garlx2W56QR+Kawex54NHH/jCtK2/I6UAzlC+ibOxfSbUFIJ
ImKfXpCKNiGxprjksAiGRVb7k+IMmJdEzPMvEIS5jdU7ywzojo2ubDhNYDBQ
Ncg2otfpfcXZDwi6iiVqo9GIyMtPc8VeBP8BF2/zbg==
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.9}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 2.}, {0.9752046947137768, 
                    1.8089512532069587`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "2.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwVj304FHYAx9kePRpCrLFNHjdXUZs6Vqn4CsPusFaJRXiOC6MjPcLSnIxm
meWlyRAuHk3NHo97mJdnaM9sN89sFxfn9VK7ceh3b869cDf74/t8/vj88/m6
MNNPs14xMTE5sbX/yZ1iVCloTF/GqZK5q/IN5I3cOJTS0Qh3hyP7ZGYb8Mz5
XUNhdeC++piN2k6P0NVWgfVkD3Qdmd2uvjpoY6JLg22G8K3d7vn8bC20CR/H
JJb9Cr645uTzhxow6jqTBwf44JdUc+s166BnfdGkpY9C7HvjUdPJdZhf7zL/
PF6Ahijnos27athPiud2Z43hULGh0dVMjauF/oz2LiG8x8N3DLLXUBA8FTEr
mIBpn0X3qWUV0p9t6jMWRPDXnUm4lakCbyTqqNJ5BiNNqrdoGiW4o0s7Xz8y
h4XLjPGZr5VQ2oiGKnzEWJTY+g1TlCimvhoSdv4Z3uZ7rJYNKcAOCqmfSFjA
+HRNTsslBQqsv/cRFT7H0T5G1kNHBZZeuP7QdvsFzgi3J1QL5Mhj9icpO//B
cfWkcdtXcpiMOGa8FEgwsYsjsqLLIUJFcM/Mv1s9SauddnLMxuz5VL+5CAca
zz5kTobDxcJoK0spHrgV9YZ2yMD5jl4rsF+G+8/JBSUlMqydm6Zaea2gUlCe
qmPKMOB8M9/BbxXMoOXH2wNk4N0Od61lvgTHYSOx1FWG2pXpXX/nE5QfbpcW
viZDmrt/mjRQBkHGXm+llKCB1py5TyjDExtT6fwvBJuDlfGj0XJEtRe849BC
MBZ4MevPeTlaHKcmhLcIBuqGPczTFbBMvcvMySIQfsYTtKkU0PEqJEuJBKbv
HnQsKVIie/8lrmckQSTLO+QvSxX4AUn31sII9lRS77HLVfDQtbtPBxNY3Gmo
+dBlDcfaIiQugQRvOrXmlbauId56JdboT+Cbe8LMwlsNryr9tcUAguk/eLyF
39So6PuxuSyIgMvtZVDC1nE+JW4v6AT54eFf1s+uw+Z6a43XRwTFnPRHnEQN
vOLc3C+eJdj24Mp6/6IGtHFT8tMnBHX3zRa9crTIWKTsZMcRxFCpg/YGLWzv
tNFYW39o1574HPxGB2rpe8m2KQScYeZCs5MeYgdrx4Y0Am01h13A1cMzVGM+
wCa46XOgsYa2garlx2W56QR+Kawex54NHH/jCtK2/I6UAzlC+ibOxfSbUFIJ
ImKfXpCKNiGxprjksAiGRVb7k+IMmJdEzPMvEIS5jdU7ywzojo2ubDhNYDBQ
Ncg2otfpfcXZDwi6iiVqo9GIyMtPc8VeBP8BF2/zbg==
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.9}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 2.}, {0.9752046947137768, 
                    1.8089512532069587`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "2.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 2.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "[", "x", "]"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.650205128119212*^9},ExpressionUUID->"6880fc38-2e9d-4eb5-a9a6-\
44ac98507e13"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Plotting", "Section",
 CellChangeTimes->{{3.650195301551046*^9, 
  3.650195302406794*^9}},ExpressionUUID->"ce90067e-543b-43e5-a958-\
2397ceb527d3"],

Cell["\<\
A basic function of one variable is plotted using Plot[f[x],{x,xmin,xmax}]\
\>", "Text",
 CellChangeTimes->{{3.650212041356533*^9, 
  3.6502120559312277`*^9}},ExpressionUUID->"5c86cee0-6b40-4506-a803-\
6f15f18ebad1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"1", "+", 
    RowBox[{"x", "^", "2"}], "-", 
    RowBox[{"Sin", "[", "x", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6502120600756083`*^9, 
  3.650212078915309*^9}},ExpressionUUID->"57a27b3c-321f-4737-afbf-\
3207c6a4298a"],

Cell[BoxData[
 GraphicsBox[{{}, {}, LineBox[CompressedData["
1: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
    "]]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.75},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {0.7675344332546132, 1.1585289854023553`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.650212072055708*^9, 
  3.650212079277092*^9}},ExpressionUUID->"381771d0-5081-409e-962c-\
bbd51fb84e00"]
}, Open  ]],

Cell["\<\
You can also plot several functions at once with \
Plot[{f1[x],f2[x],f3[x]...},{x,xmin,xmax}]\
\>", "Text",
 CellChangeTimes->{{3.650212041356533*^9, 3.6502120559312277`*^9}, {
  3.6502121172744207`*^9, 
  3.650212136056819*^9}},ExpressionUUID->"e52b8685-1fd7-4a07-93f7-\
5128b3fa29bd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "+", 
      RowBox[{"x", "^", "2"}], "-", 
      RowBox[{"Sin", "[", "x", "]"}]}], ",", 
     RowBox[{"2", "+", 
      RowBox[{"x", "^", "2"}], "-", 
      RowBox[{"Sin", "[", "x", "]"}]}], ",", 
     RowBox[{"3", "+", 
      RowBox[{"x", "^", "2"}], "-", 
      RowBox[{"Sin", "[", "x", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6502120600756083`*^9, 3.650212078915309*^9}, {
  3.650212140221394*^9, 
  3.650212155480667*^9}},ExpressionUUID->"5a35a9b1-5288-4999-800b-\
598444e8da95"],

Cell[BoxData[
 GraphicsBox[{{}, {}, LineBox[CompressedData["
1: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
    "]], 
   LineBox[CompressedData["
1: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
fD4XXDRMKGXmRNL/ALqxnvc=
    "]], LineBox[CompressedData["
1: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
    "]]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.7000000000000001},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {0.7675344332546132, 3.158528985402355}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.650212072055708*^9, 3.650212079277092*^9}, 
   3.650212155995278*^9},ExpressionUUID->"cff06f36-afec-4b4f-9c5f-\
ce13492de90d"]
}, Open  ]],

Cell["\<\
There are many options that you can use when plotting, especially for \
formatting. For full information, refer to the Documentation.\
\>", "Text",
 CellChangeTimes->{{3.650212085711092*^9, 3.65021208676615*^9}, {
  3.650212191905558*^9, 3.6502122085026417`*^9}, {3.650212458351754*^9, 
  3.650212461502982*^9}},ExpressionUUID->"57d6c874-8ab5-44e7-96a5-\
3419c6ad78a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"1", "-", 
       RowBox[{"x", "^", "2"}]}], "]"}], ",", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"2", "-", 
       RowBox[{"x", "^", "2"}]}], "]"}], ",", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"3", "-", 
       RowBox[{"x", "^", "2"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Red"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Dashed", ",", "Green"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Thin", ",", "Blue"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.650212462807136*^9, 
  3.6502126694536467`*^9}},ExpressionUUID->"cb482825-f307-4a7c-a865-\
dfd1780d1ea1"],

Cell[BoxData[
 GraphicsBox[{{}, {}, LineBox[CompressedData["
1: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
vI1pkHa9w+gL3ndf9s4Py5L0gP8BAri0mQ==
    "]], LineBox[CompressedData["
1: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
yBemQcK1oYOpNfvq0NhcqRzVgISrhuJ6sFSL60faWKohCVdoe7Z/+1mLuOlT
J+0ekaA4z2cfb1uLTH5M1rI8JkGWad0ll5oa9Jt16Mc2YxJEd3f0ST+rRjKd
e0WmzUnYldDkn3y+Gh2YDJePsyBBWKJOYQ9vNeJD/7HcsSSB/yhK2lJShS48
uuyfZ0XC5vNfrCe4qtCi/rCvuQ0JxAPnzbHZFcjM5frN9w4k0Kl2iNerAuXr
N7PJO+Lf89jKyudeBXK1Tn3ciz1p/rjbnqUCCabM7edxJmHg5Y2E2xo/kJpc
5GeblyTUxIqdZV8pQ4Z642V/3EmQQVFdkx4lKEr7CR+TDwk7Nm+YiJEuQd4R
0b6m2P80ny3fHClGg8GJ/T3YFfSzOwuhGEWweGxM9yXh1v4B/bfLhcjDS/it
qj8JFr67Zw9Y5KPnaw9vqAWScJvitTYoko+OHDHSTcI+Jb7AHfwzD3XLnry4
Pgi/H6Vl0n+l8lBPqHF0FrYPQ9++Yewbik5M9GQJIeGLzqcNpjo56FCzyyXr
MPx9EiffHvYcdPbqWUYRtgVhI96Rl4005944bwjH/4e/0hV5vmxUu4ltdwB2
Vfkvf86WTLSm/OFTRAQJyVzX48peZiLfRU6pHmzfe3lZNoczkcPsfW/+SLxe
0quj/20GCg5s7g7Arrp1W+aebxqamJ4vtInC18/s06qYTEX2aS8EvmLffk04
HlRORYMpUteHsakFoWV/139FIU6HbihHk8Ak2nP1/YsvaDjmv8iN70moLvxi
ztKZhBrjTrWcxPa74xBoKp2EMqKuUR9iC3sLdcvPfkbb1jdEfMM+Pa9rMGCQ
gMIKP1+/GUPCs4KECbuKePRFJyvDBjvGY8p8q1g88g7L/h2GzSxo76Q4HocO
ZCSf6cGWoaL1A0pxSIQzWeYP9pNUVm+7xA/oEmuWIF8sCRHuEgfutMSgd+wz
werYq/zfTnkFvkerahKHnmLrf72oWHgrGh2Ocfr6Cvtgx33dPZ0RaHHbS70s
7HdPp5/eDgtHihInQmqwyX/2tq81w1DbAe7MfuzS/SH+M5RgJL5TJWbDBxLE
CkWjd0cHoWc5KeZ82G+uZSTd0g1Ef3zOS4hjz1Hlcz1F3iFtXvYaGezE+VD3
58gfKQaxX7uEbSGYFd1zwRf57VUsvol9RuFnLlS8QScK8rY9wN5gQmv8pOSF
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
    "]], LineBox[CompressedData["

1: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

    "]]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-2, 2}, {0., 1.7320507802235316`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.65021267042048*^9},ExpressionUUID->"5ef0b4e4-36e6-4f9b-83d7-7df5c810b3c5"]
}, Open  ]],

Cell["\<\
Here is a more complicated example of plotting a solution to a differential \
equation with several parameter choices\
\>", "Text",
 CellChangeTimes->{{3.650212288708193*^9, 
  3.650212327514913*^9}},ExpressionUUID->"8b11e040-a200-4a06-8be1-\
efb61084b1c6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotsolution", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"y", "'"}], "[", "x", "]"}], "\[Equal]", 
       RowBox[{"a", "*", 
        RowBox[{"Sin", "[", "x", "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"y", "[", "0", "]"}], "\[Equal]", "2"}]}], "}"}], ",", 
    RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.650212330995558*^9, 
  3.6502123744101353`*^9}},ExpressionUUID->"513d3471-416a-4144-8fde-\
da589d9ced65"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{"2", "+", "a", "-", 
     RowBox[{"a", " ", 
      RowBox[{"Cos", "[", "x", "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.650212374908431*^9},ExpressionUUID->"8fe5c5ad-c668-4f32-a00d-\
5fd0722a7653"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"y", "[", "x", "]"}], "/.", 
      RowBox[{"plotsolution", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{"a", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6502122115109777`*^9, 3.6502122651742992`*^9}, {
  3.650212384621479*^9, 3.650212390041813*^9}, {3.650212423697988*^9, 
  3.650212424072609*^9}},ExpressionUUID->"7994a130-3eea-4ec3-a3fd-\
293ae526fb23"],

Cell[BoxData[
 GraphicsBox[{{}, {}, {LineBox[CompressedData["
1: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
AU3qHtM=
     "]], LineBox[CompressedData["
1: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
QF3vwdYFaS78//8X/g/CETHw
     "]], LineBox[CompressedData["
1:eJw12Xk4VO/7OPAzM8ycsWWfmWKOLSSVnTfq3JZkKbtIUUmkLFHR21vJ3iJb
UipRyRZKWbKkkrUklBBKKntSiZB8n8/vun7zz1yv65yZc57nvp/7Ps+MrEeA
/X4qhmFxFAz73zvtMV/bJ+2ITXrY/3uBjKSMIvfCbjLM4eEEOg6/BpKse1MC
SN2comJ+ZL8evEGkOIQ8+3bAfCXyoFHLUHlKOFmxfXPVeuT8LlOsuDqKlFr3
gWqB7MG3OhErjiO1ZrLlfJClSF6uQ9Y5MuNdAicRuevIl8LbKYmk5K0LI1XI
W94MSYfVJZNR2Xnxk8jZU/b7b1dfIKdanuIKFAww5rPCttKL5LmUjp17kd3k
NWfmii6RNSItMdnIVRtvGcjmppPi3y7FfkWWdBGLssy6Srp4qbobUjFoj/8p
kpGSSU7MOiejAULa6xLVTw1Z5G/f+kkrGgb1gz7tIXU3yDCdG9z7yLKLvawb
1bfI9H4z3iQeDGzxlGrth9mk58PeSgYvBiclLHc/L71Nig4fNo1BfrehKudn
US758qJaXzIdA3xjkOXpgjzSqoo1IsPAQNdSZUoqN5/MP3aquQw51fOKtlnW
HTLK2ZT/O47BtvTQ+sspd0nZ7s3xRfwYbHLglKZtuUfG3/9JHhJA87XjF+/H
hnvk3bO9TesFMaB5F+UfqyshffzPOzQJYbAnQvr79eoH5Iwp7rRJFIO5uHnj
sX9KyVntH9kqYhgkJHSlaj4sJUWeBDRJiWNQc/W8XnNpGakfrhclKokBp3wp
/HtRBck5ov3KZCUG92p6OwxUH5I7hhYK3VdhYP6sTD624CG5uttxZ7gUBsHt
fk0rcyvJoY93lDu5GHSODwiZZlWT47rvTzySxyCeqM1IS3lMSpv5vyxYj4HZ
i6vqTwSfkIEfIwOM1TBojHUR17Z/Qq5uUvw4qI5B01JHL7fvCUlzAHUNbQya
J+o9f0w+JY3Om4coGmLwvKkgNF24npQ9XaPsZIWBZZS3m5BTPRm08CNuxzZ0
fJMCRKXXkz+yvIo9bTB4UZbB6yfXQHYKFVknOmDQeispCbQayZn49y+0d2Hw
Mjw4Z8S5mTzhXb22yR8DawPNM7uuNZN1OZ6luoEYtM1+O9Qx2EwmVeMLxUeQ
/XzUq31ayA96fpUlx5F37qpJ+O85GX3Yf4YRhfJL17hTO7OVrOr758HsZQzG
5+jLRkfaSUe12OLuFgyW5bfV615oJ/f6pp0bbsVA3PbCmXUP2skuvYfqi68w
IPMIcc7PdvLGPqm32m9RfrjorZkO6iC/BJzxmR5C+VDp43A9qJMMM7djhC5h
kBzamrsQ+Ias26us06tDgZwcUb/p5DfkO62z1zL1KVDT6aIxXPKGDO3Lundo
EwWGVb7UdHx/Q0qnyL4XN6OAft9SR15gFym0cEHzjhMFPhts+LM98C35+1vZ
5PAxCugtJds+ONxD3t3xI/BCFTo/7OAlPKmHVAhIEZ+rpYDBovF7t7s95NBA
mcCeZxTYNP/zED7VQ06wreaNWilg8sspzu1QL7lY33B783sKWH/l1DK83pHG
e6NdrGhU2D9wY+2unf2ky+CwmbkdFVreu0RR5QfJ6Yc2eg1/qLC9VU+CojVI
NvUfrJmm0uBzJTt32RQdt/2xVo5JA+xiz/M/XoNk3sCWxjQJGuhZuYjOFQyS
9DU15Y3raZBT4XxjQuMjOZjaOkt60CA6afvjN8ZDJHlurfS5lzQAY8fFHI/P
JN+XyiVWGQ+4HraYLtsxSo7mjZ67eZ0OtbIqkU9uT5IVpw0OTi3h4HhZ5daA
/zT5WafPOfoiP6zifWSS5PWDdJzHZUM1hCBOs+H+k9Mz5Pt9ltQN6cKweYvl
npzYWdLU47dbuaAoNJyZUYwO/U26HxC4EBApBuPnxWs+XF4gQS6rt5EtAXtD
ShKnU/6QzpI8QzcTJeGEXL16eMVfcrby4OSplWxY//fELNUHA7XD86OfznGg
yc3lp4wnBfqH3X0Pta0E9et+3SeOUsGVg/8XJSQFpnZPXcuCaMBlhZMxbGlI
PXdIixZCg7bTE38rpaThU4OEkN1/NEjS5a6alJGGSP2DTyejaPDGd9HTfI00
PJUXU1a4SIM0ar3Ux3+kYdOs56+UChp0RZ0TTnGVBr2reNLhPzSYD2noGEuX
hrVfbBrWxvJAU69dhrowF3p8VBP3n+UBuss1xWwxLsRO4TsyE3hAvm/1oBiL
C4NzTydFL/GA7YjM4Lg0F1L5tMQXcnlAbmTFfPBaLvzZwN7X3MID4qEbauhm
XGgLHcT2C/KCY5Ga1N/jXPhvueb5dRFeuCyq9FE8jAvK0empPRK8kJKmV6kc
zoXI8/bKW7m8sCNmU+aWGC7oZtXbaG7gBen0vyoeyVzIasi7TrHjBT0psxhm
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
Dvz//xf+D6ARUdQ=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 1.8},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {2.000000000000008, 7.999999649405547}}, {{
     0, 6.283185307179586}, {2.000000000000008, 7.999999649405547}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.650212265702022*^9, 3.650212394161532*^9, 
  3.650212424796371*^9},ExpressionUUID->"ae9f1ca5-c7b9-4d73-9133-\
a745b0c10e26"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Lagrangian Example - Elastic Pendulum (Section 1)", "Section",
 CellChangeTimes->{{3.650798415632949*^9, 3.6507984195359917`*^9}, {
  3.650901263122213*^9, 3.6509012661214647`*^9}, {3.8402121226303988`*^9, 
  3.840212128823525*^9}},ExpressionUUID->"a8035c6c-d708-4df2-9e19-\
097756672505"],

Cell["\<\
We derived the Lagrangian for an elastic pendulum in recitation. Here, we \
will get the Euler Lagrange equations and solve them numerically\
\>", "Text",
 CellChangeTimes->{{3.650798464333353*^9, 
  3.6507984942110853`*^9}},ExpressionUUID->"61fba680-76ce-43cd-9ccf-\
e8aea2a72df9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "First", " ", "we", " ", "define", " ", "the", " ", "Lagrangian"}], ",", 
    " ", 
    RowBox[{
    "using", " ", "xp", " ", "and", " ", "thetap", " ", "as", " ", "stand", 
     " ", "ins", " ", "for", " ", "the", " ", "derivatives"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"LelasticPendulum", "[", 
     RowBox[{"theta_", ",", "thetap_", ",", "x_", ",", "xp_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "/", "2"}], "*", "m", "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"xp", "^", "2"}], "+", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"l", "+", "x"}], ")"}], "^", "2"}], "*", 
         RowBox[{"thetap", "^", "2"}]}]}], ")"}]}], "+", 
     RowBox[{"m", "*", "g", "*", 
      RowBox[{"(", 
       RowBox[{"l", "+", "x"}], ")"}], "*", 
      RowBox[{"Cos", "[", "theta", "]"}]}], "-", 
     RowBox[{
      RowBox[{"1", "/", "2"}], "*", "k", "*", 
      RowBox[{"x", "^", "2"}]}]}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.650798504683764*^9, 3.650798515618763*^9}, {
  3.650799012761187*^9, 3.650799035078334*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"cd9beb18-c2b6-4a17-ad3f-cf2cd2964120"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Here", " ", "we", " ", "take", " ", "the", " ", "appropriate", " ", 
    "derivatives", " ", "to", " ", "get", " ", "our", " ", "EL", " ", 
    "equations", " ", "for", " ", "x", " ", "and", " ", "theta"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ELequationx", "=", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"LelasticPendulum", "[", 
             RowBox[{"theta", ",", "thetap", ",", "x", ",", "xp"}], "]"}], 
            ",", "xp"}], "]"}], ",", "x"}], "]"}], "*", "xp"}], "+", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"LelasticPendulum", "[", 
             RowBox[{"theta", ",", "thetap", ",", "x", ",", "xp"}], "]"}], 
            ",", "xp"}], "]"}], ",", "theta"}], "]"}], "*", "thetap"}], "+", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"LelasticPendulum", "[", 
             RowBox[{"theta", ",", "thetap", ",", "x", ",", "xp"}], "]"}], 
            ",", "xp"}], "]"}], ",", "xp"}], "]"}], "*", "xpp"}], "+", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"LelasticPendulum", "[", 
             RowBox[{"theta", ",", "thetap", ",", "x", ",", "xp"}], "]"}], 
            ",", "xp"}], "]"}], ",", "thetap"}], "]"}], "*", "thetapp"}], "-", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"LelasticPendulum", "[", 
          RowBox[{"theta", ",", "thetap", ",", "x", ",", "xp"}], "]"}], ",", 
         "x"}], "]"}]}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"theta", "\[Rule]", 
        RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
       RowBox[{"thetap", "\[Rule]", 
        RowBox[{
         RowBox[{"\[Theta]", "'"}], "[", "t", "]"}]}], ",", 
       RowBox[{"thetapp", "\[Rule]", 
        RowBox[{
         RowBox[{"\[Theta]", "''"}], "[", "t", "]"}]}], ",", 
       RowBox[{"x", "\[Rule]", 
        RowBox[{"x", "[", "t", "]"}]}], ",", 
       RowBox[{"xp", "\[Rule]", 
        RowBox[{
         RowBox[{"x", "'"}], "[", "t", "]"}]}], ",", 
       RowBox[{"xpp", "\[Rule]", 
        RowBox[{
         RowBox[{"x", "''"}], "[", "t", "]"}]}]}], "}"}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"ELequation\[Theta]", "=", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"LelasticPendulum", "[", 
             RowBox[{"theta", ",", "thetap", ",", "x", ",", "xp"}], "]"}], 
            ",", "thetap"}], "]"}], ",", "x"}], "]"}], "*", "xp"}], "+", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"LelasticPendulum", "[", 
             RowBox[{"theta", ",", "thetap", ",", "x", ",", "xp"}], "]"}], 
            ",", "thetap"}], "]"}], ",", "theta"}], "]"}], "*", "thetap"}], 
       "+", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"LelasticPendulum", "[", 
             RowBox[{"theta", ",", "thetap", ",", "x", ",", "xp"}], "]"}], 
            ",", "thetap"}], "]"}], ",", "xp"}], "]"}], "*", "xpp"}], "+", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"LelasticPendulum", "[", 
             RowBox[{"theta", ",", "thetap", ",", "x", ",", "xp"}], "]"}], 
            ",", "thetap"}], "]"}], ",", "thetap"}], "]"}], "*", "thetapp"}], 
       "-", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"LelasticPendulum", "[", 
          RowBox[{"theta", ",", "thetap", ",", "x", ",", "xp"}], "]"}], ",", 
         "theta"}], "]"}]}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"theta", "\[Rule]", 
        RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
       RowBox[{"thetap", "\[Rule]", 
        RowBox[{
         RowBox[{"\[Theta]", "'"}], "[", "t", "]"}]}], ",", 
       RowBox[{"thetapp", "\[Rule]", 
        RowBox[{
         RowBox[{"\[Theta]", "''"}], "[", "t", "]"}]}], ",", 
       RowBox[{"x", "\[Rule]", 
        RowBox[{"x", "[", "t", "]"}]}], ",", 
       RowBox[{"xp", "\[Rule]", 
        RowBox[{
         RowBox[{"x", "'"}], "[", "t", "]"}]}], ",", 
       RowBox[{"xpp", "\[Rule]", 
        RowBox[{
         RowBox[{"x", "''"}], "[", "t", "]"}]}]}], "}"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.6507989238015823`*^9, 3.6507989266115627`*^9}, {
  3.650799037471856*^9, 3.650799066322818*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"88afac5f-77d6-4eb3-846e-34a002b2a0b2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "g"}], " ", "m", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
  RowBox[{"k", " ", 
   RowBox[{"x", "[", "t", "]"}]}], "-", 
  RowBox[{"m", " ", 
   RowBox[{"(", 
    RowBox[{"l", "+", 
     RowBox[{"x", "[", "t", "]"}]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{
     SuperscriptBox["\[Theta]", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
  RowBox[{"m", " ", 
   RowBox[{
    SuperscriptBox["x", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.6507989057601223`*^9, 3.650798932906003*^9}, 
   3.650799070129204*^9, 3.840213127713509*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"edcc84f0-bd4b-4e06-bf4a-87af230c1065"],

Cell[BoxData[
 RowBox[{"m", " ", 
  RowBox[{"(", 
   RowBox[{"l", "+", 
    RowBox[{"x", "[", "t", "]"}]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"g", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{
      SuperscriptBox["x", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], " ", 
     RowBox[{
      SuperscriptBox["\[Theta]", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"l", "+", 
       RowBox[{"x", "[", "t", "]"}]}], ")"}], " ", 
     RowBox[{
      SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.6507989057601223`*^9, 3.650798932906003*^9}, 
   3.650799070129204*^9, 3.84021312773088*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"d2824561-d275-43e1-a23c-7816bdde7ddb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Let", "'"}], "s", " ", "substitute", " ", "in", " ", "some", " ",
     "numbers", " ", "so", " ", "we", " ", "can", " ", "solve", " ", 
    "numerically"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ELequationxNum", "=", 
    RowBox[{"Evaluate", "[", 
     RowBox[{"ELequationx", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"l", "\[Rule]", "1"}], ",", 
        RowBox[{"g", "\[Rule]", "1"}], ",", 
        RowBox[{"m", "\[Rule]", "1"}], ",", 
        RowBox[{"k", "\[Rule]", "4"}]}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"ELequation\[Theta]Num", "=", 
    RowBox[{"Evaluate", "[", 
     RowBox[{"ELequation\[Theta]", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"l", "\[Rule]", "1"}], ",", 
        RowBox[{"g", "\[Rule]", "1"}], ",", 
        RowBox[{"m", "\[Rule]", "1"}], ",", 
        RowBox[{"k", "\[Rule]", "4"}]}], "}"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.650798556103285*^9, 3.650798556365615*^9}, {
  3.6507986338991327`*^9, 3.650798643123185*^9}, {3.650799073858925*^9, 
  3.6507990848686247`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"52a9070d-f3dd-4c66-81dc-2eb10e7f3844"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
  RowBox[{"4", " ", 
   RowBox[{"x", "[", "t", "]"}]}], "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"x", "[", "t", "]"}]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{
     SuperscriptBox["\[Theta]", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
  RowBox[{
   SuperscriptBox["x", "\[Prime]\[Prime]",
    MultilineFunction->None], "[", "t", "]"}]}]], "Output",
 CellChangeTimes->{3.650798936575268*^9, 3.650799086134427*^9, 
  3.840213127736231*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"4e064b27-6ac3-45bf-9b00-15f521542cf3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"1", "+", 
    RowBox[{"x", "[", "t", "]"}]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "+", 
    RowBox[{"2", " ", 
     RowBox[{
      SuperscriptBox["x", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], " ", 
     RowBox[{
      SuperscriptBox["\[Theta]", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"x", "[", "t", "]"}]}], ")"}], " ", 
     RowBox[{
      SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.650798936575268*^9, 3.650799086134427*^9, 
  3.840213127737105*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"a9736d73-99e6-464e-8ebc-e4695176edfb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Use", " ", "NDSolve", " ", "to", " ", "get", " ", "the", " ", "numerical",
     " ", "solutions", " ", "to", " ", "our", " ", "differential", " ", 
    "equations"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"numericalElasticSolution", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ELequationxNum", "\[Equal]", "0"}], ",", 
       RowBox[{"ELequation\[Theta]Num", "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
        RowBox[{"Pi", "/", "6"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Theta]", "'"}], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"x", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", ".2"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]", "[", "t", "]"}], ",", 
       RowBox[{"x", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "100"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.650798742404722*^9, 3.650798752885009*^9}, {
  3.6507989471533318`*^9, 3.650798948473575*^9}, {3.650798982799177*^9, 
  3.650798984627141*^9}, {3.650799088517009*^9, 3.650799103230236*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"9559cb1b-09fd-4dd1-a664-78a5edefd4b4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Theta]", "[", "t", "]"}], "\[Rule]", 
     RowBox[{
      InterpretationBox[
       RowBox[{
        TagBox["InterpolatingFunction",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD5zVy04UsHgP0XRMWw0
Ffo/afVnpT5txT8FZS60Bi4LQMdPH22IgOO/aslGZ8wwFEDAstn8CyXWv8qC
eNpvqRpA3qsNLR953D8VebNxPtcgQKVJRZXsc9o/IB09Xc4dJEAN3tclpBfF
vykcpROTqidA9imvrMBd4L9wLA79xCYrQPYWry5VtaW/EKmJTQBnLkDbzEOU
VZrkP1jAcTS49jBABEB7cCXwxz9V4qf19JsyQI9ZrrkeFeG/8YxeUOg4NECt
yhpzYJXVvwxlhBD2+DVA3FxAFTgK0D9VczOECJs3QAI6YPjUZt8/Hq9RXTVg
OUAuYrkPqXeiv4Vz8M8YHTtA++3o17Et5b8Zbhj2ALw8QAJ9s2DDNbq/LZav
gQN+PkAou1OEIqviPzj6Z2AFEUBAn2BYU1tiyz8ZwK8ylvRAQEa27nxPBda/
Scq3UQLUQUBSScaZLbXZv49vhMpwpEJAeg+jEQZpxj+Vqwh2bIZDQOb+f9Rv
UOQ/soJRe2pZREASlbIc4Pa2vx6eWs1DKEVAA/xekd9a479KUBtSqghGQJi9
pOqdtbe/jZ2gMBPaRkDY5woSkjTZP4+B3UEJvUdAklRGapxq1j/hqdqf2ptI
QJMo2uTehNW/SW2cV65rSUD4dhDgnUPjv3HHFUIPTUpAuz1yzq7EzT+wvFOG
ch9LQKe2ablyOeM/PvZRF7HtS0ASDaHI73WhP4zGB9t8zUxA/6CfCyvC3b/w
MYL4Sp5NQGdPvZDu+tO/FDS0SKaATkCRhrvTLsPaP0/RqvIDVE9AaePmj0Cc
4T9t2bB0nhFQQJJqdFm+YdC/khVoiQGCUEABBuOw34Hiv0KfAcvl6lBA3WDl
FOmAnD9S9PalkFxRQPtJITifH+A/imtMJynMUUAm8FSAuXfLP00whNVCNFJA
gdjwuR8Q4L9wwBcdI6VSQAkKeVPYKty/H56NkYQOU0AdmQ3ZdyHZP/WdY6zT
dVNAA6KyPCkV4T8raZVg6eVTQJFTXVLTEb6/7IGpQYBOVEAsiobZBZfgvw1m
Gbzdv1RA/IrIdYK+w79WbOncKC9VQA15HZ+kOuM/KsCbKvWWVUB/x3rLW7rX
P17fqRGIB1ZAbI5zvNbP3r8dTJolnHBWQMqQ3b8aadu/PITm0nbiVkBM9I7z
XcvKP4PekiY/UldAcsqZXm7B3z9VhiGniLpXQKoFxWcoF6g/h/kLwZgrWEAv
SleGm+rkv0W62AcqlVhARiQCyuYyyL8+GeT4//9YQJ1OY9MChuE/fwvNOg==

                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$14784#1"]& ]}}, {}}, {
                  DisplayFunction -> Identity, 
                   Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                   FrameTicks -> {{{}, {}}, {{}, {}}}, 
                   GridLines -> {None, None}, DisplayFunction -> Identity, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                   All, DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                   PlotRange -> {{0., 100.}, {-0.661827966402995, 
                    0.6438396354482409}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD5zVy04UsHgP0XRMWw0
Ffo/afVnpT5txT8FZS60Bi4LQMdPH22IgOO/aslGZ8wwFEDAstn8CyXWv8qC
eNpvqRpA3qsNLR953D8VebNxPtcgQKVJRZXsc9o/IB09Xc4dJEAN3tclpBfF
vykcpROTqidA9imvrMBd4L9wLA79xCYrQPYWry5VtaW/EKmJTQBnLkDbzEOU
VZrkP1jAcTS49jBABEB7cCXwxz9V4qf19JsyQI9ZrrkeFeG/8YxeUOg4NECt
yhpzYJXVvwxlhBD2+DVA3FxAFTgK0D9VczOECJs3QAI6YPjUZt8/Hq9RXTVg
OUAuYrkPqXeiv4Vz8M8YHTtA++3o17Et5b8Zbhj2ALw8QAJ9s2DDNbq/LZav
gQN+PkAou1OEIqviPzj6Z2AFEUBAn2BYU1tiyz8ZwK8ylvRAQEa27nxPBda/
Scq3UQLUQUBSScaZLbXZv49vhMpwpEJAeg+jEQZpxj+Vqwh2bIZDQOb+f9Rv
UOQ/soJRe2pZREASlbIc4Pa2vx6eWs1DKEVAA/xekd9a479KUBtSqghGQJi9
pOqdtbe/jZ2gMBPaRkDY5woSkjTZP4+B3UEJvUdAklRGapxq1j/hqdqf2ptI
QJMo2uTehNW/SW2cV65rSUD4dhDgnUPjv3HHFUIPTUpAuz1yzq7EzT+wvFOG
ch9LQKe2ablyOeM/PvZRF7HtS0ASDaHI73WhP4zGB9t8zUxA/6CfCyvC3b/w
MYL4Sp5NQGdPvZDu+tO/FDS0SKaATkCRhrvTLsPaP0/RqvIDVE9AaePmj0Cc
4T9t2bB0nhFQQJJqdFm+YdC/khVoiQGCUEABBuOw34Hiv0KfAcvl6lBA3WDl
FOmAnD9S9PalkFxRQPtJITifH+A/imtMJynMUUAm8FSAuXfLP00whNVCNFJA
gdjwuR8Q4L9wwBcdI6VSQAkKeVPYKty/H56NkYQOU0AdmQ3ZdyHZP/WdY6zT
dVNAA6KyPCkV4T8raZVg6eVTQJFTXVLTEb6/7IGpQYBOVEAsiobZBZfgvw1m
Gbzdv1RA/IrIdYK+w79WbOncKC9VQA15HZ+kOuM/KsCbKvWWVUB/x3rLW7rX
P17fqRGIB1ZAbI5zvNbP3r8dTJolnHBWQMqQ3b8aadu/PITm0nbiVkBM9I7z
XcvKP4PekiY/UldAcsqZXm7B3z9VhiGniLpXQKoFxWcoF6g/h/kLwZgrWEAv
SleGm+rkv0W62AcqlVhARiQCyuYyyL8+GeT4//9YQJ1OY9MChuE/fwvNOg==

                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$14784#1"]& ]}}, {}}, {
                  DisplayFunction -> Identity, 
                   Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                   FrameTicks -> {{{}, {}}, {{}, {}}}, 
                   GridLines -> {None, None}, DisplayFunction -> Identity, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                   All, DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                   PlotRange -> {{0., 100.}, {-0.661827966402995, 
                    0.6438396354482409}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       InterpolatingFunction[{{0., 100.}}, {
        5, 7, 2, {1571}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
         False}, CompressedData["
1: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
wgv/A1nJp9A=
        "], {Developer`PackedArrayForm, CompressedData["
1:eJwl2FMMYMmiQNHGnbZt23ZP27Zt27Zt27Zt27ZtvzWvK1lJ/dTPOdkpxK/f
pnzrgAECBEgUJMD/j8D8Nw1OKMISgchEIyZxiP/fGpKSgtSkIyNZyE4u8pCf
QhSlBKUpR0WqUJ1a1KUBjWlGS9rQnk50pQe96cdAhjCcUYxlApOZxkzmMJ9F
LGUFq1nHRrawnV3s5QCHOcZJznCeS1zlBre5x0Oe8JxXvOUDn/nGT/4QyAf+
h2CEJAzhiURUYhCbeCQkCclJRVoykJls5ORf8lGQIhSnFGWpQGWqUZM61KcR
TWnBfz+8HR3pQnd60ZcBDGYYIxnDeCYxlRnMZh4LWcJyVrGWDWxmGzvZw34O
cZQTnOYcF7nCdW5xlwc85hkvecN7PvGVH/wmYKAAAf5HUEIQmnBEJArRiUVc
EpCYZKQkDenJRFZykJu8FKAwxShJGcpTiarUoDb1aEgTmtOKtnSgM93oSR/6
M4ihjGA045jIFKYzi7ksYDHLWMka1rOJrexgN/s4yBGOc4qzXOAy17jJHe7z
iKe84DXv+MgXvvMr0N/4AxOE4IQiLBGITDRiEof4JCIpKUhNOjKShezkIg/5
KURRSlCaclSkCtWpRV0a0JhmtKQN7elEV3rQm34MZAjDGcVYJjCZacxkDvNZ
xFJWsJp1bGQL29nFXg5wmGOc5AznucRVbnCbezzkCc95xVs+8Jlv/OQPgf6n
f4IRkjCEJxJRiUFs4pGQJCQnFWnJQGaykZN/yUdBilCcUpSlApWpRk3qUJ9G
NKUFrWlHR7rQnV70ZQCDGcZIxjCeSUxlBrOZx0KWsJxVrGUDm9nGTvawn0Mc
5QSnOcdFrnCdW9zlAY95xkve8J5PfOUHvwn4j/4JSghCE46IRCE6sYhLAhKT
jJSkIT2ZyEoOcpOXAhSmGCUpQ3kqUZUa1KYeDWlCc1rRlg50phs96UN/BjGU
EYxmHBOZwnRmMZcFLGYZK1nDejaxlR3sZh8HOcJxTnGWC1zmGje5w30e8ZQX
vOYdH/nCd37983fjD0wQghOKsEQgMtGISRziB/l7ZkhKClKTjoxkITu5yEN+
ClGUEpSmHBWpQnVqUZcGNKYZLWlDezrRlR70ph8DGcJwRjGWCUxmGjOZw3wW
sZQVrGYdG9nCdnaxlwMc5hgnOcN5LnGVG9zmHg95wnNe8ZYPfOYbP/lDoKD6
JxghCUN4IhGVGMQmHglJQnJSkZYMZCYbOfmXfBSkCMUpRVkqUJlq1KQO9WlE
U1rQmnZ0pAvd6UVfBjCYYYxkDOOZxFRmMJt5LGQJy1nFWjawmW3sZA/7OcRR
TnCac1zkCte5xV0e8JhnvOQN7/nEV37wm4DB9E9QQhCacEQkCtGJRVwSkJhk
pCQN6clEVnKQm7wUoDDFKEkZylOJqtSgNvVoSBOa04q2dKAz3ehJH/oziKGM
YDTjmMgUpjOLuSxgMctYyRrWs4mt7GA3+zjIEY5zirNc4DLXuMkd7vOIp7zg
Ne/4yBe+8yvY30N/YIIQnFCEJQKRiUZM4hCfRCQlBalJR0aykJ1c5CE/hShK
CUpTjopUoTq1qEsDGtOMlrShPZ3oSg9604+BDGE4oxjLBCYzjZnMYT6LWMoK
VrOOjWxhO7vYywEOc4yTnOE8l7jKDW5zj4c84TmveMsHPvONn/whUAj9E4yQ
hCE8kYhKDGITj4QkITmpSEsGMpONnPxLPgpShOKUoiwVqEw1alKH+jSiKS1o
TTs60oXu9KIvAxjMMEYyhvFMYiozmM08FrKE5axiLRvYzDZ2sof9HOIoJzjN
OS5yhevc4i4PeMwzXvKG93ziKz/4TcCQ+icoIQhNOCIShejEIi4JSEwyUpKG
9GQiKznITV4KUJhilKQM5alEVWpQm3o0pAnNaUVbOtCZbvSkD/0ZxFBGMJpx
TGQK05nFXBawmGWsZA3r2cRWdrCbfRzkCMc5xVkucJlr3OQO93nEU17wmnd8
5Avf+RXy74U/MEEITijCEoHIRCMmcYhPIpKSgtSkIyNZyE4u8pCfQhSlBKUp
R0WqUJ1a1KUBjWlGS9rQnk50pQe96cdAhjCcUYxlApOZxkzmMJ9FLGUFq1nH
RrawnV3s5QCHOcZJznCeS1zlBre5x0Oe8JxXvOUDn/nGT/4QKLT+CUZIwhCe
SEQlBrGJR0KSkJxUpCUDmclGTv4lHwUpQnFKUZYKVKYaNalDfRrRlBa0ph0d
6UJ3etGXAQxmGCMZw3gmMZUZzGYeC1nCclaxlg1sZhs72cN+DnGUE5zmHBe5
wnVucZcHPOYZL3nDez7xlR/8JmAY/ROUEIQmHBGJQnRiEZcEJCYZKUlDejKR
lRzkJi8FKEwxSlKG8lSiKjWoTT0a0oTmtKItHehMN3rSh/4MYigjGM04JjKF
6cxiLgtYzDJWsob1bGIrO9jNPg5yhOOc4iwXuMw1bnKH+zziKS94zTs+8oXv
/Arz97EvMEEITijCEoHIRCMmcYhPIpKSgtSkIyNZyE4u8pCfQhSlBKUpR0Wq
UJ1a1KUBjWlGS9rQnk50pQe96cdAhjCcUYxlApOZxkzmMJ9FLGUFq1nHRraw
nV3s5QCHOcZJznCeS1zlBre5x0Oe8JxXvOUDn/nGT/4QKJz+CUZIwhCeSEQl
BrGJR0KSkJxUpCUDmclGTv4lHwUpQnFKUZYKVKYaNalDfRrRlBa0ph0d6UJ3
etGXAQxmGCMZw3gmMZUZzGYeC1nCclaxlg1sZhs72cN+DnGUE5zmHBe5wnVu
cZcHPOYZL3nDez7xlR/8JmB4/ROUEIQmHBGJQnRiEZcEJCYZKUlDejKRlRzk
Ji8FKEwxSlKG8lSiKjWoTT0a0oTmtKItHehMN3rSh/4MYigjGM04JjKF6cxi
LgtYzDJWsob1bGIrO9jNPg5yhOOc4iwXuMw1bnKH+zziKS94zTs+8oXv/Ar/
96E/MEEITijCEoHIRCMmcYhPIpKSgtSkIyNZyE4u8pCfQhSlBKUpR0WqUJ1a
1KUBjWnG/wGPBzvv
         "], CompressedData["
1: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
Htj/CZa5P9oBm6v2+jCUKfh/RJy/+w==
         "]}, {Automatic}],
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "[", "t", "]"}]}], ",", 
    RowBox[{
     RowBox[{"x", "[", "t", "]"}], "\[Rule]", 
     RowBox[{
      InterpretationBox[
       RowBox[{
        TagBox["InterpolatingFunction",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD6AUzJGtb+WPkXRMWw0
Ffo/7DENuGE83z8FZS60Bi4LQAzsyVgd68U/aslGZ8wwFECxEfNI9tfQP8qC
eNpvqRpA/3EfUHuE2T8VebNxPtcgQCGz/Cqzfq8/IB09Xc4dJEAeWlqIiAfg
PykcpROTqidAztOF1N35rT9wLA79xCYrQH8jVyAC/dk/EKmJTQBnLkBuN3l+
e+XJP1jAcTS49jBAx09WygXv0D9V4qf19JsyQFYw6JF9DdY/8YxeUOg4NEA4
0iej7T+9PwxlhBD2+DVAVuj0gLaJ2D9VczOECJs3QKNMuuTWFb4/Hq9RXTVg
OUAiq3XgvdbVP4Vz8M8YHTtAWiSSfnBN0D8Zbhj2ALw8QICR5N+7k9E/LZav
gQN+PkDLE2xojT3RPzj6Z2AFEUBAV3QQrZ2Wzj8ZwK8ylvRAQPirVMicv8s/
Scq3UQLUQUDTB0UnWbDUP49vhMpwpEJAgCB5V5rAzT+Vqwh2bIZDQKWh+9Yw
y9I/soJRe2pZREB9WflBaj7UPx6eWs1DKEVAvtHnPcL7yT9KUBtSqghGQAYd
ClVzENk/jZ2gMBPaRkAFEKfQScLAP4+B3UEJvUdA6GrD6Mgk2j/hqdqf2ptI
QOb38ShavMI/SW2cV65rSUBBTPGajWXTP3HHFUIPTUpAQn0vkaDz1j+wvFOG
ch9LQIxqg4MBN7s/PvZRF7HtS0AG4wBw9XndP4zGB9t8zUxAPCFfBXcAlz/w
MYL4Sp5NQDGuSMI6Ht0/FDS0SKaATkDwV0g3LK2/P0/RqvIDVE9AoKagn9B2
0z9t2bB0nhFQQMMGQcWETNc/khVoiQGCUEAYdUMpn8mxP0KfAcvl6lBAHs44
jOeI4D9S9PalkFxRQEqLBYauX5O/imtMJynMUUBR2C4Di0DgP00whNVCNFJA
LeDcyFqJvj9wwBcdI6VSQD1lYcSzltI/H56NkYQOU0DFCB6ERgrZP/WdY6zT
dVNAnnptuROTpz8raZVg6eVTQLRvUFFqPOE/7IGpQYBOVEDF5C0dugSWvw1m
Gbzdv1RAaye1uynF3z9WbOncKC9VQIvt9Wc4ZMM/KsCbKvWWVUBz7RDS0QnS
P17fqRGIB1ZAgUl7Af9U2D8dTJolnHBWQC1oon2Pya8/PITm0nbiVkD1Dekh
bLXdP4PekiY/UldASPma6WWItT9VhiGniLpXQEIJ0ahGK9s/h/kLwZgrWEA9
laAF+WfLP0W62AcqlVhAsq1P8ep10T8+GeT4//9YQJuzqq8si9U/pda9FA==

                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$14933#1"]& ]}}, {}}, {
                  DisplayFunction -> Identity, 
                   Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                   FrameTicks -> {{{}, {}}, {{}, {}}}, 
                   GridLines -> {None, None}, DisplayFunction -> Identity, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                   All, DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                   PlotRange -> {{0., 100.}, {-0.021502407103501726`, 
                    0.538624914948278}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD6AUzJGtb+WPkXRMWw0
Ffo/7DENuGE83z8FZS60Bi4LQAzsyVgd68U/aslGZ8wwFECxEfNI9tfQP8qC
eNpvqRpA/3EfUHuE2T8VebNxPtcgQCGz/Cqzfq8/IB09Xc4dJEAeWlqIiAfg
PykcpROTqidAztOF1N35rT9wLA79xCYrQH8jVyAC/dk/EKmJTQBnLkBuN3l+
e+XJP1jAcTS49jBAx09WygXv0D9V4qf19JsyQFYw6JF9DdY/8YxeUOg4NEA4
0iej7T+9PwxlhBD2+DVAVuj0gLaJ2D9VczOECJs3QKNMuuTWFb4/Hq9RXTVg
OUAiq3XgvdbVP4Vz8M8YHTtAWiSSfnBN0D8Zbhj2ALw8QICR5N+7k9E/LZav
gQN+PkDLE2xojT3RPzj6Z2AFEUBAV3QQrZ2Wzj8ZwK8ylvRAQPirVMicv8s/
Scq3UQLUQUDTB0UnWbDUP49vhMpwpEJAgCB5V5rAzT+Vqwh2bIZDQKWh+9Yw
y9I/soJRe2pZREB9WflBaj7UPx6eWs1DKEVAvtHnPcL7yT9KUBtSqghGQAYd
ClVzENk/jZ2gMBPaRkAFEKfQScLAP4+B3UEJvUdA6GrD6Mgk2j/hqdqf2ptI
QOb38ShavMI/SW2cV65rSUBBTPGajWXTP3HHFUIPTUpAQn0vkaDz1j+wvFOG
ch9LQIxqg4MBN7s/PvZRF7HtS0AG4wBw9XndP4zGB9t8zUxAPCFfBXcAlz/w
MYL4Sp5NQDGuSMI6Ht0/FDS0SKaATkDwV0g3LK2/P0/RqvIDVE9AoKagn9B2
0z9t2bB0nhFQQMMGQcWETNc/khVoiQGCUEAYdUMpn8mxP0KfAcvl6lBAHs44
jOeI4D9S9PalkFxRQEqLBYauX5O/imtMJynMUUBR2C4Di0DgP00whNVCNFJA
LeDcyFqJvj9wwBcdI6VSQD1lYcSzltI/H56NkYQOU0DFCB6ERgrZP/WdY6zT
dVNAnnptuROTpz8raZVg6eVTQLRvUFFqPOE/7IGpQYBOVEDF5C0dugSWvw1m
Gbzdv1RAaye1uynF3z9WbOncKC9VQIvt9Wc4ZMM/KsCbKvWWVUBz7RDS0QnS
P17fqRGIB1ZAgUl7Af9U2D8dTJolnHBWQC1oon2Pya8/PITm0nbiVkD1Dekh
bLXdP4PekiY/UldASPma6WWItT9VhiGniLpXQEIJ0ahGK9s/h/kLwZgrWEA9
laAF+WfLP0W62AcqlVhAsq1P8ep10T8+GeT4//9YQJuzqq8si9U/pda9FA==

                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$14933#1"]& ]}}, {}}, {
                  DisplayFunction -> Identity, 
                   Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                   FrameTicks -> {{{}, {}}, {{}, {}}}, 
                   GridLines -> {None, None}, DisplayFunction -> Identity, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                   All, DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                   PlotRange -> {{0., 100.}, {-0.021502407103501726`, 
                    0.538624914948278}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       InterpolatingFunction[{{0., 100.}}, {
        5, 7, 2, {1571}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
         False}, CompressedData["
1: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
wgv/A1nJp9A=
        "], {Developer`PackedArrayForm, CompressedData["
1:eJwl2FMMYMmiQNHGnbZt23ZP27Zt27Zt27Zt27ZtvzWvK1lJ/dTPOdkpxK/f
pnzrgAECBEgUJMD/j8D8Nw1OKMISgchEIyZxiP/fGpKSgtSkIyNZyE4u8pCf
QhSlBKUpR0WqUJ1a1KUBjWlGS9rQnk50pQe96cdAhjCcUYxlApOZxkzmMJ9F
LGUFq1nHRrawnV3s5QCHOcZJznCeS1zlBre5x0Oe8JxXvOUDn/nGT/4QyAf+
h2CEJAzhiURUYhCbeCQkCclJRVoykJls5ORf8lGQIhSnFGWpQGWqUZM61KcR
TWnBfz+8HR3pQnd60ZcBDGYYIxnDeCYxlRnMZh4LWcJyVrGWDWxmGzvZw34O
cZQTnOYcF7nCdW5xlwc85hkvecN7PvGVH/wmYKAAAf5HUEIQmnBEJArRiUVc
EpCYZKQkDenJRFZykJu8FKAwxShJGcpTiarUoDb1aEgTmtOKtnSgM93oSR/6
M4ihjGA045jIFKYzi7ksYDHLWMka1rOJrexgN/s4yBGOc4qzXOAy17jJHe7z
iKe84DXv+MgXvvMr0N/4AxOE4IQiLBGITDRiEof4JCIpKUhNOjKShezkIg/5
KURRSlCaclSkCtWpRV0a0JhmtKQN7elEV3rQm34MZAjDGcVYJjCZacxkDvNZ
xFJWsJp1bGQL29nFXg5wmGOc5AznucRVbnCbezzkCc95xVs+8Jlv/OQPgf6n
f4IRkjCEJxJRiUFs4pGQJCQnFWnJQGaykZN/yUdBilCcUpSlApWpRk3qUJ9G
NKUFrWlHR7rQnV70ZQCDGcZIxjCeSUxlBrOZx0KWsJxVrGUDm9nGTvawn0Mc
5QSnOcdFrnCdW9zlAY95xkve8J5PfOUHvwn4j/4JSghCE46IRCE6sYhLAhKT
jJSkIT2ZyEoOcpOXAhSmGCUpQ3kqUZUa1KYeDWlCc1rRlg50phs96UN/BjGU
EYxmHBOZwnRmMZcFLGYZK1nDejaxlR3sZh8HOcJxTnGWC1zmGje5w30e8ZQX
vOYdH/nCd37983fjD0wQghOKsEQgMtGISRziB/l7ZkhKClKTjoxkITu5yEN+
ClGUEpSmHBWpQnVqUZcGNKYZLWlDezrRlR70ph8DGcJwRjGWCUxmGjOZw3wW
sZQVrGYdG9nCdnaxlwMc5hgnOcN5LnGVG9zmHg95wnNe8ZYPfOYbP/lDoKD6
JxghCUN4IhGVGMQmHglJQnJSkZYMZCYbOfmXfBSkCMUpRVkqUJlq1KQO9WlE
U1rQmnZ0pAvd6UVfBjCYYYxkDOOZxFRmMJt5LGQJy1nFWjawmW3sZA/7OcRR
TnCac1zkCte5xV0e8JhnvOQN7/nEV37wm4DB9E9QQhCacEQkCtGJRVwSkJhk
pCQN6clEVnKQm7wUoDDFKEkZylOJqtSgNvVoSBOa04q2dKAz3ehJH/oziKGM
YDTjmMgUpjOLuSxgMctYyRrWs4mt7GA3+zjIEY5zirNc4DLXuMkd7vOIp7zg
Ne/4yBe+8yvY30N/YIIQnFCEJQKRiUZM4hCfRCQlBalJR0aykJ1c5CE/hShK
CUpTjopUoTq1qEsDGtOMlrShPZ3oSg9604+BDGE4oxjLBCYzjZnMYT6LWMoK
VrOOjWxhO7vYywEOc4yTnOE8l7jKDW5zj4c84TmveMsHPvONn/whUAj9E4yQ
hCE8kYhKDGITj4QkITmpSEsGMpONnPxLPgpShOKUoiwVqEw1alKH+jSiKS1o
TTs60oXu9KIvAxjMMEYyhvFMYiozmM08FrKE5axiLRvYzDZ2sof9HOIoJzjN
OS5yhevc4i4PeMwzXvKG93ziKz/4TcCQ+icoIQhNOCIShejEIi4JSEwyUpKG
9GQiKznITV4KUJhilKQM5alEVWpQm3o0pAnNaUVbOtCZbvSkD/0ZxFBGMJpx
TGQK05nFXBawmGWsZA3r2cRWdrCbfRzkCMc5xVkucJlr3OQO93nEU17wmnd8
5Avf+RXy74U/MEEITijCEoHIRCMmcYhPIpKSgtSkIyNZyE4u8pCfQhSlBKUp
R0WqUJ1a1KUBjWlGS9rQnk50pQe96cdAhjCcUYxlApOZxkzmMJ9FLGUFq1nH
RrawnV3s5QCHOcZJznCeS1zlBre5x0Oe8JxXvOUDn/nGT/4QKLT+CUZIwhCe
SEQlBrGJR0KSkJxUpCUDmclGTv4lHwUpQnFKUZYKVKYaNalDfRrRlBa0ph0d
6UJ3etGXAQxmGCMZw3gmMZUZzGYeC1nCclaxlg1sZhs72cN+DnGUE5zmHBe5
wnVucZcHPOYZL3nDez7xlR/8JmAY/ROUEIQmHBGJQnRiEZcEJCYZKUlDejKR
lRzkJi8FKEwxSlKG8lSiKjWoTT0a0oTmtKItHehMN3rSh/4MYigjGM04JjKF
6cxiLgtYzDJWsob1bGIrO9jNPg5yhOOc4iwXuMw1bnKH+zziKS94zTs+8oXv
/Arz97EvMEEITijCEoHIRCMmcYhPIpKSgtSkIyNZyE4u8pCfQhSlBKUpR0Wq
UJ1a1KUBjWlGS9rQnk50pQe96cdAhjCcUYxlApOZxkzmMJ9FLGUFq1nHRraw
nV3s5QCHOcZJznCeS1zlBre5x0Oe8JxXvOUDn/nGT/4QKJz+CUZIwhCeSEQl
BrGJR0KSkJxUpCUDmclGTv4lHwUpQnFKUZYKVKYaNalDfRrRlBa0ph0d6UJ3
etGXAQxmGCMZw3gmMZUZzGYeC1nCclaxlg1sZhs72cN+DnGUE5zmHBe5wnVu
cZcHPOYZL3nDez7xlR/8JmB4/ROUEIQmHBGJQnRiEZcEJCYZKUlDejKRlRzk
Ji8FKEwxSlKG8lSiKjWoTT0a0oTmtKItHehMN3rSh/4MYigjGM04JjKF6cxi
LgtYzDJWsob1bGIrO9jNPg5yhOOc4iwXuMw1bnKH+zziKS94zTs+8oXv/Ar/
96E/MEEITijCEoHIRCMmcYhPIpKSgtSkIyNZyE4u8pCfQhSlBKUpR0WqUJ1a
1KUBjWnG/wGPBzvv
         "], CompressedData["
1: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
         "]}, {Automatic}],
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "[", "t", "]"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.6507989395300083`*^9, 3.650798949673023*^9}, 
   3.650798985234769*^9, 3.650799104698144*^9, 3.840213127973689*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"fa9e4521-b1d9-431f-b489-a1b725a64c13"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Create", " ", "a", " ", "nice", " ", "graphic", " ", "for", " ", "seeing",
     " ", "the", " ", "results"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"masswithspring", "[", "tt_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"local\[Theta]", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]", "[", "t", "]"}], "/.", 
             "numericalElasticSolution"}], ")"}], "/.", 
           RowBox[{"{", 
            RowBox[{"t", "\[Rule]", "tt"}], "}"}]}], ")"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"localx", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "[", "t", "]"}], "/.", "numericalElasticSolution"}],
             ")"}], "/.", 
           RowBox[{"{", 
            RowBox[{"t", "\[Rule]", "tt"}], "}"}]}], ")"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", 
          RowBox[{".05", "/", 
           RowBox[{"(", 
            RowBox[{"1", "+", "localx"}], ")"}]}], "]"}], ",", "Black", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "+", "localx"}], ")"}], "*", 
               RowBox[{"Sin", "[", "local\[Theta]", "]"}]}], ",", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{"1", "+", "localx"}], ")"}]}], "*", 
               RowBox[{"Cos", "[", "local\[Theta]", "]"}]}]}], "}"}]}], "}"}],
           "]"}], ",", "Red", ",", 
         RowBox[{"Disk", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", "localx"}], ")"}], "*", 
              RowBox[{"Sin", "[", "local\[Theta]", "]"}]}], ",", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"1", "+", "localx"}], ")"}]}], "*", 
              RowBox[{"Cos", "[", "local\[Theta]", "]"}]}]}], "}"}], ",", 
           "0.1"}], "]"}]}], "}"}], ",", 
       RowBox[{"Axes", "\[Rule]", "True"}], ",", 
       RowBox[{"PlotRange", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "2"}]}], "}"}]}], "}"}]}]}], "]"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6507988639358873`*^9, 3.650798865781747*^9}, {
  3.650799108699848*^9, 3.650799122525157*^9}, {3.650800016927663*^9, 
  3.650800096476563*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"644c3b43-a1b4-4255-816c-97fdb22115e7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Show", " ", "the", " ", "results", " ", "over", " ", "time"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Animate", "[", 
   RowBox[{
    RowBox[{"masswithspring", "[", "tt", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"tt", ",", "0", ",", "100"}], "}"}], ",", 
    RowBox[{"AnimationRate", "\[Rule]", "1"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.650799125362191*^9, 3.650799132689247*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"b16d08f1-59d2-4626-a825-4cb0332241b8"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`tt$$ = 39.85153007507324, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`tt$$], 0, 100}}, Typeset`size$$ = {
    360., {176., 180.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`tt$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> $CellContext`masswithspring[$CellContext`tt$$], 
      "Specifications" :> {{$CellContext`tt$$, 0, 100, AnimationRate -> 1, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{405., {212., 218.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.650798954623803*^9, 3.650798988627837*^9, 
  3.650808611379237*^9, 3.840213128050333*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"87595b8b-345d-46a3-b812-35b4fde85a00"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Plot", " ", "the", " ", "path", " ", "that", " ", "the", " ", "mass", " ",
     "takes", " ", "over", " ", "time"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"local\[Theta]", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]", "[", "t", "]"}], "/.", 
              "numericalElasticSolution"}], ")"}], "/.", 
            RowBox[{"{", 
             RowBox[{"t", "\[Rule]", "tt"}], "}"}]}], ")"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{"localx", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"x", "[", "t", "]"}], "/.", 
              "numericalElasticSolution"}], ")"}], "/.", 
            RowBox[{"{", 
             RowBox[{"t", "\[Rule]", "tt"}], "}"}]}], ")"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", "localx"}], ")"}], "*", 
         RowBox[{"Sin", "[", "local\[Theta]", "]"}]}], ",", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"1", "+", "localx"}], ")"}]}], "*", 
         RowBox[{"Cos", "[", "local\[Theta]", "]"}]}]}], "}"}]}], "]"}], ",", 
    
    RowBox[{"{", 
     RowBox[{"tt", ",", "0", ",", "50"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.650798970367526*^9, 3.650798971461369*^9}, {
  3.650799136151606*^9, 3.650799149432345*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"b7198728-92e3-4039-b15a-87a4e611eca7"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
CAuX55vvX7SexF1iofQnYSz8PwVdalk=
       "]]},
     Annotation[#, "Charting`Private`Tag$15024#1"]& ]}, {}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, -1.5402478091317093`},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{-0.7803605769874457, 
   0.7790233497997158}, {-1.5402478091317093`, -0.8501385207082173}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.650798961294567*^9, 3.650798994342681*^9}, 
   3.840213128150169*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"1548ae8a-ebc7-4415-a806-e9ca667d81da"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Hamiltonian Example - Particle on a Cylinder with Central Force (Section 2)\
\>", "Section",
 CellChangeTimes->{{3.6508031605985527`*^9, 3.650803167750763*^9}, {
  3.650901268580378*^9, 3.6509012715613127`*^9}, {3.840212139208939*^9, 
  3.840212146120688*^9}},ExpressionUUID->"9ef7620d-c21b-4ba5-81cb-\
46244782f9c2"],

Cell["\<\
In recitation, we derived that the motion for a particle on a cylinder with a \
central force F=-kr is just harmonic in the z direction and moves with a \
constant angular momentum in the \[Theta] direction. Here we will plot that\
\>", "Text",
 CellChangeTimes->{{3.650803174749077*^9, 
  3.650803266911379*^9}},ExpressionUUID->"5b339a85-1613-4fa3-817e-\
17e49a4309df"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotCylindricalMotion", "[", 
    RowBox[{"\[Omega]_", ",", "thetav_", ",", "t_"}], "]"}], ":=", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"Graphics3D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Blue", ",", 
         RowBox[{"Opacity", "[", "0.2", "]"}], ",", 
         RowBox[{"Cylinder", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", "1"}], 
          "]"}], ",", "Red", ",", 
         RowBox[{"Opacity", "[", "1", "]"}], ",", 
         RowBox[{"Sphere", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"thetav", "*", "t"}], "]"}], ",", 
             RowBox[{"Sin", "[", 
              RowBox[{"thetav", "*", "t"}], "]"}], ",", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Omega]", "*", "t"}], "]"}]}], "}"}], ",", "0.1"}], 
          "]"}]}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1.2"}], ",", "1.2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1.2"}], ",", "1.2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1.2"}], ",", "1.2"}], "}"}]}], "}"}]}]}], "]"}], 
     ",", 
     RowBox[{"ParametricPlot3D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"thetav", "*", "tt"}], "]"}], ",", 
         RowBox[{"Sin", "[", 
          RowBox[{"thetav", "*", "tt"}], "]"}], ",", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Omega]", "*", "tt"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"tt", ",", "0", ",", "t"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", "Black", "}"}]}]}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6508032701339273`*^9, 3.6508033450835857`*^9}, {
  3.650803390465156*^9, 3.650803528326639*^9}, {3.650803568539527*^9, 
  3.650803590411539*^9}, {3.650803629856382*^9, 3.650803692723665*^9}, {
  3.650803802788354*^9, 3.650803866312583*^9}, {3.650808370833353*^9, 
  3.650808419116016*^9}, {3.6508084667230673`*^9, 3.650808478746169*^9}, {
  3.6508085615411863`*^9, 
  3.650808590860045*^9}},ExpressionUUID->"70dd1a1a-4549-49e2-b686-\
d3d76793b82a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Animate", "[", 
  RowBox[{
   RowBox[{"PlotCylindricalMotion", "[", 
    RowBox[{"Pi", ",", "1", ",", "t"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", 
   RowBox[{"AnimationRate", "\[Rule]", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.650803415991351*^9, 3.65080341994937*^9}, {
  3.6508037000118637`*^9, 3.650803715473741*^9}, {3.650803879766993*^9, 
  3.650803898061805*^9}, {3.6508082806861067`*^9, 3.6508083278766527`*^9}, {
  3.650808513888564*^9, 
  3.650808537605116*^9}},ExpressionUUID->"b138e268-3f17-4171-8691-\
1963ce49caf5"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 22.10606098175049, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 100}}, Typeset`size$$ = {277., {3., 10.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$18174$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$18174$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> $CellContext`PlotCylindricalMotion[Pi, 1, $CellContext`t$$], 
      "Specifications" :> {{$CellContext`t$$, 0, 100, AnimationRate -> 1, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{324., {43., 49.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}],
   Deployed->True],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.65080342043267*^9, 3.650803460839657*^9}, {
   3.650803669036255*^9, 3.6508037159996777`*^9}, {3.650803818656152*^9, 
   3.650803898435506*^9}, {3.650808259457487*^9, 3.650808328283354*^9}, 
   3.650808413741406*^9, 3.650808482922864*^9, {3.6508085151247396`*^9, 
   3.65080853819979*^9}, {3.650808579478513*^9, 
   3.6508085928005133`*^9}},ExpressionUUID->"617e6428-7f96-49ba-84fa-\
b56f9f57108c"]
}, Open  ]]
}, Closed]]
},
WindowSize->{1260, 847},
WindowMargins->{{Automatic, -196}, {Automatic, 0}},
FrontEndVersion->"12.3 for Mac OS X ARM (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"27379e23-c12f-4c8a-96c4-0cf62c566cba"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 1178, 20, 173, "Text",ExpressionUUID->"f22ea86c-2878-4849-91b2-ca998070d436"],
Cell[CellGroupData[{
Cell[1761, 44, 150, 3, 67, "Section",ExpressionUUID->"d527704e-8468-4598-80c6-427f14a4c06b"],
Cell[CellGroupData[{
Cell[1936, 51, 153, 3, 54, "Subsection",ExpressionUUID->"f152e187-5af4-4e4a-bb27-b32412fab01d"],
Cell[2092, 56, 314, 7, 35, "Text",ExpressionUUID->"ac557c43-4016-4560-abbd-f5c683b0b716"],
Cell[2409, 65, 249, 5, 52, "Input",ExpressionUUID->"df4b9f26-7722-4340-913b-6a4216c980fb"],
Cell[2661, 72, 277, 6, 35, "Text",ExpressionUUID->"8cce05ea-d1e6-416f-a06c-3e32ef952a36"],
Cell[2941, 80, 434, 13, 30, "Input",ExpressionUUID->"f762e8c5-807a-4411-95eb-8170fab2cf3d"],
Cell[CellGroupData[{
Cell[3400, 97, 162, 3, 30, "Input",ExpressionUUID->"c230b9b2-3957-4aa1-b939-7c322a65b282"],
Cell[3565, 102, 186, 6, 54, "Output",ExpressionUUID->"dc525136-b7c9-48e8-bbc0-1d800e9038d0"]
}, Open  ]],
Cell[3766, 111, 272, 6, 35, "Text",ExpressionUUID->"0864e007-c160-4c5a-bc7a-28fcb90882c1"],
Cell[CellGroupData[{
Cell[4063, 121, 313, 8, 30, "Input",ExpressionUUID->"19f1406f-bf93-4300-9be3-37780ab07465"],
Cell[4379, 131, 259, 7, 34, "Output",ExpressionUUID->"5cda44b2-b7c3-4f02-a436-7890031fc238"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4675, 143, 207, 5, 30, "Input",ExpressionUUID->"1bd8fcbb-2f3f-42bc-8a6d-49f8f6a0d705"],
Cell[4885, 150, 130, 3, 34, "Output",ExpressionUUID->"4a9f1a1d-b3d6-4739-b38d-3f0c4a3919ee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5052, 158, 232, 6, 30, "Input",ExpressionUUID->"dc9ddc1b-d893-42d9-a0f7-5c25a1aaede7"],
Cell[5287, 166, 128, 2, 34, "Output",ExpressionUUID->"18ab726b-5490-408b-8327-f81d14321961"]
}, Open  ]],
Cell[5430, 171, 195, 3, 35, "Text",ExpressionUUID->"f23a80ac-c643-4583-acde-2f782edb5f25"],
Cell[CellGroupData[{
Cell[5650, 178, 309, 9, 30, "Input",ExpressionUUID->"784d3d2a-1412-487e-8fa5-0a6223898735"],
Cell[5962, 189, 239, 5, 34, "Output",ExpressionUUID->"28790445-00b6-47bc-8543-14f0623be9d0"]
}, Open  ]],
Cell[6216, 197, 243, 4, 35, "Text",ExpressionUUID->"e103542c-f53a-403d-bac4-3d959c60a94a"],
Cell[CellGroupData[{
Cell[6484, 205, 379, 12, 30, "Input",ExpressionUUID->"79a24f8e-246c-4db0-b7da-6081f18205a3"],
Cell[6866, 219, 779, 27, 59, "Output",ExpressionUUID->"5a0d24de-d720-48f1-a0b1-d5df50c38d39"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7682, 251, 566, 15, 30, "Input",ExpressionUUID->"4be8063f-61a6-47c6-b29e-8d88bd726b1c"],
Cell[8251, 268, 294, 8, 54, "Output",ExpressionUUID->"4df1b749-e6e2-40c3-b41d-04303dd4124e"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[8594, 282, 158, 3, 38, "Subsection",ExpressionUUID->"41d2a685-4990-457b-9c5c-1ba865e7438d"],
Cell[8755, 287, 393, 7, 58, "Text",ExpressionUUID->"4461c4dc-193b-4626-9d8b-78089f943511"],
Cell[9151, 296, 688, 22, 73, "Input",ExpressionUUID->"d204141d-ecf5-4d61-a5da-425c06947547"],
Cell[CellGroupData[{
Cell[9864, 322, 180, 4, 30, "Input",ExpressionUUID->"c01373d3-9464-48ea-aa53-4fd0bfcc2c02"],
Cell[10047, 328, 132, 3, 34, "Output",ExpressionUUID->"d0bcfac5-82b2-4155-900d-e64453216f37"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10216, 336, 205, 5, 30, "Input",ExpressionUUID->"9e61a28a-261f-4c16-b444-60545d026fb5"],
Cell[10424, 343, 183, 5, 34, "Output",ExpressionUUID->"a18a54a0-34d7-4f09-8599-75e531530dbe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10644, 353, 207, 5, 30, "Input",ExpressionUUID->"645e1abd-eec4-47f9-a480-ccc8cb1c3632"],
Cell[10854, 360, 177, 4, 34, "Output",ExpressionUUID->"89fd6977-a08a-4daa-981c-89c1430bc59d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11068, 369, 227, 6, 30, "Input",ExpressionUUID->"a3420fb6-717c-435e-a87a-3054028d2858"],
Cell[11298, 377, 128, 2, 34, "Output",ExpressionUUID->"d5778480-2f69-4b37-8d6f-29a7ec2b1191"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[11475, 385, 159, 3, 38, "Subsection",ExpressionUUID->"ebd86c15-10df-43d1-9f8d-67cf8b6103c8"],
Cell[11637, 390, 325, 7, 30, "Text",ExpressionUUID->"7957cc6e-71d8-4af8-b773-c35a739826fc"],
Cell[CellGroupData[{
Cell[11987, 401, 233, 6, 28, "Input",ExpressionUUID->"76a84f7a-00da-4593-a264-622ba64f1b12"],
Cell[12223, 409, 152, 4, 28, "Output",ExpressionUUID->"75ac27d0-d3df-4125-8a72-aeb910fd0eef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12412, 418, 198, 5, 28, "Input",ExpressionUUID->"93a490ad-5e72-4f43-bd70-7346c6f07ba3"],
Cell[12613, 425, 149, 3, 28, "Output",ExpressionUUID->"b76724a0-6ac5-4c3c-8c3d-7e47da0d0019"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12799, 433, 285, 8, 28, "Input",ExpressionUUID->"7a3f4435-7917-43cd-8707-4b37b2d5e339"],
Cell[13087, 443, 220, 7, 32, "Output",ExpressionUUID->"92b527ea-335c-4d68-acea-09fb11d64b61"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13344, 455, 247, 7, 28, "Input",ExpressionUUID->"3b720ff6-a7ac-4fa2-8476-e090a5453597"],
Cell[13594, 464, 287, 8, 30, "Output",ExpressionUUID->"6c204249-b319-4400-8fb8-03d49f1e0c3b"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[13930, 478, 157, 3, 38, "Subsection",ExpressionUUID->"b893d875-043f-4d4f-ba47-184e24150a89"],
Cell[14090, 483, 315, 6, 30, "Text",ExpressionUUID->"0b25dc25-7107-4b72-b741-2b2d7621c858"],
Cell[CellGroupData[{
Cell[14430, 493, 490, 12, 28, "Input",ExpressionUUID->"79c5d2b5-11fa-4acd-bd72-3e964054c385"],
Cell[14923, 507, 198, 6, 50, "Output",ExpressionUUID->"722ab79a-b50a-444f-a5cf-377e503873d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15158, 518, 351, 9, 28, "Input",ExpressionUUID->"d3a1c602-324f-40ea-b73d-4461de04b952"],
Cell[15512, 529, 310, 9, 50, "Output",ExpressionUUID->"bc03a619-984c-40bc-a777-efe1509f3663"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15859, 543, 441, 12, 28, "Input",ExpressionUUID->"04bb4fe7-0d33-436c-96f5-729d40d14d31"],
Cell[16303, 557, 2522, 71, 83, "Output",ExpressionUUID->"7493f3d9-a371-4bea-b3c0-a352710d5548"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18862, 633, 374, 11, 28, "Input",ExpressionUUID->"f0d50c23-575d-4e46-ba25-b97c0642f114"],
Cell[19239, 646, 146, 3, 28, "Output",ExpressionUUID->"b61f7897-ac7e-4099-b0ec-4fa79e7bc99d"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[19434, 655, 158, 3, 38, "Subsection",ExpressionUUID->"ef6a1db6-9af2-419e-92e5-9cece92efab5"],
Cell[19595, 660, 281, 6, 30, "Text",ExpressionUUID->"4213ca7b-d96d-4b03-9183-4bf624931390"],
Cell[CellGroupData[{
Cell[19901, 670, 351, 9, 28, "Input",ExpressionUUID->"cb949297-7eb6-433a-8552-28e25e779631"],
Cell[20255, 681, 1117, 39, 48, "Output",ExpressionUUID->"2ba1b20b-8cf7-423a-bd1c-3bf5cd5635b8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21409, 725, 321, 9, 28, "Input",ExpressionUUID->"2ec0ec2a-d55d-475b-a0c2-3a2d2859ed10"],
Cell[21733, 736, 1652, 49, 48, "Output",ExpressionUUID->"f52fe58d-fdd9-4d27-9a5c-62c2398ba662"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[23434, 791, 155, 3, 38, "Subsection",ExpressionUUID->"b96092a6-2f44-4ef7-8aab-0d4665ab4385"],
Cell[23592, 796, 374, 9, 30, "Text",ExpressionUUID->"ff639a3f-aecb-4dce-8cc0-071d2b9fa7e0"],
Cell[CellGroupData[{
Cell[23991, 809, 464, 13, 28, "Input",ExpressionUUID->"b7c29189-ac75-4bdd-b0af-91d53f5e352b"],
Cell[24458, 824, 386, 11, 28, "Output",ExpressionUUID->"a4e9c106-97fc-4141-a330-ce8f42f3436c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24881, 840, 191, 4, 28, "Input",ExpressionUUID->"c8eab17e-ba78-4bcc-9f60-3ecb96bc5caf"],
Cell[25075, 846, 737, 20, 74, "Output",ExpressionUUID->"079aa852-ac10-49cf-9642-51c64f8eab77"]
}, Open  ]],
Cell[25827, 869, 195, 3, 30, "Text",ExpressionUUID->"9267f096-bab4-48f4-8f1e-15aa0246e4de"],
Cell[CellGroupData[{
Cell[26047, 876, 497, 12, 28, "Input",ExpressionUUID->"e0fa48a3-9fd1-4d1c-90da-a804374c4347"],
Cell[26547, 890, 433, 12, 28, "Output",ExpressionUUID->"a9be73a9-7c90-4f4f-9653-d0d226e41535"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27017, 907, 191, 4, 28, "Input",ExpressionUUID->"64f15726-dc1c-4169-aaa7-091f6574b64c"],
Cell[27211, 913, 789, 22, 74, "Output",ExpressionUUID->"b05d6e90-b8a9-4c4d-a388-7165d03f4781"]
}, Open  ]],
Cell[28015, 938, 283, 8, 30, "Text",ExpressionUUID->"053e7adc-351a-4954-a3db-1b4b15f92dc5"],
Cell[CellGroupData[{
Cell[28323, 950, 328, 8, 28, "Input",ExpressionUUID->"d26e23b2-22ab-4a19-8992-c67038136ba6"],
Cell[28654, 960, 383, 11, 28, "Output",ExpressionUUID->"0729e630-8ae6-4da2-bd28-f012d9f9647a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29074, 976, 371, 8, 28, "Input",ExpressionUUID->"9c9587bf-197c-4aa3-a95c-13925e4c70ac"],
Cell[29448, 986, 198, 4, 28, "Output",ExpressionUUID->"7e3c0ea7-6f67-4dee-9076-9db945250237"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29683, 995, 318, 8, 28, "Input",ExpressionUUID->"ea8ea0d3-0570-4389-8020-9f2128b00abf"],
Cell[30004, 1005, 131, 3, 28, "Output",ExpressionUUID->"82c3f970-597a-456e-9d7a-8ec3d21a3dab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30172, 1013, 352, 9, 28, "Input",ExpressionUUID->"f1ff002c-4f1e-42d2-abb9-b3b4553e45c6"],
Cell[30527, 1024, 365, 11, 28, "Output",ExpressionUUID->"98d3beac-d932-499c-9ad9-abf4a800c032"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30929, 1040, 280, 7, 28, "Input",ExpressionUUID->"3b795f7a-27ca-4deb-a3d2-39c6dbbbbcd0"],
Cell[31212, 1049, 228, 7, 37, "Output",ExpressionUUID->"abdcc21b-8707-4b46-829c-0e7dfde0ef26"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31477, 1061, 285, 7, 28, "Input",ExpressionUUID->"aa34f6d6-beac-431d-a006-01799e838a18"],
Cell[31765, 1070, 1427, 52, 63, "Output",ExpressionUUID->"05493af2-1667-49d8-b36c-51c2d5ebc17e"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[33253, 1129, 162, 3, 53, "Section",ExpressionUUID->"8042bb21-b288-46ee-b9b4-000593fb0ff2"],
Cell[CellGroupData[{
Cell[33440, 1136, 169, 3, 54, "Subsection",ExpressionUUID->"0d8adf19-409f-4b6a-8614-7feedcffaea9"],
Cell[33612, 1141, 330, 7, 35, "Text",ExpressionUUID->"ea69cf76-6a84-4a7c-9e40-0ea957a90771"],
Cell[33945, 1150, 501, 9, 35, "Text",ExpressionUUID->"b6e177f2-f8cd-40f4-8acd-facf5820be54"],
Cell[CellGroupData[{
Cell[34471, 1163, 471, 12, 30, "Input",ExpressionUUID->"3e03a026-3485-41ec-a863-26f1e04e75c5"],
Cell[34945, 1177, 808, 26, 50, "Output",ExpressionUUID->"906eee08-6936-4dee-b948-4115e1e3f53a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35790, 1208, 196, 4, 30, "Input",ExpressionUUID->"83365881-fb3d-44ba-80a2-3f5691e56604"],
Cell[35989, 1214, 643, 23, 50, "Output",ExpressionUUID->"17fd318c-66c6-414f-963b-b8ddae270011"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36669, 1242, 244, 6, 30, "Input",ExpressionUUID->"0d184e17-08c8-47e0-8808-c3a82ce47496"],
Cell[36916, 1250, 357, 12, 50, "Output",ExpressionUUID->"7f539b92-df0d-4b25-a9e8-a8be15b93403"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37310, 1267, 555, 17, 30, "Input",ExpressionUUID->"0f5ccc2c-06bf-4820-ac4e-71f52b2388c8"],
Cell[37868, 1286, 532, 17, 51, "Output",ExpressionUUID->"a90a8730-e986-478f-af8a-b4e9905aed9a"]
}, Open  ]],
Cell[38415, 1306, 469, 9, 30, "Text",ExpressionUUID->"ea74122a-73c3-44ad-8bf8-98b001516916"],
Cell[CellGroupData[{
Cell[38909, 1319, 526, 13, 28, "Input",ExpressionUUID->"86b59a5a-4c85-4214-aeee-2b03e2f3cd15"],
Cell[39438, 1334, 411, 12, 28, "Output",ExpressionUUID->"72f0a324-dc44-4d43-8491-06d5b05d5aa8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39886, 1351, 220, 4, 28, "Input",ExpressionUUID->"3c22212a-1d2c-48fd-8bd1-d3d327f8faa0"],
Cell[40109, 1357, 304, 8, 28, "Output",ExpressionUUID->"13ad9f0f-b729-46f8-a954-79b81aab3082"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40450, 1370, 268, 6, 28, "Input",ExpressionUUID->"fee0db79-32bb-464c-ac44-aeaba6a1f419"],
Cell[40721, 1378, 210, 4, 28, "Output",ExpressionUUID->"c6ac9fb0-7896-4151-bfa4-7db6a245166d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40968, 1387, 576, 17, 28, "Input",ExpressionUUID->"1209f190-e426-4642-905f-8c2755db6fa9"],
Cell[41547, 1406, 465, 13, 28, "Output",ExpressionUUID->"694cc9c9-391a-40e7-8486-406300038611"]
}, Open  ]],
Cell[42027, 1422, 370, 7, 30, "Text",ExpressionUUID->"5dabd9b2-e6ae-4773-808f-f857663fc22f"],
Cell[CellGroupData[{
Cell[42422, 1433, 624, 15, 28, "Input",ExpressionUUID->"3356ddd2-3e4a-49eb-bca6-b1a5c118ba1a"],
Cell[43049, 1450, 289, 6, 28, "Output",ExpressionUUID->"5ecca0f8-ff0c-4cb0-a067-b58e594e263d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43375, 1461, 220, 4, 28, "Input",ExpressionUUID->"22aa8c0f-ec2d-4870-a954-440275f3494c"],
Cell[43598, 1467, 246, 5, 28, "Output",ExpressionUUID->"dbe5e072-35ec-4811-82f0-88190f06063e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43881, 1477, 268, 6, 28, "Input",ExpressionUUID->"dc3fa3e6-7aeb-482a-b74e-96a2fa99e39f"],
Cell[44152, 1485, 219, 4, 28, "Output",ExpressionUUID->"1c879035-0819-434a-a547-7bcba36d7f07"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44408, 1494, 736, 22, 28, "Input",ExpressionUUID->"d9c215f0-ff05-4073-9276-8e7a81125ccf"],
Cell[45147, 1518, 367, 9, 35, "Output",ExpressionUUID->"00587752-e91b-4cc1-a08c-19eeb420b3f6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[45563, 1533, 177, 3, 44, "Subsection",ExpressionUUID->"abdc053e-eb7f-4336-ad43-66a98a9abf01"],
Cell[45743, 1538, 541, 9, 49, "Text",ExpressionUUID->"d67a6bfb-e189-41a6-a966-ac4f5f9a6718"],
Cell[CellGroupData[{
Cell[46309, 1551, 447, 13, 28, "Input",ExpressionUUID->"ee329459-2cf8-4f52-b972-52dca167e6dc"],
Cell[46759, 1566, 595, 19, 47, "Output",ExpressionUUID->"6052ec91-8a4f-426d-a6eb-3c36d26733cd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47391, 1590, 659, 19, 28, "Input",ExpressionUUID->"9cc76317-6f4d-4c54-a880-7816ad7a9d44"],
Cell[48053, 1611, 648, 13, 24, "Message",ExpressionUUID->"6cb63e27-b1c2-4350-8d29-8488fc32e7ce"],
Cell[48704, 1626, 503, 15, 30, "Output",ExpressionUUID->"a3bd470e-23b9-427e-bdfc-b272c417105b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49244, 1646, 850, 25, 46, "Input",ExpressionUUID->"03100748-938c-410a-86ee-ea938580816a"],
Cell[50097, 1673, 11517, 226, 64, "Output",ExpressionUUID->"6880fc38-2e9d-4eb5-a9a6-44ac98507e13"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[61675, 1906, 153, 3, 53, "Section",ExpressionUUID->"ce90067e-543b-43e5-a958-2397ceb527d3"],
Cell[61831, 1911, 226, 5, 35, "Text",ExpressionUUID->"5c86cee0-6b40-4506-a803-6f15f18ebad1"],
Cell[CellGroupData[{
Cell[62082, 1920, 358, 10, 30, "Input",ExpressionUUID->"57a27b3c-321f-4737-afbf-3207c6a4298a"],
Cell[62443, 1932, 6341, 114, 248, "Output",ExpressionUUID->"381771d0-5081-409e-962c-bbd51fb84e00"]
}, Open  ]],
Cell[68799, 2049, 296, 7, 35, "Text",ExpressionUUID->"e52b8685-1fd7-4a07-93f7-5128b3fa29bd"],
Cell[CellGroupData[{
Cell[69120, 2060, 666, 19, 30, "Input",ExpressionUUID->"5a35a9b1-5288-4999-800b-598444e8da95"],
Cell[69789, 2081, 17205, 294, 245, "Output",ExpressionUUID->"cff06f36-afec-4b4f-9c5f-ce13492de90d"]
}, Open  ]],
Cell[87009, 2378, 379, 7, 30, "Text",ExpressionUUID->"57d6c874-8ab5-44e7-96a5-3419c6ad78a3"],
Cell[CellGroupData[{
Cell[87413, 2389, 1024, 31, 46, "Input",ExpressionUUID->"cb482825-f307-4a7c-a865-dfd1780d1ea1"],
Cell[88440, 2422, 24031, 408, 254, "Output",ExpressionUUID->"5ef0b4e4-36e6-4f9b-83d7-7df5c810b3c5"]
}, Open  ]],
Cell[112486, 2833, 267, 6, 30, "Text",ExpressionUUID->"8b11e040-a200-4a06-8be1-efb61084b1c6"],
Cell[CellGroupData[{
Cell[112778, 2843, 558, 16, 28, "Input",ExpressionUUID->"513d3471-416a-4144-8fde-da589d9ced65"],
Cell[113339, 2861, 330, 10, 28, "Output",ExpressionUUID->"8fe5c5ad-c668-4f32-a00d-5fd0722a7653"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113706, 2876, 693, 19, 28, "Input",ExpressionUUID->"7994a130-3eea-4ec3-a3fd-293ae526fb23"],
Cell[114402, 2897, 24815, 420, 249, "Output",ExpressionUUID->"ae9f1ca5-c7b9-4d73-9133-a745b0c10e26"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[139266, 3323, 295, 4, 53, "Section",ExpressionUUID->"a8035c6c-d708-4df2-9e19-097756672505"],
Cell[139564, 3329, 292, 6, 35, "Text",ExpressionUUID->"61fba680-76ce-43cd-9ccf-e8aea2a72df9"],
Cell[139859, 3337, 1270, 35, 52, "Input",ExpressionUUID->"cd9beb18-c2b6-4a17-ad3f-cf2cd2964120"],
Cell[CellGroupData[{
Cell[141154, 3376, 4959, 132, 220, "Input",ExpressionUUID->"88afac5f-77d6-4eb3-846e-34a002b2a0b2"],
Cell[146116, 3510, 800, 22, 34, "Output",ExpressionUUID->"edcc84f0-bd4b-4e06-bf4a-87af230c1065"],
Cell[146919, 3534, 947, 26, 34, "Output",ExpressionUUID->"d2824561-d275-43e1-a23c-7816bdde7ddb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147903, 3565, 1228, 30, 73, "Input",ExpressionUUID->"52a9070d-f3dd-4c66-81dc-2eb10e7f3844"],
Cell[149134, 3597, 703, 20, 34, "Output",ExpressionUUID->"4e064b27-6ac3-45bf-9b00-15f521542cf3"],
Cell[149840, 3619, 884, 25, 34, "Output",ExpressionUUID->"a9736d73-99e6-464e-8ebc-e4695176edfb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150761, 3649, 1436, 35, 52, "Input",ExpressionUUID->"9559cb1b-09fd-4dd1-a664-78a5edefd4b4"],
Cell[152200, 3686, 165276, 2811, 63, "Output",ExpressionUUID->"fa9e4521-b1d9-431f-b489-a1b725a64c13"]
}, Open  ]],
Cell[317491, 6500, 3158, 87, 115, "Input",ExpressionUUID->"644c3b43-a1b4-4255-816c-97fdb22115e7"],
Cell[CellGroupData[{
Cell[320674, 6591, 531, 12, 52, "Input",ExpressionUUID->"b16d08f1-59d2-4626-a825-4cb0332241b8"],
Cell[321208, 6605, 2016, 40, 449, "Output",ExpressionUUID->"87595b8b-345d-46a3-b812-35b4fde85a00"]
}, Open  ]],
Cell[CellGroupData[{
Cell[323261, 6650, 1839, 50, 94, "Input",ExpressionUUID->"b7198728-92e3-4039-b15a-87a4e611eca7"],
Cell[325103, 6702, 48758, 813, 208, "Output",ExpressionUUID->"1548ae8a-ebc7-4415-a806-e9ca667d81da"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[373910, 7521, 327, 6, 53, "Section",ExpressionUUID->"9ef7620d-c21b-4ba5-81cb-46244782f9c2"],
Cell[374240, 7529, 380, 7, 58, "Text",ExpressionUUID->"5b339a85-1613-4fa3-817e-17e49a4309df"],
Cell[374623, 7538, 2609, 68, 94, "Input",ExpressionUUID->"70dd1a1a-4549-49e2-b686-d3d76793b82a"],
Cell[CellGroupData[{
Cell[377257, 7610, 605, 13, 30, "Input",ExpressionUUID->"b138e268-3f17-4171-8691-1963ce49caf5"],
Cell[377865, 7625, 2302, 44, 111, "Output",ExpressionUUID->"617e6428-7f96-49ba-84fa-b56f9f57108c"]
}, Open  ]]
}, Closed]]
}
]
*)

