(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     38652,       1013]
NotebookOptionsPosition[     36508,        935]
NotebookOutlinePosition[     37195,        961]
CellTagsIndexPosition[     37152,        958]
WindowTitle->Method of Image Charges: Point Charge inside a Planar Capacitor \
- Source
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Method of Image Charges: Point Charge inside a Planar Capacitor\
\>", "Section",
 CellFrame->{{0, 0}, {0, 0}},
 ShowCellBracket->False,
 FontColor->RGBColor[0.597406, 0, 0.0527047]],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
FP/69esnAAAAAAAAAAAAwM74B4thROM=
   "], {{0, 0}, {1800, 25}}, {0, 255},
   ColorFunction->RGBColor],
  ImageSize->{1800, 25},
  PlotRange->{{0, 1800}, {0, 25}}]], "Section",
 CellFrame->{{0, 0}, {0, 0}},
 ShowCellBracket->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"mirror", "[", 
   RowBox[{"charges_", ",", " ", 
    RowBox[{"p_", "?", "AtomQ"}]}], "]"}], ":=", 
  RowBox[{"Replace", "[", 
   RowBox[{"charges", ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"q_", ",", "x_", ",", " ", "y_"}], "}"}], "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "q"}], ",", " ", "x", ",", " ", 
       RowBox[{
        RowBox[{"2", " ", "p"}], "-", "y"}]}], "}"}]}], ",", " ", 
    RowBox[{"{", "1", "}"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.450378961914444*^9, 3.45037896907281*^9}, {
  3.4503790784575453`*^9, 3.4503791684426937`*^9}, {3.450379347409585*^9, 
  3.450379412451171*^9}, {3.450379726202087*^9, 3.4503797283053913`*^9}, {
  3.450380056992168*^9, 3.450380057256343*^9}, {3.450380567352146*^9, 
  3.4503805768181543`*^9}},
 CellID->1101881562],

Cell[BoxData[
 RowBox[{
  RowBox[{"mirror", "[", 
   RowBox[{"charges_", ",", " ", 
    RowBox[{"{", 
     RowBox[{"p1_", ",", " ", "p2_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"mirror", "[", 
     RowBox[{
      RowBox[{"charges", "\[LeftDoubleBracket]", 
       RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], ",", " ", "p1"}], "]"}],
     ",", " ", 
    RowBox[{"mirror", "[", 
     RowBox[{
      RowBox[{
      "charges", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
      " ", "p2"}], "]"}]}], "}"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.450379459587438*^9, 3.450379465533874*^9}, {
  3.450379739427512*^9, 3.450379782892947*^9}, {3.450379854236721*^9, 
  3.450379863513504*^9}, {3.450379913296307*^9, 3.450379922340927*^9}, {
  3.450379973180369*^9, 3.450379983480554*^9}, {3.450380193645686*^9, 
  3.450380209862639*^9}, {3.4504153687555447`*^9, 3.450415376159699*^9}, {
  3.450415576314206*^9, 3.450415614413642*^9}, {3.4504156691798267`*^9, 
  3.450415728915206*^9}, {3.450415861089794*^9, 3.450415861439885*^9}},
 CellID->139026514],

Cell[BoxData[
 RowBox[{
  RowBox[{"mirrorN", "[", 
   RowBox[{"charges_", ",", " ", "p_", ",", " ", "n_"}], "]"}], ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"NestList", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"mirror", "[", 
        RowBox[{"#", ",", " ", "p"}], "]"}], "&"}], ",", " ", "charges", ",", 
      " ", "n"}], "]"}], ",", " ", "2"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4503803414858627`*^9, 3.450380395426099*^9}, {
  3.450416037872967*^9, 3.450416037952909*^9}},
 CellID->2007989349],

Cell[BoxData[
 RowBox[{
  RowBox[{"rmin", "=", "0.1"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.450380758348571*^9, 3.4503807633871517`*^9}},
 CellID->732790230],

Cell[BoxData[
 RowBox[{
  RowBox[{"potential1", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"q_", ",", " ", "x_", ",", " ", "y_"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x1_", ",", " ", "y1_"}], "}"}]}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"q", "/", 
   RowBox[{"Max", "[", 
    RowBox[{"rmin", ",", " ", 
     RowBox[{"Sqrt", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "-", "x1"}], ")"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"y", "-", "y1"}], ")"}], "2"]}], "]"}]}], "]"}]}]}]], "Input",\

 InitializationCell->True,
 CellChangeTimes->{{3.450380504113525*^9, 3.450380550701743*^9}, {
  3.450380589946854*^9, 3.450380680966268*^9}, {3.4503807283298197`*^9, 
  3.450380755319721*^9}},
 CellID->2035355937],

Cell[BoxData[
 RowBox[{
  RowBox[{"potential", "[", 
   RowBox[{"charges_", ",", " ", 
    RowBox[{"{", 
     RowBox[{"x1_", ",", " ", "y1_"}], "}"}]}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Total", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"potential1", "[", 
      RowBox[{"#", ",", 
       RowBox[{"{", 
        RowBox[{"x1", ",", " ", "y1"}], "}"}]}], "]"}], "&"}], "/@", 
    "charges"}], "]"}], " "}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.450380772147183*^9, 3.450380843155686*^9}, {
  3.4504166700238543`*^9, 3.4504167432560863`*^9}, {3.450416781127943*^9, 
  3.450416863011792*^9}},
 CellID->1205432723],

Cell[BoxData[
 RowBox[{
  RowBox[{"PlatesColor", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"0.5", ",", " ", "0.0", ",", " ", "0.0"}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.35696210375764*^9, {3.450625839800622*^9, 3.450625872771577*^9}},
 CellID->660919326],

Cell[BoxData[
 RowBox[{
  RowBox[{"field", "[", 
   RowBox[{"pot_", ",", " ", 
    RowBox[{"{", 
     RowBox[{"x_", ",", " ", "y_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"pot", "[", 
     RowBox[{"x", ",", " ", "y"}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "y"}], "}"}], "}"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellID->1359236971],

Cell[BoxData[
 RowBox[{
  RowBox[{"PlotMirrorCharges", "[", "charges_", "]"}], ":=", 
  RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Join", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Replace", "[", 
       RowBox[{"charges", ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"q_", ",", " ", "x_", ",", " ", "y_"}], "}"}], 
         "\[RuleDelayed]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"q", ">", "0"}], ",", " ", "Red", ",", " ", "Blue"}], 
            "]"}], ",", " ", 
           RowBox[{"Disk", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"x", ",", " ", "y"}], "}"}], ",", "rmin"}], "]"}]}], 
          "}"}]}], ",", " ", 
        RowBox[{"{", "1", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Black", ",", " ", "\[IndentingNewLine]", 
          RowBox[{"Thickness", "[", "0.05", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Dashing", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "/", "30"}], ",", " ", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"y", "\[Equal]", "0"}], "||", 
                RowBox[{"y", "\[Equal]", "1"}]}], ",", " ", "0", ",", " ", 
               RowBox[{"2", "/", "20"}]}], "]"}]}], "}"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"y", "\[Equal]", "0"}], "||", 
             RowBox[{"y", "\[Equal]", "1"}]}], ",", " ", "PlatesColor", ",", 
            " ", 
            RowBox[{"RGBColor", "[", 
             RowBox[{"0.5", ",", " ", "0.5", ",", " ", "0.5"}], "]"}]}], 
           "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", " ", "y"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"1", ",", " ", "y"}], "}"}]}], "}"}], "]"}]}], "}"}], 
        ",", " ", 
        RowBox[{"{", 
         RowBox[{"y", " ", ",", " ", 
          RowBox[{"-", "4"}], ",", " ", "4"}], "}"}]}], "]"}]}], "]"}], ",", 
    " ", "1"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.450417493285956*^9, 3.450417503235914*^9}, {
  3.4504176672776947`*^9, 3.4504178316127367`*^9}, {3.4504178837103653`*^9, 
  3.4504178845216827`*^9}, {3.450417958087932*^9, 3.4504179698945312`*^9}, {
  3.450418003870422*^9, 3.450418025177504*^9}, {3.450418189850027*^9, 
  3.4504182815946627`*^9}, {3.4504183216839533`*^9, 3.4504183276670313`*^9}, {
  3.450418369636269*^9, 3.4504183729931507`*^9}, {3.450418448160305*^9, 
  3.450418507506215*^9}, {3.450418541287558*^9, 3.4504186265566177`*^9}, {
  3.45055287136779*^9, 3.4505528758022337`*^9}, {3.4506257940284557`*^9, 
  3.450625836238158*^9}, {3.450625920549959*^9, 3.450625921182152*^9}},
 CellID->1439303041],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "mcharges", ",", " ", "pot", ",", " ", "f", ",", " ", "ConPlot", ",", 
       " ", "StrePlot", ",", " ", "Plates"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"mcharges", "=", 
       RowBox[{"mirrorN", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"1", ",", " ", 
             RowBox[{
             "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",",
              " ", 
             RowBox[{
             "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
            "}"}], "}"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"0", ",", " ", "1"}], "}"}], ",", " ", "n"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pot", "[", 
        RowBox[{"x_", ",", " ", "y_"}], "]"}], "=", 
       RowBox[{"potential", "[", 
        RowBox[{"mcharges", ",", " ", 
         RowBox[{"{", 
          RowBox[{"x", ",", " ", "y"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"x_", ",", " ", "y_"}], "]"}], "=", 
       RowBox[{"field", "[", 
        RowBox[{"pot", ",", " ", 
         RowBox[{"{", 
          RowBox[{"x", ",", " ", "y"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ConPlot", "=", 
       RowBox[{"ContourPlot", "[", 
        RowBox[{
         RowBox[{"pot", "[", 
          RowBox[{"x", ",", " ", "y"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"x", ",", " ", 
           RowBox[{"-", "1"}], ",", " ", "1"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"y", ",", " ", "0", ",", " ", "1"}], "}"}], ",", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"Contours", "\[Rule]", "20"}], ",", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"ContourShading", "\[Rule]", "None"}], ",", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"ContourStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Thickness", "[", "0.005", "]"}], ",", " ", "Black"}], 
           "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"StrePlot", "=", 
       RowBox[{"StreamPlot", "[", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"x", ",", " ", "y"}], "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"x", ",", " ", 
           RowBox[{"-", "1"}], ",", " ", "1"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"y", ",", " ", "0", ",", " ", "1"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"StreamStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Thickness", "[", "0.002", "]"}], ",", " ", 
            RowBox[{"RGBColor", "[", 
             RowBox[{"0", ",", " ", "0", ",", " ", "0.5"}], "]"}]}], 
           "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Plates", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.0125", "]"}], ",", " ", "PlatesColor", 
          ",", "\[IndentingNewLine]", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", " ", "1"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"1", ",", " ", "1"}], "}"}]}], "}"}], "]"}], ",", " ", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", " ", "0"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"1", ",", " ", "0"}], "}"}]}], "}"}], "]"}]}], "}"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Grid", "[", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Show", "[", 
           RowBox[{
           "ConPlot", ",", " ", "StrePlot", ",", " ", "Plates", ",", " ", 
            RowBox[{"ImageSize", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"500", ",", "300"}], "}"}]}]}], "]"}], ",", 
          RowBox[{"Graphics", "[", 
           RowBox[{
            RowBox[{"PlotMirrorCharges", "[", "mcharges", "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"ImageSize", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"70", ",", "300"}], "}"}]}]}], "]"}]}], "}"}], "}"}], 
       "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
   " ", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "n", ",", " ", "0", ",", " ", 
       "\"\<number of image charges in each direction\>\""}], "}"}], ",", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "4"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", 
         RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", "Locator"}], "}"}], ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}], ",", 
   RowBox[{"TrackedSymbols", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.35696210375764*^9, {3.4504226355377913`*^9, 3.450422681518845*^9}, {
   3.450426340557774*^9, 3.450426350055645*^9}, {3.450456280964011*^9, 
   3.450456316377461*^9}, {3.450552899100563*^9, 3.450552978756528*^9}, {
   3.450553067411392*^9, 3.4505530713997912`*^9}, 3.4505564625291986`*^9, 
   3.4505565587485647`*^9, {3.450556593701913*^9, 3.450556629436517*^9}, {
   3.450556664624242*^9, 3.450556671139909*^9}, {3.4505567082026463`*^9, 
   3.450556744187251*^9}, {3.450625426035544*^9, 3.450625452406839*^9}, {
   3.450625488304728*^9, 3.450625528496016*^9}, {3.450625568583931*^9, 
   3.4506256621372957`*^9}, {3.4506257086461487`*^9, 
   3.4506257263450947`*^9}, {3.450625855046315*^9, 3.450625865646562*^9}, {
   3.450796894342746*^9, 3.4507968960146313`*^9}, {3.450796974796386*^9, 
   3.4507969787651615`*^9}, {3.450797038062416*^9, 3.4507970391874228`*^9}, {
   3.4507970779064207`*^9, 3.4507970780939217`*^9}, 3.4507971468443623`*^9, {
   3.4507972031572227`*^9, 3.4507972583138256`*^9}, {3.4511544393345366`*^9, 
   3.4511544485444574`*^9}, {3.4511549719797955`*^9, 3.45115499212781*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 0, $CellContext`p$$ = {0, 
     Rational[1, 2]}, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`n$$], 0, 
       "number of image charges in each direction"}, {0, 1, 2, 3, 4}}, {{
       Hold[$CellContext`p$$], {0, 
        Rational[1, 2]}}, {-1, 0}, {1, 1}}}, Typeset`size$$ = {
    578., {147.5, 152.5}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False, $CellContext`n$605047$$ = 
    0, $CellContext`p$605048$$ = {0, 0}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`n$$ = 0, $CellContext`p$$ = {0, 
          Rational[1, 2]}}, "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$605047$$, 0], 
        Hold[$CellContext`p$$, $CellContext`p$605048$$, {0, 0}]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`mcharges$, $CellContext`pot$, $CellContext`f$, \
$CellContext`ConPlot$, $CellContext`StrePlot$, $CellContext`Plates$}, \
$CellContext`mcharges$ = $CellContext`mirrorN[{{{1, 
              Part[$CellContext`p$$, 1], 
              Part[$CellContext`p$$, 2]}}}, {0, 
           1}, $CellContext`n$$]; $CellContext`pot$[
           Pattern[$CellContext`x$, 
            Blank[]], 
           Pattern[$CellContext`y$, 
            
            Blank[]]] = $CellContext`potential[$CellContext`mcharges$, \
{$CellContext`x$, $CellContext`y$}]; $CellContext`f$[
           Pattern[$CellContext`x$, 
            Blank[]], 
           Pattern[$CellContext`y$, 
            
            Blank[]]] = $CellContext`field[$CellContext`pot$, \
{$CellContext`x$, $CellContext`y$}]; $CellContext`ConPlot$ = ContourPlot[
           $CellContext`pot$[$CellContext`x, $CellContext`y], \
{$CellContext`x, -1, 1}, {$CellContext`y, 0, 1}, Contours -> 20, AspectRatio -> 
           Automatic, ContourShading -> None, ContourStyle -> {
             Thickness[0.005], Black}]; $CellContext`StrePlot$ = StreamPlot[
           $CellContext`f$[$CellContext`x, $CellContext`y], {$CellContext`x, \
-1, 1}, {$CellContext`y, 0, 1}, StreamStyle -> {
             Thickness[0.002], 
             RGBColor[0, 0, 0.5]}]; $CellContext`Plates$ = Graphics[{
            Thickness[0.0125], $CellContext`PlatesColor, 
            Line[{{-1, 1}, {1, 1}}], 
            Line[{{-1, 0}, {1, 0}}]}]; Grid[{{
            
            Show[$CellContext`ConPlot$, $CellContext`StrePlot$, \
$CellContext`Plates$, ImageSize -> {500, 300}], 
            Graphics[
             $CellContext`PlotMirrorCharges[$CellContext`mcharges$], 
             ImageSize -> {70, 300}]}}]], 
      "Specifications" :> {{{$CellContext`n$$, 0, 
          "number of image charges in each direction"}, {0, 1, 2, 3, 
         4}}, {{$CellContext`p$$, {0, 
           Rational[1, 2]}}, {-1, 0}, {1, 1}, ControlType -> Locator}}, 
      "Options" :> {TrackedSymbols -> True}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{629., {194., 199.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>(({$CellContext`mirrorN[
          Pattern[$CellContext`charges, 
           Blank[]], 
          Pattern[$CellContext`p, 
           Blank[]], 
          Pattern[$CellContext`n, 
           Blank[]]] := Flatten[
          
          NestList[$CellContext`mirror[#, $CellContext`p]& , \
$CellContext`charges, $CellContext`n], 2], $CellContext`mirror[
          Pattern[$CellContext`charges, 
           Blank[]], 
          PatternTest[
           Pattern[$CellContext`p, 
            Blank[]], AtomQ]] := Replace[$CellContext`charges, {
            Pattern[$CellContext`q, 
             Blank[]], 
            Pattern[$CellContext`x, 
             Blank[]], 
            Pattern[$CellContext`y, 
             Blank[]]} -> {-$CellContext`q, $CellContext`x, 
            2 $CellContext`p - $CellContext`y}, {1}], $CellContext`mirror[
          Pattern[$CellContext`charges, 
           Blank[]], {
           Pattern[$CellContext`p1, 
            Blank[]], 
           Pattern[$CellContext`p2, 
            Blank[]]}] := {
          $CellContext`mirror[
           Part[$CellContext`charges, -1], $CellContext`p1], 
          $CellContext`mirror[
           
           Part[$CellContext`charges, 
            1], $CellContext`p2]}, $CellContext`potential[
          Pattern[$CellContext`charges, 
           Blank[]], {
           Pattern[$CellContext`x1, 
            Blank[]], 
           Pattern[$CellContext`y1, 
            Blank[]]}] := Total[
          
          Map[$CellContext`potential1[#, {$CellContext`x1, $CellContext`y1}]& \
, $CellContext`charges]], $CellContext`potential1[{
           Pattern[$CellContext`q, 
            Blank[]], 
           Pattern[$CellContext`x, 
            Blank[]], 
           Pattern[$CellContext`y, 
            Blank[]]}, {
           Pattern[$CellContext`x1, 
            Blank[]], 
           Pattern[$CellContext`y1, 
            Blank[]]}] := $CellContext`q/Max[$CellContext`rmin, 
          
          Sqrt[($CellContext`x - $CellContext`x1)^2 + ($CellContext`y - \
$CellContext`y1)^2]], $CellContext`rmin = 0.1, $CellContext`field[
          Pattern[$CellContext`pot, 
           Blank[]], {
           Pattern[$CellContext`x, 
            Blank[]], 
           Pattern[$CellContext`y, 
            Blank[]]}] := D[
          $CellContext`pot[$CellContext`x, $CellContext`y], {{$CellContext`x, \
$CellContext`y}}], $CellContext`PlatesColor = 
        RGBColor[0.5, 0., 0.], $CellContext`PlotMirrorCharges[
          Pattern[$CellContext`charges, 
           Blank[]]] := Flatten[
          Join[
           Replace[$CellContext`charges, {
              Pattern[$CellContext`q, 
               Blank[]], 
              Pattern[$CellContext`x, 
               Blank[]], 
              Pattern[$CellContext`y, 
               Blank[]]} :> {
              If[$CellContext`q > 0, Red, Blue], 
              Disk[{$CellContext`x, $CellContext`y}, $CellContext`rmin]}, {
            1}], 
           Table[{Black, 
             Thickness[0.05], 
             Dashing[{1/30, 
               If[
                Or[$CellContext`y == 0, $CellContext`y == 1], 0, 2/20]}], 
             If[
              
              Or[$CellContext`y == 0, $CellContext`y == 
               1], $CellContext`PlatesColor, 
              RGBColor[0.5, 0.5, 0.5]], 
             
             Line[{{-1, $CellContext`y}, {
               1, $CellContext`y}}]}, {$CellContext`y, -4, 4}]], 1]}; 
      Typeset`initDone$$ = True); ReleaseHold[
       HoldComplete[{$CellContext`mirror[
           Pattern[$CellContext`charges, 
            Blank[]], 
           PatternTest[
            Pattern[$CellContext`p, 
             Blank[]], AtomQ]] := Replace[$CellContext`charges, {
             Pattern[$CellContext`q, 
              Blank[]], 
             Pattern[$CellContext`x, 
              Blank[]], 
             Pattern[$CellContext`y, 
              Blank[]]} -> {-$CellContext`q, $CellContext`x, 
             2 $CellContext`p - $CellContext`y}, {1}], $CellContext`mirror[
           Pattern[$CellContext`charges, 
            Blank[]], {
            Pattern[$CellContext`p1, 
             Blank[]], 
            Pattern[$CellContext`p2, 
             Blank[]]}] := {
           $CellContext`mirror[
            Part[$CellContext`charges, -1], $CellContext`p1], 
           $CellContext`mirror[
            Part[$CellContext`charges, 
             1], $CellContext`p2]}, $CellContext`mirrorN[
           Pattern[$CellContext`charges, 
            Blank[]], 
           Pattern[$CellContext`p, 
            Blank[]], 
           Pattern[$CellContext`n, 
            Blank[]]] := Flatten[
           
           NestList[$CellContext`mirror[#, $CellContext`p]& , \
$CellContext`charges, $CellContext`n], 2], $CellContext`rmin = 0.1; 
         Null, $CellContext`potential1[{
            Pattern[$CellContext`q, 
             Blank[]], 
            Pattern[$CellContext`x, 
             Blank[]], 
            Pattern[$CellContext`y, 
             Blank[]]}, {
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`y1, 
             Blank[]]}] := $CellContext`q/Max[$CellContext`rmin, 
           
           Sqrt[($CellContext`x - $CellContext`x1)^2 + ($CellContext`y - \
$CellContext`y1)^2]], $CellContext`potential[
           Pattern[$CellContext`charges, 
            Blank[]], {
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`y1, 
             Blank[]]}] := Total[
           
           Map[$CellContext`potential1[#, {$CellContext`x1, $CellContext`y1}]& \
, $CellContext`charges]], $CellContext`PlatesColor = RGBColor[0.5, 0., 0.]; 
         Null, $CellContext`field[
           Pattern[$CellContext`pot, 
            Blank[]], {
            Pattern[$CellContext`x, 
             Blank[]], 
            Pattern[$CellContext`y, 
             Blank[]]}] := D[
           $CellContext`pot[$CellContext`x, $CellContext`y], \
{{$CellContext`x, $CellContext`y}}], $CellContext`PlotMirrorCharges[
           Pattern[$CellContext`charges, 
            Blank[]]] := Flatten[
           Join[
            Replace[$CellContext`charges, {
               Pattern[$CellContext`q, 
                Blank[]], 
               Pattern[$CellContext`x, 
                Blank[]], 
               Pattern[$CellContext`y, 
                Blank[]]} :> {
               If[$CellContext`q > 0, Red, Blue], 
               Disk[{$CellContext`x, $CellContext`y}, $CellContext`rmin]}, {
             1}], 
            Table[{Black, 
              Thickness[0.05], 
              Dashing[{1/30, 
                If[
                 Or[$CellContext`y == 0, $CellContext`y == 1], 0, 2/20]}], 
              If[
               
               Or[$CellContext`y == 0, $CellContext`y == 
                1], $CellContext`PlatesColor, 
               RGBColor[0.5, 0.5, 0.5]], 
              
              Line[{{-1, $CellContext`y}, {
                1, $CellContext`y}}]}, {$CellContext`y, -4, 4}]], 1]}]]; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->242229766],

Cell[CellGroupData[{

Cell["CAPTION", "Section",
 CellFrame->{{0, 0}, {1, 0}},
 CellFrameColor->RGBColor[0.87, 0.87, 0.87],
 FontFamily->"Helvetica",
 FontSize->12,
 FontWeight->"Bold",
 FontColor->RGBColor[0.597406, 0, 0.0527047]],

Cell["\<\
The electrostatic problem of a point charge inside a capacitor made of two \
parallel grounded electrodes is illustrated in this Demonstration. The \
electric potential and field can be calculated as an infinite sum of image \
charges. On the left you see the space between the two parallel plates \
represented by horizontal red lines.  Move the point charge and view the \
resulting electric field (blue stream-lines) and equipotential lines (black). \
On the right, you can see the set of real and image charges (red for \
positive, blue for negative) as well as the location of the two real plates \
(solid red lines) and several of their images (dashed gray lines).\
\>", "Text"]
}, Close]]
}, Open  ]],

Cell[CellGroupData[{

Cell["DETAILS", "Section",
 CellFrame->{{0, 0}, {1, 0}},
 CellFrameColor->RGBColor[0.87, 0.87, 0.87],
 FontFamily->"Helvetica",
 FontSize->12,
 FontWeight->"Bold",
 FontColor->RGBColor[0.597406, 0, 0.0527047]],

Cell["\<\
The method of image charges is one of the basic tools for the solution of \
electrostatic problems. Given a set of charges and boundary conditions, the \
method finds image charges outside the problem domain, creating a potential \
that, when added to the one created by the real charges, fulfills the \
boundary conditions. The resulting potential is a solution of the problem \
since the solution of Poisson's equation inside a domain is unique, given the \
distribution of charges inside and the potential at the boundary.\
\>", "Text"],

Cell["\<\
This Demonstration illustrates the method of image charges by finding the \
electrostatic potential and the electric field created by a charge between \
two parallel grounded electrodes. In this case the problem is solved by an \
infinite sum of charges that have to be truncated. You can see how the \
solution converges by including more and more image charges in the sum. In \
the exact solution the equipotential lines are parallel to the electrodes \
while the field is perpendicular to them. \
\>", "Text"]
}, Close]],

Cell[CellGroupData[{

Cell["THIS NOTEBOOK IS THE SOURCE CODE FROM", "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellMargins->{{48, 10}, {4, 28}},
 CellGroupingRules->{"SectionGrouping", 25},
 CellFrameMargins->{{48, 48}, {6, 5}},
 CellFrameColor->RGBColor[0.87, 0.87, 0.87],
 FontFamily->"Helvetica",
 FontSize->10,
 FontWeight->"Bold",
 FontColor->RGBColor[0.597406, 0, 0.0527047]],

Cell[TextData[{
 "\"",
 ButtonBox["Method of Image Charges: Point Charge inside a Planar Capacitor",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/\
MethodOfImageChargesPointChargeInsideAPlanarCapacitor/"], None},
  ButtonNote->
   "http://demonstrations.wolfram.com/\
MethodOfImageChargesPointChargeInsideAPlanarCapacitor/"],
 "\"",
 " from ",
 ButtonBox["the Wolfram Demonstrations Project",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/"], None},
  ButtonNote->"http://demonstrations.wolfram.com/"],
 "\[ParagraphSeparator]\[NonBreakingSpace]",
 ButtonBox["http://demonstrations.wolfram.com/\
MethodOfImageChargesPointChargeInsideAPlanarCapacitor/",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/\
MethodOfImageChargesPointChargeInsideAPlanarCapacitor/"], None},
  ButtonNote->
   "http://demonstrations.wolfram.com/\
MethodOfImageChargesPointChargeInsideAPlanarCapacitor/"]
}], "Text",
 CellMargins->{{48, Inherited}, {0, Inherited}},
 FontFamily->"Verdana",
 FontSize->10,
 FontColor->GrayLevel[0.5]],

Cell[TextData[{
 "Contributed by: ",
 ButtonBox["Alejandro Luque Estepa",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/author.html?author=Alejandro+Luque+\
Estepa"], None},
  ButtonNote->
   "http://demonstrations.wolfram.com/author.html?author=Alejandro+Luque+\
Estepa"]
}], "Text",
 CellDingbat->"\[FilledSmallSquare]",
 CellMargins->{{66, 48}, {2, 4}},
 FontFamily->"Verdana",
 FontSize->10,
 FontColor->GrayLevel[0.6]],

Cell[CellGroupData[{

Cell[TextData[{
 "A full-function Wolfram ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " system (Version 6 or higher) is required to edit this notebook.\n",
 StyleBox[ButtonBox["GET WOLFRAM MATHEMATICA \[RightGuillemet]",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.wolfram.com/products/mathematica/"], None},
  ButtonNote->"http://www.wolfram.com/products/mathematica/"],
  FontFamily->"Helvetica",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[1, 0.42, 0]]
}], "Text",
 CellFrame->True,
 CellMargins->{{48, 68}, {8, 28}},
 CellFrameMargins->12,
 CellFrameColor->RGBColor[0.87, 0.87, 0.87],
 CellChangeTimes->{3.3750111182355957`*^9},
 ParagraphSpacing->{1., 1.},
 FontFamily->"Verdana",
 FontSize->10,
 FontColor->GrayLevel[0.411765],
 Background->RGBColor[1, 1, 1]],

Cell[TextData[{
 "\[Copyright] ",
 StyleBox[ButtonBox["Wolfram Demonstrations Project & Contributors",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/"], None},
  ButtonNote->"http://demonstrations.wolfram.com/"],
  FontColor->GrayLevel[0.6]],
 "\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
 StyleBox[ButtonBox["Terms of Use",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/termsofuse.html"], None},
  ButtonNote->"http://demonstrations.wolfram.com/termsofuse.html"],
  FontColor->GrayLevel[0.6]],
 "\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
 StyleBox[ButtonBox["Make a new version of this Demonstration \
\[RightGuillemet]",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/participate/upload.jsp?id=\
MethodOfImageChargesPointChargeInsideAPlanarCapacitor"], None},
  ButtonNote->None],
  FontColor->GrayLevel[0.6]]
}], "Text",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellMargins->{{48, 10}, {20, 50}},
 CellFrameMargins->{{6, 0}, {6, 6}},
 CellFrameColor->GrayLevel[0.6],
 FontFamily->"Verdana",
 FontSize->9,
 FontColor->GrayLevel[0.6]]
}, Open  ]]
}, Open  ]]
},
Editable->True,
Saveable->False,
ScreenStyleEnvironment->"Working",
CellInsertionPointCell->None,
WindowSize->{780, 650},
WindowMargins->{{Inherited, Inherited}, {Inherited, 0}},
WindowElements->{
 "StatusArea", "MemoryMonitor", "MagnificationPopUp", "VerticalScrollBar", 
  "MenuBar"},
WindowTitle->"Method of Image Charges: Point Charge inside a Planar Capacitor \
- Source",
DockedCells->{},
CellContext->Notebook,
FrontEndVersion->"8.0 for Microsoft Windows (32-bit) (November 7, 2010)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[667, 24, 191, 5, 70, "Section"],
Cell[861, 31, 3700, 64, 70, "Section"],
Cell[4564, 97, 866, 22, 70, "Input",
 InitializationCell->True,
 CellID->1101881562],
Cell[5433, 121, 1110, 26, 70, "Input",
 InitializationCell->True,
 CellID->139026514],
Cell[6546, 149, 555, 15, 70, "Input",
 InitializationCell->True,
 CellID->2007989349],
Cell[7104, 166, 187, 5, 70, "Input",
 InitializationCell->True,
 CellID->732790230],
Cell[7294, 173, 818, 25, 70, "Input",
 InitializationCell->True,
 CellID->2035355937],
Cell[8115, 200, 648, 19, 70, "Input",
 InitializationCell->True,
 CellID->1205432723],
Cell[8766, 221, 304, 9, 70, "Input",
 InitializationCell->True,
 CellID->660919326],
Cell[9073, 232, 423, 14, 70, "Input",
 InitializationCell->True,
 CellID->1359236971],
Cell[9499, 248, 3105, 73, 70, "Input",
 InitializationCell->True,
 CellID->1439303041],
Cell[12607, 323, 6692, 162, 70, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19336, 490, 10829, 260, 70, "Output",
 CellID->242229766],
Cell[CellGroupData[{
Cell[30190, 754, 209, 6, 70, "Section"],
Cell[30402, 762, 694, 10, 70, "Text"]
}, Close]]
}, Open  ]],
Cell[CellGroupData[{
Cell[31144, 778, 209, 6, 70, "Section"],
Cell[31356, 786, 549, 8, 70, "Text"],
Cell[31908, 796, 522, 8, 70, "Text"]
}, Close]],
Cell[CellGroupData[{
Cell[32466, 809, 355, 9, 70, "Text",
 CellGroupingRules->{"SectionGrouping", 25}],
Cell[32824, 820, 1123, 31, 70, "Text"],
Cell[33950, 853, 462, 15, 70, "Text"],
Cell[CellGroupData[{
Cell[34437, 872, 815, 24, 70, "Text"],
Cell[35255, 898, 1225, 33, 70, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
(* NotebookSignature 7SN@JhvMTIXxQBTNlvZbOf9j *)
